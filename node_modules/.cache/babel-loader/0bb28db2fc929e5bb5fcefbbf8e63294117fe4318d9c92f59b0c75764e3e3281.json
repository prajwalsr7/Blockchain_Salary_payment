{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) define([\"../../lib/codemirror\"], mod);else mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"cmake\", function () {\n    var variable_regex = /({)?[a-zA-Z0-9_]+(})?/;\n    function tokenString(stream, state) {\n      var current,\n        prev,\n        found_var = false;\n      while (!stream.eol() && (current = stream.next()) != state.pending) {\n        if (current === '$' && prev != '\\\\' && state.pending == '\"') {\n          found_var = true;\n          break;\n        }\n        prev = current;\n      }\n      if (found_var) {\n        stream.backUp(1);\n      }\n      if (current == state.pending) {\n        state.continueString = false;\n      } else {\n        state.continueString = true;\n      }\n      return \"string\";\n    }\n    function tokenize(stream, state) {\n      var ch = stream.next();\n\n      // Have we found a variable?\n      if (ch === '$') {\n        if (stream.match(variable_regex)) {\n          return 'variable-2';\n        }\n        return 'variable';\n      }\n      // Should we still be looking for the end of a string?\n      if (state.continueString) {\n        // If so, go through the loop again\n        stream.backUp(1);\n        return tokenString(stream, state);\n      }\n      // Do we just have a function on our hands?\n      // In 'cmake_minimum_required (VERSION 2.8.8)', 'cmake_minimum_required' is matched\n      if (stream.match(/(\\s+)?\\w+\\(/) || stream.match(/(\\s+)?\\w+\\ \\(/)) {\n        stream.backUp(1);\n        return 'def';\n      }\n      if (ch == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      // Have we found a string?\n      if (ch == \"'\" || ch == '\"') {\n        // Store the type (single or double)\n        state.pending = ch;\n        // Perform the looping function to find the end\n        return tokenString(stream, state);\n      }\n      if (ch == '(' || ch == ')') {\n        return 'bracket';\n      }\n      if (ch.match(/[0-9]/)) {\n        return 'number';\n      }\n      stream.eatWhile(/[\\w-]/);\n      return null;\n    }\n    return {\n      startState: function () {\n        var state = {};\n        state.inDefinition = false;\n        state.inInclude = false;\n        state.continueString = false;\n        state.pending = false;\n        return state;\n      },\n      token: function (stream, state) {\n        if (stream.eatSpace()) return null;\n        return tokenize(stream, state);\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-cmake\", \"cmake\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","variable_regex","tokenString","stream","state","current","prev","found_var","eol","next","pending","backUp","continueString","tokenize","ch","match","skipToEnd","eatWhile","startState","inDefinition","inInclude","token","eatSpace","defineMIME"],"sources":["C:/Users/User/Downloads/Multisender-App-main/node_modules/codemirror/mode/cmake/cmake.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd)\n    define([\"../../lib/codemirror\"], mod);\n  else\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"cmake\", function () {\n  var variable_regex = /({)?[a-zA-Z0-9_]+(})?/;\n\n  function tokenString(stream, state) {\n    var current, prev, found_var = false;\n    while (!stream.eol() && (current = stream.next()) != state.pending) {\n      if (current === '$' && prev != '\\\\' && state.pending == '\"') {\n        found_var = true;\n        break;\n      }\n      prev = current;\n    }\n    if (found_var) {\n      stream.backUp(1);\n    }\n    if (current == state.pending) {\n      state.continueString = false;\n    } else {\n      state.continueString = true;\n    }\n    return \"string\";\n  }\n\n  function tokenize(stream, state) {\n    var ch = stream.next();\n\n    // Have we found a variable?\n    if (ch === '$') {\n      if (stream.match(variable_regex)) {\n        return 'variable-2';\n      }\n      return 'variable';\n    }\n    // Should we still be looking for the end of a string?\n    if (state.continueString) {\n      // If so, go through the loop again\n      stream.backUp(1);\n      return tokenString(stream, state);\n    }\n    // Do we just have a function on our hands?\n    // In 'cmake_minimum_required (VERSION 2.8.8)', 'cmake_minimum_required' is matched\n    if (stream.match(/(\\s+)?\\w+\\(/) || stream.match(/(\\s+)?\\w+\\ \\(/)) {\n      stream.backUp(1);\n      return 'def';\n    }\n    if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    // Have we found a string?\n    if (ch == \"'\" || ch == '\"') {\n      // Store the type (single or double)\n      state.pending = ch;\n      // Perform the looping function to find the end\n      return tokenString(stream, state);\n    }\n    if (ch == '(' || ch == ')') {\n      return 'bracket';\n    }\n    if (ch.match(/[0-9]/)) {\n      return 'number';\n    }\n    stream.eatWhile(/[\\w-]/);\n    return null;\n  }\n  return {\n    startState: function () {\n      var state = {};\n      state.inDefinition = false;\n      state.inInclude = false;\n      state.continueString = false;\n      state.pending = false;\n      return state;\n    },\n    token: function (stream, state) {\n      if (stream.eatSpace()) return null;\n      return tokenize(stream, state);\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-cmake\", \"cmake\");\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}