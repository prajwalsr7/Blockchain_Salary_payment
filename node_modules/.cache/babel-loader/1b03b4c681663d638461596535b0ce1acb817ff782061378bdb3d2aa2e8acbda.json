{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/*\n  DTD mode\n  Ported to CodeMirror by Peter Kroon <plakroon@gmail.com>\n  Report bugs/issues here: https://github.com/codemirror/CodeMirror/issues\n  GitHub: @peterkroon\n*/\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"dtd\", function (config) {\n    var indentUnit = config.indentUnit,\n      type;\n    function ret(style, tp) {\n      type = tp;\n      return style;\n    }\n    function tokenBase(stream, state) {\n      var ch = stream.next();\n      if (ch == \"<\" && stream.eat(\"!\")) {\n        if (stream.eatWhile(/[\\-]/)) {\n          state.tokenize = tokenSGMLComment;\n          return tokenSGMLComment(stream, state);\n        } else if (stream.eatWhile(/[\\w]/)) return ret(\"keyword\", \"doindent\");\n      } else if (ch == \"<\" && stream.eat(\"?\")) {\n        //xml declaration\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return ret(\"meta\", ch);\n      } else if (ch == \"#\" && stream.eatWhile(/[\\w]/)) return ret(\"atom\", \"tag\");else if (ch == \"|\") return ret(\"keyword\", \"separator\");else if (ch.match(/[\\(\\)\\[\\]\\-\\.,\\+\\?>]/)) return ret(null, ch); //if(ch === \">\") return ret(null, \"endtag\"); else\n      else if (ch.match(/[\\[\\]]/)) return ret(\"rule\", ch);else if (ch == \"\\\"\" || ch == \"'\") {\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      } else if (stream.eatWhile(/[a-zA-Z\\?\\+\\d]/)) {\n        var sc = stream.current();\n        if (sc.substr(sc.length - 1, sc.length).match(/\\?|\\+/) !== null) stream.backUp(1);\n        return ret(\"tag\", \"tag\");\n      } else if (ch == \"%\" || ch == \"*\") return ret(\"number\", \"number\");else {\n        stream.eatWhile(/[\\w\\\\\\-_%.{,]/);\n        return ret(null, null);\n      }\n    }\n    function tokenSGMLComment(stream, state) {\n      var dashes = 0,\n        ch;\n      while ((ch = stream.next()) != null) {\n        if (dashes >= 2 && ch == \">\") {\n          state.tokenize = tokenBase;\n          break;\n        }\n        dashes = ch == \"-\" ? dashes + 1 : 0;\n      }\n      return ret(\"comment\", \"comment\");\n    }\n    function tokenString(quote) {\n      return function (stream, state) {\n        var escaped = false,\n          ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && !escaped) {\n            state.tokenize = tokenBase;\n            break;\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        return ret(\"string\", \"tag\");\n      };\n    }\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = tokenBase;\n            break;\n          }\n          stream.next();\n        }\n        return style;\n      };\n    }\n    return {\n      startState: function (base) {\n        return {\n          tokenize: tokenBase,\n          baseIndent: base || 0,\n          stack: []\n        };\n      },\n      token: function (stream, state) {\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        var context = state.stack[state.stack.length - 1];\n        if (stream.current() == \"[\" || type === \"doindent\" || type == \"[\") state.stack.push(\"rule\");else if (type === \"endtag\") state.stack[state.stack.length - 1] = \"endtag\";else if (stream.current() == \"]\" || type == \"]\" || type == \">\" && context == \"rule\") state.stack.pop();else if (type == \"[\") state.stack.push(\"[\");\n        return style;\n      },\n      indent: function (state, textAfter) {\n        var n = state.stack.length;\n        if (textAfter.charAt(0) === ']') n--;else if (textAfter.substr(textAfter.length - 1, textAfter.length) === \">\") {\n          if (textAfter.substr(0, 1) === \"<\") {} else if (type == \"doindent\" && textAfter.length > 1) {} else if (type == \"doindent\") n--;else if (type == \">\" && textAfter.length > 1) {} else if (type == \"tag\" && textAfter !== \">\") {} else if (type == \"tag\" && state.stack[state.stack.length - 1] == \"rule\") n--;else if (type == \"tag\") n++;else if (textAfter === \">\" && state.stack[state.stack.length - 1] == \"rule\" && type === \">\") n--;else if (textAfter === \">\" && state.stack[state.stack.length - 1] == \"rule\") {} else if (textAfter.substr(0, 1) !== \"<\" && textAfter.substr(0, 1) === \">\") n = n - 1;else if (textAfter === \">\") {} else n = n - 1;\n          //over rule them all\n          if (type == null || type == \"]\") n--;\n        }\n        return state.baseIndent + n * indentUnit;\n      },\n      electricChars: \"]>\"\n    };\n  });\n  CodeMirror.defineMIME(\"application/xml-dtd\", \"dtd\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","indentUnit","type","ret","style","tp","tokenBase","stream","state","ch","next","eat","eatWhile","tokenize","tokenSGMLComment","inBlock","match","tokenString","sc","current","substr","length","backUp","dashes","quote","escaped","terminator","eol","startState","base","baseIndent","stack","token","eatSpace","context","push","pop","indent","textAfter","n","charAt","electricChars","defineMIME"],"sources":["C:/Users/User/Downloads/Salary Payments/node_modules/codemirror/mode/dtd/dtd.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/*\n  DTD mode\n  Ported to CodeMirror by Peter Kroon <plakroon@gmail.com>\n  Report bugs/issues here: https://github.com/codemirror/CodeMirror/issues\n  GitHub: @peterkroon\n*/\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"dtd\", function(config) {\n  var indentUnit = config.indentUnit, type;\n  function ret(style, tp) {type = tp; return style;}\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n\n    if (ch == \"<\" && stream.eat(\"!\") ) {\n      if (stream.eatWhile(/[\\-]/)) {\n        state.tokenize = tokenSGMLComment;\n        return tokenSGMLComment(stream, state);\n      } else if (stream.eatWhile(/[\\w]/)) return ret(\"keyword\", \"doindent\");\n    } else if (ch == \"<\" && stream.eat(\"?\")) { //xml declaration\n      state.tokenize = inBlock(\"meta\", \"?>\");\n      return ret(\"meta\", ch);\n    } else if (ch == \"#\" && stream.eatWhile(/[\\w]/)) return ret(\"atom\", \"tag\");\n    else if (ch == \"|\") return ret(\"keyword\", \"separator\");\n    else if (ch.match(/[\\(\\)\\[\\]\\-\\.,\\+\\?>]/)) return ret(null, ch);//if(ch === \">\") return ret(null, \"endtag\"); else\n    else if (ch.match(/[\\[\\]]/)) return ret(\"rule\", ch);\n    else if (ch == \"\\\"\" || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (stream.eatWhile(/[a-zA-Z\\?\\+\\d]/)) {\n      var sc = stream.current();\n      if( sc.substr(sc.length-1,sc.length).match(/\\?|\\+/) !== null )stream.backUp(1);\n      return ret(\"tag\", \"tag\");\n    } else if (ch == \"%\" || ch == \"*\" ) return ret(\"number\", \"number\");\n    else {\n      stream.eatWhile(/[\\w\\\\\\-_%.{,]/);\n      return ret(null, null);\n    }\n  }\n\n  function tokenSGMLComment(stream, state) {\n    var dashes = 0, ch;\n    while ((ch = stream.next()) != null) {\n      if (dashes >= 2 && ch == \">\") {\n        state.tokenize = tokenBase;\n        break;\n      }\n      dashes = (ch == \"-\") ? dashes + 1 : 0;\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return ret(\"string\", \"tag\");\n    };\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    };\n  }\n\n  return {\n    startState: function(base) {\n      return {tokenize: tokenBase,\n              baseIndent: base || 0,\n              stack: []};\n    },\n\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n\n      var context = state.stack[state.stack.length-1];\n      if (stream.current() == \"[\" || type === \"doindent\" || type == \"[\") state.stack.push(\"rule\");\n      else if (type === \"endtag\") state.stack[state.stack.length-1] = \"endtag\";\n      else if (stream.current() == \"]\" || type == \"]\" || (type == \">\" && context == \"rule\")) state.stack.pop();\n      else if (type == \"[\") state.stack.push(\"[\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      var n = state.stack.length;\n\n      if( textAfter.charAt(0) === ']' )n--;\n      else if(textAfter.substr(textAfter.length-1, textAfter.length) === \">\"){\n        if(textAfter.substr(0,1) === \"<\") {}\n        else if( type == \"doindent\" && textAfter.length > 1 ) {}\n        else if( type == \"doindent\")n--;\n        else if( type == \">\" && textAfter.length > 1) {}\n        else if( type == \"tag\" && textAfter !== \">\") {}\n        else if( type == \"tag\" && state.stack[state.stack.length-1] == \"rule\")n--;\n        else if( type == \"tag\")n++;\n        else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\" && type === \">\")n--;\n        else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\") {}\n        else if( textAfter.substr(0,1) !== \"<\" && textAfter.substr(0,1) === \">\" )n=n-1;\n        else if( textAfter === \">\") {}\n        else n=n-1;\n        //over rule them all\n        if(type == null || type == \"]\")n--;\n      }\n\n      return state.baseIndent + n * indentUnit;\n    },\n\n    electricChars: \"]>\"\n  };\n});\n\nCodeMirror.defineMIME(\"application/xml-dtd\", \"dtd\");\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}