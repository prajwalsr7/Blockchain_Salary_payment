{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"properties\", function () {\n    return {\n      token: function (stream, state) {\n        var sol = stream.sol() || state.afterSection;\n        var eol = stream.eol();\n        state.afterSection = false;\n        if (sol) {\n          if (state.nextMultiline) {\n            state.inMultiline = true;\n            state.nextMultiline = false;\n          } else {\n            state.position = \"def\";\n          }\n        }\n        if (eol && !state.nextMultiline) {\n          state.inMultiline = false;\n          state.position = \"def\";\n        }\n        if (sol) {\n          while (stream.eatSpace()) {}\n        }\n        var ch = stream.next();\n        if (sol && (ch === \"#\" || ch === \"!\" || ch === \";\")) {\n          state.position = \"comment\";\n          stream.skipToEnd();\n          return \"comment\";\n        } else if (sol && ch === \"[\") {\n          state.afterSection = true;\n          stream.skipTo(\"]\");\n          stream.eat(\"]\");\n          return \"header\";\n        } else if (ch === \"=\" || ch === \":\") {\n          state.position = \"quote\";\n          return null;\n        } else if (ch === \"\\\\\" && state.position === \"quote\") {\n          if (stream.eol()) {\n            // end of line?\n            // Multiline value\n            state.nextMultiline = true;\n          }\n        }\n        return state.position;\n      },\n      startState: function () {\n        return {\n          position: \"def\",\n          // Current position, \"def\", \"quote\" or \"comment\"\n          nextMultiline: false,\n          // Is the next line multiline value\n          inMultiline: false,\n          // Is the current line a multiline value\n          afterSection: false // Did we just open a section\n        };\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-properties\", \"properties\");\n  CodeMirror.defineMIME(\"text/x-ini\", \"properties\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","token","stream","state","sol","afterSection","eol","nextMultiline","inMultiline","position","eatSpace","ch","next","skipToEnd","skipTo","eat","startState","defineMIME"],"sources":["C:/Users/User/Downloads/Multisender-App-main/node_modules/codemirror/mode/properties/properties.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"properties\", function() {\n  return {\n    token: function(stream, state) {\n      var sol = stream.sol() || state.afterSection;\n      var eol = stream.eol();\n\n      state.afterSection = false;\n\n      if (sol) {\n        if (state.nextMultiline) {\n          state.inMultiline = true;\n          state.nextMultiline = false;\n        } else {\n          state.position = \"def\";\n        }\n      }\n\n      if (eol && ! state.nextMultiline) {\n        state.inMultiline = false;\n        state.position = \"def\";\n      }\n\n      if (sol) {\n        while(stream.eatSpace()) {}\n      }\n\n      var ch = stream.next();\n\n      if (sol && (ch === \"#\" || ch === \"!\" || ch === \";\")) {\n        state.position = \"comment\";\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (sol && ch === \"[\") {\n        state.afterSection = true;\n        stream.skipTo(\"]\"); stream.eat(\"]\");\n        return \"header\";\n      } else if (ch === \"=\" || ch === \":\") {\n        state.position = \"quote\";\n        return null;\n      } else if (ch === \"\\\\\" && state.position === \"quote\") {\n        if (stream.eol()) {  // end of line?\n          // Multiline value\n          state.nextMultiline = true;\n        }\n      }\n\n      return state.position;\n    },\n\n    startState: function() {\n      return {\n        position : \"def\",       // Current position, \"def\", \"quote\" or \"comment\"\n        nextMultiline : false,  // Is the next line multiline value\n        inMultiline : false,    // Is the current line a multiline value\n        afterSection : false    // Did we just open a section\n      };\n    }\n\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-properties\", \"properties\");\nCodeMirror.defineMIME(\"text/x-ini\", \"properties\");\n\n});\n"],"mappings":"AAAA;AACA;;AAEA,CAAC,UAASA,GAAG,EAAE;EACb,IAAI,OAAOC,OAAO,IAAI,QAAQ,IAAI,OAAOC,MAAM,IAAI,QAAQ;IAAE;IAC3DF,GAAG,CAACG,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,KAClC,IAAI,OAAOC,MAAM,IAAI,UAAU,IAAIA,MAAM,CAACC,GAAG;IAAE;IAClDD,MAAM,CAAC,CAAC,sBAAsB,CAAC,EAAEJ,GAAG,CAAC,CAAC;IACnC;IACHA,GAAG,CAACM,UAAU,CAAC;AACnB,CAAC,EAAE,UAASA,UAAU,EAAE;EACxB,YAAY;;EAEZA,UAAU,CAACC,UAAU,CAAC,YAAY,EAAE,YAAW;IAC7C,OAAO;MACLC,KAAK,EAAE,SAAAA,CAASC,MAAM,EAAEC,KAAK,EAAE;QAC7B,IAAIC,GAAG,GAAGF,MAAM,CAACE,GAAG,CAAC,CAAC,IAAID,KAAK,CAACE,YAAY;QAC5C,IAAIC,GAAG,GAAGJ,MAAM,CAACI,GAAG,CAAC,CAAC;QAEtBH,KAAK,CAACE,YAAY,GAAG,KAAK;QAE1B,IAAID,GAAG,EAAE;UACP,IAAID,KAAK,CAACI,aAAa,EAAE;YACvBJ,KAAK,CAACK,WAAW,GAAG,IAAI;YACxBL,KAAK,CAACI,aAAa,GAAG,KAAK;UAC7B,CAAC,MAAM;YACLJ,KAAK,CAACM,QAAQ,GAAG,KAAK;UACxB;QACF;QAEA,IAAIH,GAAG,IAAI,CAAEH,KAAK,CAACI,aAAa,EAAE;UAChCJ,KAAK,CAACK,WAAW,GAAG,KAAK;UACzBL,KAAK,CAACM,QAAQ,GAAG,KAAK;QACxB;QAEA,IAAIL,GAAG,EAAE;UACP,OAAMF,MAAM,CAACQ,QAAQ,CAAC,CAAC,EAAE,CAAC;QAC5B;QAEA,IAAIC,EAAE,GAAGT,MAAM,CAACU,IAAI,CAAC,CAAC;QAEtB,IAAIR,GAAG,KAAKO,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,CAAC,EAAE;UACnDR,KAAK,CAACM,QAAQ,GAAG,SAAS;UAC1BP,MAAM,CAACW,SAAS,CAAC,CAAC;UAClB,OAAO,SAAS;QAClB,CAAC,MAAM,IAAIT,GAAG,IAAIO,EAAE,KAAK,GAAG,EAAE;UAC5BR,KAAK,CAACE,YAAY,GAAG,IAAI;UACzBH,MAAM,CAACY,MAAM,CAAC,GAAG,CAAC;UAAEZ,MAAM,CAACa,GAAG,CAAC,GAAG,CAAC;UACnC,OAAO,QAAQ;QACjB,CAAC,MAAM,IAAIJ,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAE;UACnCR,KAAK,CAACM,QAAQ,GAAG,OAAO;UACxB,OAAO,IAAI;QACb,CAAC,MAAM,IAAIE,EAAE,KAAK,IAAI,IAAIR,KAAK,CAACM,QAAQ,KAAK,OAAO,EAAE;UACpD,IAAIP,MAAM,CAACI,GAAG,CAAC,CAAC,EAAE;YAAG;YACnB;YACAH,KAAK,CAACI,aAAa,GAAG,IAAI;UAC5B;QACF;QAEA,OAAOJ,KAAK,CAACM,QAAQ;MACvB,CAAC;MAEDO,UAAU,EAAE,SAAAA,CAAA,EAAW;QACrB,OAAO;UACLP,QAAQ,EAAG,KAAK;UAAQ;UACxBF,aAAa,EAAG,KAAK;UAAG;UACxBC,WAAW,EAAG,KAAK;UAAK;UACxBH,YAAY,EAAG,KAAK,CAAI;QAC1B,CAAC;MACH;IAEF,CAAC;EACH,CAAC,CAAC;EAEFN,UAAU,CAACkB,UAAU,CAAC,mBAAmB,EAAE,YAAY,CAAC;EACxDlB,UAAU,CAACkB,UAAU,CAAC,YAAY,EAAE,YAAY,CAAC;AAEjD,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}