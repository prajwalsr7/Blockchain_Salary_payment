{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Originally written by Alf Nielsen, re-written by Michael Zhou\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  function words(str) {\n    var obj = {},\n      words = str.split(\",\");\n    for (var i = 0; i < words.length; ++i) {\n      var allCaps = words[i].toUpperCase();\n      var firstCap = words[i].charAt(0).toUpperCase() + words[i].slice(1);\n      obj[words[i]] = true;\n      obj[allCaps] = true;\n      obj[firstCap] = true;\n    }\n    return obj;\n  }\n  function metaHook(stream) {\n    stream.eatWhile(/[\\w\\$_]/);\n    return \"meta\";\n  }\n  CodeMirror.defineMode(\"vhdl\", function (config, parserConfig) {\n    var indentUnit = config.indentUnit,\n      atoms = parserConfig.atoms || words(\"null\"),\n      hooks = parserConfig.hooks || {\n        \"`\": metaHook,\n        \"$\": metaHook\n      },\n      multiLineStrings = parserConfig.multiLineStrings;\n    var keywords = words(\"abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,\" + \"body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,\" + \"end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,\" + \"function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,\" + \"literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,\" + \"postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,\" + \"sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor\");\n    var blockKeywords = words(\"architecture,entity,begin,case,port,else,elsif,end,for,function,if\");\n    var isOperatorChar = /[&|~><!\\)\\(*#%@+\\/=?\\:;}{,\\.\\^\\-\\[\\]]/;\n    var curPunc;\n    function tokenBase(stream, state) {\n      var ch = stream.next();\n      if (hooks[ch]) {\n        var result = hooks[ch](stream, state);\n        if (result !== false) return result;\n      }\n      if (ch == '\"') {\n        state.tokenize = tokenString2(ch);\n        return state.tokenize(stream, state);\n      }\n      if (ch == \"'\") {\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n      if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n        curPunc = ch;\n        return null;\n      }\n      if (/[\\d']/.test(ch)) {\n        stream.eatWhile(/[\\w\\.']/);\n        return \"number\";\n      }\n      if (ch == \"-\") {\n        if (stream.eat(\"-\")) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n      if (isOperatorChar.test(ch)) {\n        stream.eatWhile(isOperatorChar);\n        return \"operator\";\n      }\n      stream.eatWhile(/[\\w\\$_]/);\n      var cur = stream.current();\n      if (keywords.propertyIsEnumerable(cur.toLowerCase())) {\n        if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n        return \"keyword\";\n      }\n      if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n      return \"variable\";\n    }\n    function tokenString(quote) {\n      return function (stream, state) {\n        var escaped = false,\n          next,\n          end = false;\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped) {\n            end = true;\n            break;\n          }\n          escaped = !escaped && next == \"--\";\n        }\n        if (end || !(escaped || multiLineStrings)) state.tokenize = tokenBase;\n        return \"string\";\n      };\n    }\n    function tokenString2(quote) {\n      return function (stream, state) {\n        var escaped = false,\n          next,\n          end = false;\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped) {\n            end = true;\n            break;\n          }\n          escaped = !escaped && next == \"--\";\n        }\n        if (end || !(escaped || multiLineStrings)) state.tokenize = tokenBase;\n        return \"string-2\";\n      };\n    }\n    function Context(indented, column, type, align, prev) {\n      this.indented = indented;\n      this.column = column;\n      this.type = type;\n      this.align = align;\n      this.prev = prev;\n    }\n    function pushContext(state, col, type) {\n      return state.context = new Context(state.indented, col, type, null, state.context);\n    }\n    function popContext(state) {\n      var t = state.context.type;\n      if (t == \")\" || t == \"]\" || t == \"}\") state.indented = state.context.indented;\n      return state.context = state.context.prev;\n    }\n\n    // Interface\n    return {\n      startState: function (basecolumn) {\n        return {\n          tokenize: null,\n          context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n          indented: 0,\n          startOfLine: true\n        };\n      },\n      token: function (stream, state) {\n        var ctx = state.context;\n        if (stream.sol()) {\n          if (ctx.align == null) ctx.align = false;\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n        }\n        if (stream.eatSpace()) return null;\n        curPunc = null;\n        var style = (state.tokenize || tokenBase)(stream, state);\n        if (style == \"comment\" || style == \"meta\") return style;\n        if (ctx.align == null) ctx.align = true;\n        if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");else if (curPunc == \"}\") {\n          while (ctx.type == \"statement\") ctx = popContext(state);\n          if (ctx.type == \"}\") ctx = popContext(state);\n          while (ctx.type == \"statement\") ctx = popContext(state);\n        } else if (curPunc == ctx.type) popContext(state);else if (ctx.type == \"}\" || ctx.type == \"top\" || ctx.type == \"statement\" && curPunc == \"newstatement\") pushContext(state, stream.column(), \"statement\");\n        state.startOfLine = false;\n        return style;\n      },\n      indent: function (state, textAfter) {\n        if (state.tokenize != tokenBase && state.tokenize != null) return 0;\n        var firstChar = textAfter && textAfter.charAt(0),\n          ctx = state.context,\n          closing = firstChar == ctx.type;\n        if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : indentUnit);else if (ctx.align) return ctx.column + (closing ? 0 : 1);else return ctx.indented + (closing ? 0 : indentUnit);\n      },\n      electricChars: \"{}\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-vhdl\", \"vhdl\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","words","str","obj","split","i","length","allCaps","toUpperCase","firstCap","charAt","slice","metaHook","stream","eatWhile","defineMode","config","parserConfig","indentUnit","atoms","hooks","multiLineStrings","keywords","blockKeywords","isOperatorChar","curPunc","tokenBase","state","ch","next","result","tokenize","tokenString2","tokenString","test","eat","skipToEnd","cur","current","propertyIsEnumerable","toLowerCase","quote","escaped","end","Context","indented","column","type","align","prev","pushContext","col","context","popContext","t","startState","basecolumn","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","firstChar","closing","electricChars","defineMIME"],"sources":["C:/Users/User/Downloads/Salary Payments/node_modules/codemirror/mode/vhdl/vhdl.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Originally written by Alf Nielsen, re-written by Michael Zhou\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction words(str) {\n  var obj = {}, words = str.split(\",\");\n  for (var i = 0; i < words.length; ++i) {\n    var allCaps = words[i].toUpperCase();\n    var firstCap = words[i].charAt(0).toUpperCase() + words[i].slice(1);\n    obj[words[i]] = true;\n    obj[allCaps] = true;\n    obj[firstCap] = true;\n  }\n  return obj;\n}\n\nfunction metaHook(stream) {\n  stream.eatWhile(/[\\w\\$_]/);\n  return \"meta\";\n}\n\nCodeMirror.defineMode(\"vhdl\", function(config, parserConfig) {\n  var indentUnit = config.indentUnit,\n      atoms = parserConfig.atoms || words(\"null\"),\n      hooks = parserConfig.hooks || {\"`\": metaHook, \"$\": metaHook},\n      multiLineStrings = parserConfig.multiLineStrings;\n\n  var keywords = words(\"abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,\" +\n      \"body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,\" +\n      \"end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,\" +\n      \"function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,\" +\n      \"literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,\" +\n      \"postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,\" +\n      \"sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor\");\n\n  var blockKeywords = words(\"architecture,entity,begin,case,port,else,elsif,end,for,function,if\");\n\n  var isOperatorChar = /[&|~><!\\)\\(*#%@+\\/=?\\:;}{,\\.\\^\\-\\[\\]]/;\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (hooks[ch]) {\n      var result = hooks[ch](stream, state);\n      if (result !== false) return result;\n    }\n    if (ch == '\"') {\n      state.tokenize = tokenString2(ch);\n      return state.tokenize(stream, state);\n    }\n    if (ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (/[\\d']/.test(ch)) {\n      stream.eatWhile(/[\\w\\.']/);\n      return \"number\";\n    }\n    if (ch == \"-\") {\n      if (stream.eat(\"-\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n    }\n    if (isOperatorChar.test(ch)) {\n      stream.eatWhile(isOperatorChar);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_]/);\n    var cur = stream.current();\n    if (keywords.propertyIsEnumerable(cur.toLowerCase())) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      return \"keyword\";\n    }\n    if (atoms.propertyIsEnumerable(cur)) return \"atom\";\n    return \"variable\";\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"--\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = tokenBase;\n      return \"string\";\n    };\n  }\n  function tokenString2(quote) {\n    return function(stream, state) {\n      var escaped = false, next, end = false;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {end = true; break;}\n        escaped = !escaped && next == \"--\";\n      }\n      if (end || !(escaped || multiLineStrings))\n        state.tokenize = tokenBase;\n      return \"string-2\";\n    };\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    return state.context = new Context(state.indented, col, type, null, state.context);\n  }\n  function popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: null,\n        context: new Context((basecolumn || 0) - indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = (state.tokenize || tokenBase)(stream, state);\n      if (style == \"comment\" || style == \"meta\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (ctx.type == \"}\" || ctx.type == \"top\" || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n        pushContext(state, stream.column(), \"statement\");\n      state.startOfLine = false;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase && state.tokenize != null) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), ctx = state.context, closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : indentUnit);\n      else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : indentUnit);\n    },\n\n    electricChars: \"{}\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-vhdl\", \"vhdl\");\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}