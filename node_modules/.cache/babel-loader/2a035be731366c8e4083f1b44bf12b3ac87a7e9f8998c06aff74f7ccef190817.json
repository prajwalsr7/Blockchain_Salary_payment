{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../../addon/mode/multiplex\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../../addon/mode/multiplex\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"htmlembedded\", function (config, parserConfig) {\n    var closeComment = parserConfig.closeComment || \"--%>\";\n    return CodeMirror.multiplexingMode(CodeMirror.getMode(config, \"htmlmixed\"), {\n      open: parserConfig.openComment || \"<%--\",\n      close: closeComment,\n      delimStyle: \"comment\",\n      mode: {\n        token: function (stream) {\n          stream.skipTo(closeComment) || stream.skipToEnd();\n          return \"comment\";\n        }\n      }\n    }, {\n      open: parserConfig.open || parserConfig.scriptStartRegex || \"<%\",\n      close: parserConfig.close || parserConfig.scriptEndRegex || \"%>\",\n      mode: CodeMirror.getMode(config, parserConfig.scriptingModeSpec)\n    });\n  }, \"htmlmixed\");\n  CodeMirror.defineMIME(\"application/x-ejs\", {\n    name: \"htmlembedded\",\n    scriptingModeSpec: \"javascript\"\n  });\n  CodeMirror.defineMIME(\"application/x-aspx\", {\n    name: \"htmlembedded\",\n    scriptingModeSpec: \"text/x-csharp\"\n  });\n  CodeMirror.defineMIME(\"application/x-jsp\", {\n    name: \"htmlembedded\",\n    scriptingModeSpec: \"text/x-java\"\n  });\n  CodeMirror.defineMIME(\"application/x-erb\", {\n    name: \"htmlembedded\",\n    scriptingModeSpec: \"ruby\"\n  });\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","parserConfig","closeComment","multiplexingMode","getMode","open","openComment","close","delimStyle","mode","token","stream","skipTo","skipToEnd","scriptStartRegex","scriptEndRegex","scriptingModeSpec","defineMIME","name"],"sources":["C:/Users/User/Downloads/Salary Payments/node_modules/codemirror/mode/htmlembedded/htmlembedded.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"),\n        require(\"../../addon/mode/multiplex\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\",\n            \"../../addon/mode/multiplex\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"htmlembedded\", function(config, parserConfig) {\n    var closeComment = parserConfig.closeComment || \"--%>\"\n    return CodeMirror.multiplexingMode(CodeMirror.getMode(config, \"htmlmixed\"), {\n      open: parserConfig.openComment || \"<%--\",\n      close: closeComment,\n      delimStyle: \"comment\",\n      mode: {token: function(stream) {\n        stream.skipTo(closeComment) || stream.skipToEnd()\n        return \"comment\"\n      }}\n    }, {\n      open: parserConfig.open || parserConfig.scriptStartRegex || \"<%\",\n      close: parserConfig.close || parserConfig.scriptEndRegex || \"%>\",\n      mode: CodeMirror.getMode(config, parserConfig.scriptingModeSpec)\n    });\n  }, \"htmlmixed\");\n\n  CodeMirror.defineMIME(\"application/x-ejs\", {name: \"htmlembedded\", scriptingModeSpec:\"javascript\"});\n  CodeMirror.defineMIME(\"application/x-aspx\", {name: \"htmlembedded\", scriptingModeSpec:\"text/x-csharp\"});\n  CodeMirror.defineMIME(\"application/x-jsp\", {name: \"htmlembedded\", scriptingModeSpec:\"text/x-java\"});\n  CodeMirror.defineMIME(\"application/x-erb\", {name: \"htmlembedded\", scriptingModeSpec:\"ruby\"});\n});\n"],"mappings":"AAAA;AACA;;AAEA,CAAC,UAASA,GAAG,EAAE;EACb,IAAI,OAAOC,OAAO,IAAI,QAAQ,IAAI,OAAOC,MAAM,IAAI,QAAQ;IAAE;IAC3DF,GAAG,CAACG,OAAO,CAAC,sBAAsB,CAAC,EAAEA,OAAO,CAAC,wBAAwB,CAAC,EAClEA,OAAO,CAAC,4BAA4B,CAAC,CAAC,CAAC,KACxC,IAAI,OAAOC,MAAM,IAAI,UAAU,IAAIA,MAAM,CAACC,GAAG;IAAE;IAClDD,MAAM,CAAC,CAAC,sBAAsB,EAAE,wBAAwB,EAChD,4BAA4B,CAAC,EAAEJ,GAAG,CAAC,CAAC;IACzC;IACHA,GAAG,CAACM,UAAU,CAAC;AACnB,CAAC,EAAE,UAASA,UAAU,EAAE;EACtB,YAAY;;EAEZA,UAAU,CAACC,UAAU,CAAC,cAAc,EAAE,UAASC,MAAM,EAAEC,YAAY,EAAE;IACnE,IAAIC,YAAY,GAAGD,YAAY,CAACC,YAAY,IAAI,MAAM;IACtD,OAAOJ,UAAU,CAACK,gBAAgB,CAACL,UAAU,CAACM,OAAO,CAACJ,MAAM,EAAE,WAAW,CAAC,EAAE;MAC1EK,IAAI,EAAEJ,YAAY,CAACK,WAAW,IAAI,MAAM;MACxCC,KAAK,EAAEL,YAAY;MACnBM,UAAU,EAAE,SAAS;MACrBC,IAAI,EAAE;QAACC,KAAK,EAAE,SAAAA,CAASC,MAAM,EAAE;UAC7BA,MAAM,CAACC,MAAM,CAACV,YAAY,CAAC,IAAIS,MAAM,CAACE,SAAS,CAAC,CAAC;UACjD,OAAO,SAAS;QAClB;MAAC;IACH,CAAC,EAAE;MACDR,IAAI,EAAEJ,YAAY,CAACI,IAAI,IAAIJ,YAAY,CAACa,gBAAgB,IAAI,IAAI;MAChEP,KAAK,EAAEN,YAAY,CAACM,KAAK,IAAIN,YAAY,CAACc,cAAc,IAAI,IAAI;MAChEN,IAAI,EAAEX,UAAU,CAACM,OAAO,CAACJ,MAAM,EAAEC,YAAY,CAACe,iBAAiB;IACjE,CAAC,CAAC;EACJ,CAAC,EAAE,WAAW,CAAC;EAEflB,UAAU,CAACmB,UAAU,CAAC,mBAAmB,EAAE;IAACC,IAAI,EAAE,cAAc;IAAEF,iBAAiB,EAAC;EAAY,CAAC,CAAC;EAClGlB,UAAU,CAACmB,UAAU,CAAC,oBAAoB,EAAE;IAACC,IAAI,EAAE,cAAc;IAAEF,iBAAiB,EAAC;EAAe,CAAC,CAAC;EACtGlB,UAAU,CAACmB,UAAU,CAAC,mBAAmB,EAAE;IAACC,IAAI,EAAE,cAAc;IAAEF,iBAAiB,EAAC;EAAa,CAAC,CAAC;EACnGlB,UAAU,CAACmB,UAAU,CAAC,mBAAmB,EAAE;IAACC,IAAI,EAAE,cAAc;IAAEF,iBAAiB,EAAC;EAAM,CAAC,CAAC;AAC9F,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}