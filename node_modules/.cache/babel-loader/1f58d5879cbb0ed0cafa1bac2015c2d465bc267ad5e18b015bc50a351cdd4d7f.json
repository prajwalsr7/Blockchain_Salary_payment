{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"rpm-changes\", function () {\n    var headerSeparator = /^-+$/;\n    var headerLine = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)  ?\\d{1,2} \\d{2}:\\d{2}(:\\d{2})? [A-Z]{3,4} \\d{4} - /;\n    var simpleEmail = /^[\\w+.-]+@[\\w.-]+/;\n    return {\n      token: function (stream) {\n        if (stream.sol()) {\n          if (stream.match(headerSeparator)) {\n            return 'tag';\n          }\n          if (stream.match(headerLine)) {\n            return 'tag';\n          }\n        }\n        if (stream.match(simpleEmail)) {\n          return 'string';\n        }\n        stream.next();\n        return null;\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-rpm-changes\", \"rpm-changes\");\n\n  // Quick and dirty spec file highlighting\n\n  CodeMirror.defineMode(\"rpm-spec\", function () {\n    var arch = /^(i386|i586|i686|x86_64|ppc64le|ppc64|ppc|ia64|s390x|s390|sparc64|sparcv9|sparc|noarch|alphaev6|alpha|hppa|mipsel)/;\n    var preamble = /^[a-zA-Z0-9()]+:/;\n    var section = /^%(debug_package|package|description|prep|build|install|files|clean|changelog|preinstall|preun|postinstall|postun|pretrans|posttrans|pre|post|triggerin|triggerun|verifyscript|check|triggerpostun|triggerprein|trigger)/;\n    var control_flow_complex = /^%(ifnarch|ifarch|if)/; // rpm control flow macros\n    var control_flow_simple = /^%(else|endif)/; // rpm control flow macros\n    var operators = /^(\\!|\\?|\\<\\=|\\<|\\>\\=|\\>|\\=\\=|\\&\\&|\\|\\|)/; // operators in control flow macros\n\n    return {\n      startState: function () {\n        return {\n          controlFlow: false,\n          macroParameters: false,\n          section: false\n        };\n      },\n      token: function (stream, state) {\n        var ch = stream.peek();\n        if (ch == \"#\") {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n        if (stream.sol()) {\n          if (stream.match(preamble)) {\n            return \"header\";\n          }\n          if (stream.match(section)) {\n            return \"atom\";\n          }\n        }\n        if (stream.match(/^\\$\\w+/)) {\n          return \"def\";\n        } // Variables like '$RPM_BUILD_ROOT'\n        if (stream.match(/^\\$\\{\\w+\\}/)) {\n          return \"def\";\n        } // Variables like '${RPM_BUILD_ROOT}'\n\n        if (stream.match(control_flow_simple)) {\n          return \"keyword\";\n        }\n        if (stream.match(control_flow_complex)) {\n          state.controlFlow = true;\n          return \"keyword\";\n        }\n        if (state.controlFlow) {\n          if (stream.match(operators)) {\n            return \"operator\";\n          }\n          if (stream.match(/^(\\d+)/)) {\n            return \"number\";\n          }\n          if (stream.eol()) {\n            state.controlFlow = false;\n          }\n        }\n        if (stream.match(arch)) {\n          if (stream.eol()) {\n            state.controlFlow = false;\n          }\n          return \"number\";\n        }\n\n        // Macros like '%make_install' or '%attr(0775,root,root)'\n        if (stream.match(/^%[\\w]+/)) {\n          if (stream.match('(')) {\n            state.macroParameters = true;\n          }\n          return \"keyword\";\n        }\n        if (state.macroParameters) {\n          if (stream.match(/^\\d+/)) {\n            return \"number\";\n          }\n          if (stream.match(')')) {\n            state.macroParameters = false;\n            return \"keyword\";\n          }\n        }\n\n        // Macros like '%{defined fedora}'\n        if (stream.match(/^%\\{\\??[\\w \\-\\:\\!]+\\}/)) {\n          if (stream.eol()) {\n            state.controlFlow = false;\n          }\n          return \"def\";\n        }\n\n        //TODO: Include bash script sub-parser (CodeMirror supports that)\n        stream.next();\n        return null;\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-rpm-spec\", \"rpm-spec\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","headerSeparator","headerLine","simpleEmail","token","stream","sol","match","next","defineMIME","arch","preamble","section","control_flow_complex","control_flow_simple","operators","startState","controlFlow","macroParameters","state","ch","peek","skipToEnd","eol"],"sources":["C:/Users/User/Downloads/Salary Payments/node_modules/codemirror/mode/rpm/rpm.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"rpm-changes\", function() {\n  var headerSeparator = /^-+$/;\n  var headerLine = /^(Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)  ?\\d{1,2} \\d{2}:\\d{2}(:\\d{2})? [A-Z]{3,4} \\d{4} - /;\n  var simpleEmail = /^[\\w+.-]+@[\\w.-]+/;\n\n  return {\n    token: function(stream) {\n      if (stream.sol()) {\n        if (stream.match(headerSeparator)) { return 'tag'; }\n        if (stream.match(headerLine)) { return 'tag'; }\n      }\n      if (stream.match(simpleEmail)) { return 'string'; }\n      stream.next();\n      return null;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-rpm-changes\", \"rpm-changes\");\n\n// Quick and dirty spec file highlighting\n\nCodeMirror.defineMode(\"rpm-spec\", function() {\n  var arch = /^(i386|i586|i686|x86_64|ppc64le|ppc64|ppc|ia64|s390x|s390|sparc64|sparcv9|sparc|noarch|alphaev6|alpha|hppa|mipsel)/;\n\n  var preamble = /^[a-zA-Z0-9()]+:/;\n  var section = /^%(debug_package|package|description|prep|build|install|files|clean|changelog|preinstall|preun|postinstall|postun|pretrans|posttrans|pre|post|triggerin|triggerun|verifyscript|check|triggerpostun|triggerprein|trigger)/;\n  var control_flow_complex = /^%(ifnarch|ifarch|if)/; // rpm control flow macros\n  var control_flow_simple = /^%(else|endif)/; // rpm control flow macros\n  var operators = /^(\\!|\\?|\\<\\=|\\<|\\>\\=|\\>|\\=\\=|\\&\\&|\\|\\|)/; // operators in control flow macros\n\n  return {\n    startState: function () {\n        return {\n          controlFlow: false,\n          macroParameters: false,\n          section: false\n        };\n    },\n    token: function (stream, state) {\n      var ch = stream.peek();\n      if (ch == \"#\") { stream.skipToEnd(); return \"comment\"; }\n\n      if (stream.sol()) {\n        if (stream.match(preamble)) { return \"header\"; }\n        if (stream.match(section)) { return \"atom\"; }\n      }\n\n      if (stream.match(/^\\$\\w+/)) { return \"def\"; } // Variables like '$RPM_BUILD_ROOT'\n      if (stream.match(/^\\$\\{\\w+\\}/)) { return \"def\"; } // Variables like '${RPM_BUILD_ROOT}'\n\n      if (stream.match(control_flow_simple)) { return \"keyword\"; }\n      if (stream.match(control_flow_complex)) {\n        state.controlFlow = true;\n        return \"keyword\";\n      }\n      if (state.controlFlow) {\n        if (stream.match(operators)) { return \"operator\"; }\n        if (stream.match(/^(\\d+)/)) { return \"number\"; }\n        if (stream.eol()) { state.controlFlow = false; }\n      }\n\n      if (stream.match(arch)) {\n        if (stream.eol()) { state.controlFlow = false; }\n        return \"number\";\n      }\n\n      // Macros like '%make_install' or '%attr(0775,root,root)'\n      if (stream.match(/^%[\\w]+/)) {\n        if (stream.match('(')) { state.macroParameters = true; }\n        return \"keyword\";\n      }\n      if (state.macroParameters) {\n        if (stream.match(/^\\d+/)) { return \"number\";}\n        if (stream.match(')')) {\n          state.macroParameters = false;\n          return \"keyword\";\n        }\n      }\n\n      // Macros like '%{defined fedora}'\n      if (stream.match(/^%\\{\\??[\\w \\-\\:\\!]+\\}/)) {\n        if (stream.eol()) { state.controlFlow = false; }\n        return \"def\";\n      }\n\n      //TODO: Include bash script sub-parser (CodeMirror supports that)\n      stream.next();\n      return null;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-rpm-spec\", \"rpm-spec\");\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}