{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../python/python\"), require(\"../stex/stex\"), require(\"../../addon/mode/overlay\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\", \"../python/python\", \"../stex/stex\", \"../../addon/mode/overlay\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode('rst', function (config, options) {\n    var rx_strong = /^\\*\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*\\*/;\n    var rx_emphasis = /^\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*/;\n    var rx_literal = /^``[^`\\s](?:[^`]*[^`\\s])``/;\n    var rx_number = /^(?:[\\d]+(?:[\\.,]\\d+)*)/;\n    var rx_positive = /^(?:\\s\\+[\\d]+(?:[\\.,]\\d+)*)/;\n    var rx_negative = /^(?:\\s\\-[\\d]+(?:[\\.,]\\d+)*)/;\n    var rx_uri_protocol = \"[Hh][Tt][Tt][Pp][Ss]?://\";\n    var rx_uri_domain = \"(?:[\\\\d\\\\w.-]+)\\\\.(?:\\\\w{2,6})\";\n    var rx_uri_path = \"(?:/[\\\\d\\\\w\\\\#\\\\%\\\\&\\\\-\\\\.\\\\,\\\\/\\\\:\\\\=\\\\?\\\\~]+)*\";\n    var rx_uri = new RegExp(\"^\" + rx_uri_protocol + rx_uri_domain + rx_uri_path);\n    var overlay = {\n      token: function (stream) {\n        if (stream.match(rx_strong) && stream.match(/\\W+|$/, false)) return 'strong';\n        if (stream.match(rx_emphasis) && stream.match(/\\W+|$/, false)) return 'em';\n        if (stream.match(rx_literal) && stream.match(/\\W+|$/, false)) return 'string-2';\n        if (stream.match(rx_number)) return 'number';\n        if (stream.match(rx_positive)) return 'positive';\n        if (stream.match(rx_negative)) return 'negative';\n        if (stream.match(rx_uri)) return 'link';\n        while (stream.next() != null) {\n          if (stream.match(rx_strong, false)) break;\n          if (stream.match(rx_emphasis, false)) break;\n          if (stream.match(rx_literal, false)) break;\n          if (stream.match(rx_number, false)) break;\n          if (stream.match(rx_positive, false)) break;\n          if (stream.match(rx_negative, false)) break;\n          if (stream.match(rx_uri, false)) break;\n        }\n        return null;\n      }\n    };\n    var mode = CodeMirror.getMode(config, options.backdrop || 'rst-base');\n    return CodeMirror.overlayMode(mode, overlay, true); // combine\n  }, 'python', 'stex');\n\n  ///////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////\n\n  CodeMirror.defineMode('rst-base', function (config) {\n    ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    function format(string) {\n      var args = Array.prototype.slice.call(arguments, 1);\n      return string.replace(/{(\\d+)}/g, function (match, n) {\n        return typeof args[n] != 'undefined' ? args[n] : match;\n      });\n    }\n\n    ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    var mode_python = CodeMirror.getMode(config, 'python');\n    var mode_stex = CodeMirror.getMode(config, 'stex');\n\n    ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    var SEPA = \"\\\\s+\";\n    var TAIL = \"(?:\\\\s*|\\\\W|$)\",\n      rx_TAIL = new RegExp(format('^{0}', TAIL));\n    var NAME = \"(?:[^\\\\W\\\\d_](?:[\\\\w!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\",\n      rx_NAME = new RegExp(format('^{0}', NAME));\n    var NAME_WWS = \"(?:[^\\\\W\\\\d_](?:[\\\\w\\\\s!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\";\n    var REF_NAME = format('(?:{0}|`{1}`)', NAME, NAME_WWS);\n    var TEXT1 = \"(?:[^\\\\s\\\\|](?:[^\\\\|]*[^\\\\s\\\\|])?)\";\n    var TEXT2 = \"(?:[^\\\\`]+)\",\n      rx_TEXT2 = new RegExp(format('^{0}', TEXT2));\n    var rx_section = new RegExp(\"^([!'#$%&\\\"()*+,-./:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\1{3,}\\\\s*$\");\n    var rx_explicit = new RegExp(format('^\\\\.\\\\.{0}', SEPA));\n    var rx_link = new RegExp(format('^_{0}:{1}|^__:{1}', REF_NAME, TAIL));\n    var rx_directive = new RegExp(format('^{0}::{1}', REF_NAME, TAIL));\n    var rx_substitution = new RegExp(format('^\\\\|{0}\\\\|{1}{2}::{3}', TEXT1, SEPA, REF_NAME, TAIL));\n    var rx_footnote = new RegExp(format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]{1}', REF_NAME, TAIL));\n    var rx_citation = new RegExp(format('^\\\\[{0}\\\\]{1}', REF_NAME, TAIL));\n    var rx_substitution_ref = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n    var rx_footnote_ref = new RegExp(format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]_', REF_NAME));\n    var rx_citation_ref = new RegExp(format('^\\\\[{0}\\\\]_', REF_NAME));\n    var rx_link_ref1 = new RegExp(format('^{0}__?', REF_NAME));\n    var rx_link_ref2 = new RegExp(format('^`{0}`_', TEXT2));\n    var rx_role_pre = new RegExp(format('^:{0}:`{1}`{2}', NAME, TEXT2, TAIL));\n    var rx_role_suf = new RegExp(format('^`{1}`:{0}:{2}', NAME, TEXT2, TAIL));\n    var rx_role = new RegExp(format('^:{0}:{1}', NAME, TAIL));\n    var rx_directive_name = new RegExp(format('^{0}', REF_NAME));\n    var rx_directive_tail = new RegExp(format('^::{0}', TAIL));\n    var rx_substitution_text = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n    var rx_substitution_sepa = new RegExp(format('^{0}', SEPA));\n    var rx_substitution_name = new RegExp(format('^{0}', REF_NAME));\n    var rx_substitution_tail = new RegExp(format('^::{0}', TAIL));\n    var rx_link_head = new RegExp(\"^_\");\n    var rx_link_name = new RegExp(format('^{0}|_', REF_NAME));\n    var rx_link_tail = new RegExp(format('^:{0}', TAIL));\n    var rx_verbatim = new RegExp('^::\\\\s*$');\n    var rx_examples = new RegExp('^\\\\s+(?:>>>|In \\\\[\\\\d+\\\\]:)\\\\s');\n\n    ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    function to_normal(stream, state) {\n      var token = null;\n      if (stream.sol() && stream.match(rx_examples, false)) {\n        change(state, to_mode, {\n          mode: mode_python,\n          local: CodeMirror.startState(mode_python)\n        });\n      } else if (stream.sol() && stream.match(rx_explicit)) {\n        change(state, to_explicit);\n        token = 'meta';\n      } else if (stream.sol() && stream.match(rx_section)) {\n        change(state, to_normal);\n        token = 'header';\n      } else if (phase(state) == rx_role_pre || stream.match(rx_role_pre, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_role_pre, 1));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n          case 1:\n            change(state, to_normal, context(rx_role_pre, 2));\n            stream.match(rx_NAME);\n            token = 'keyword';\n            if (stream.current().match(/^(?:math|latex)/)) {\n              state.tmp_stex = true;\n            }\n            break;\n          case 2:\n            change(state, to_normal, context(rx_role_pre, 3));\n            stream.match(/^:`/);\n            token = 'meta';\n            break;\n          case 3:\n            if (state.tmp_stex) {\n              state.tmp_stex = undefined;\n              state.tmp = {\n                mode: mode_stex,\n                local: CodeMirror.startState(mode_stex)\n              };\n            }\n            if (state.tmp) {\n              if (stream.peek() == '`') {\n                change(state, to_normal, context(rx_role_pre, 4));\n                state.tmp = undefined;\n                break;\n              }\n              token = state.tmp.mode.token(stream, state.tmp.local);\n              break;\n            }\n            change(state, to_normal, context(rx_role_pre, 4));\n            stream.match(rx_TEXT2);\n            token = 'string';\n            break;\n          case 4:\n            change(state, to_normal, context(rx_role_pre, 5));\n            stream.match(/^`/);\n            token = 'meta';\n            break;\n          case 5:\n            change(state, to_normal, context(rx_role_pre, 6));\n            stream.match(rx_TAIL);\n            break;\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_role_suf || stream.match(rx_role_suf, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_role_suf, 1));\n            stream.match(/^`/);\n            token = 'meta';\n            break;\n          case 1:\n            change(state, to_normal, context(rx_role_suf, 2));\n            stream.match(rx_TEXT2);\n            token = 'string';\n            break;\n          case 2:\n            change(state, to_normal, context(rx_role_suf, 3));\n            stream.match(/^`:/);\n            token = 'meta';\n            break;\n          case 3:\n            change(state, to_normal, context(rx_role_suf, 4));\n            stream.match(rx_NAME);\n            token = 'keyword';\n            break;\n          case 4:\n            change(state, to_normal, context(rx_role_suf, 5));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n          case 5:\n            change(state, to_normal, context(rx_role_suf, 6));\n            stream.match(rx_TAIL);\n            break;\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_role || stream.match(rx_role, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_role, 1));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n          case 1:\n            change(state, to_normal, context(rx_role, 2));\n            stream.match(rx_NAME);\n            token = 'keyword';\n            break;\n          case 2:\n            change(state, to_normal, context(rx_role, 3));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n          case 3:\n            change(state, to_normal, context(rx_role, 4));\n            stream.match(rx_TAIL);\n            break;\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_substitution_ref || stream.match(rx_substitution_ref, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_substitution_ref, 1));\n            stream.match(rx_substitution_text);\n            token = 'variable-2';\n            break;\n          case 1:\n            change(state, to_normal, context(rx_substitution_ref, 2));\n            if (stream.match(/^_?_?/)) token = 'link';\n            break;\n          default:\n            change(state, to_normal);\n        }\n      } else if (stream.match(rx_footnote_ref)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_citation_ref)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_link_ref1)) {\n        change(state, to_normal);\n        if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n          token = 'link';\n        }\n      } else if (phase(state) == rx_link_ref2 || stream.match(rx_link_ref2, false)) {\n        switch (stage(state)) {\n          case 0:\n            if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n              change(state, to_normal, context(rx_link_ref2, 1));\n            } else {\n              stream.match(rx_link_ref2);\n            }\n            break;\n          case 1:\n            change(state, to_normal, context(rx_link_ref2, 2));\n            stream.match(/^`/);\n            token = 'link';\n            break;\n          case 2:\n            change(state, to_normal, context(rx_link_ref2, 3));\n            stream.match(rx_TEXT2);\n            break;\n          case 3:\n            change(state, to_normal, context(rx_link_ref2, 4));\n            stream.match(/^`_/);\n            token = 'link';\n            break;\n          default:\n            change(state, to_normal);\n        }\n      } else if (stream.match(rx_verbatim)) {\n        change(state, to_verbatim);\n      } else {\n        if (stream.next()) change(state, to_normal);\n      }\n      return token;\n    }\n\n    ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    function to_explicit(stream, state) {\n      var token = null;\n      if (phase(state) == rx_substitution || stream.match(rx_substitution, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_explicit, context(rx_substitution, 1));\n            stream.match(rx_substitution_text);\n            token = 'variable-2';\n            break;\n          case 1:\n            change(state, to_explicit, context(rx_substitution, 2));\n            stream.match(rx_substitution_sepa);\n            break;\n          case 2:\n            change(state, to_explicit, context(rx_substitution, 3));\n            stream.match(rx_substitution_name);\n            token = 'keyword';\n            break;\n          case 3:\n            change(state, to_explicit, context(rx_substitution, 4));\n            stream.match(rx_substitution_tail);\n            token = 'meta';\n            break;\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_directive || stream.match(rx_directive, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_explicit, context(rx_directive, 1));\n            stream.match(rx_directive_name);\n            token = 'keyword';\n            if (stream.current().match(/^(?:math|latex)/)) state.tmp_stex = true;else if (stream.current().match(/^python/)) state.tmp_py = true;\n            break;\n          case 1:\n            change(state, to_explicit, context(rx_directive, 2));\n            stream.match(rx_directive_tail);\n            token = 'meta';\n            if (stream.match(/^latex\\s*$/) || state.tmp_stex) {\n              state.tmp_stex = undefined;\n              change(state, to_mode, {\n                mode: mode_stex,\n                local: CodeMirror.startState(mode_stex)\n              });\n            }\n            break;\n          case 2:\n            change(state, to_explicit, context(rx_directive, 3));\n            if (stream.match(/^python\\s*$/) || state.tmp_py) {\n              state.tmp_py = undefined;\n              change(state, to_mode, {\n                mode: mode_python,\n                local: CodeMirror.startState(mode_python)\n              });\n            }\n            break;\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_link || stream.match(rx_link, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_explicit, context(rx_link, 1));\n            stream.match(rx_link_head);\n            stream.match(rx_link_name);\n            token = 'link';\n            break;\n          case 1:\n            change(state, to_explicit, context(rx_link, 2));\n            stream.match(rx_link_tail);\n            token = 'meta';\n            break;\n          default:\n            change(state, to_normal);\n        }\n      } else if (stream.match(rx_footnote)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_citation)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else {\n        stream.eatSpace();\n        if (stream.eol()) {\n          change(state, to_normal);\n        } else {\n          stream.skipToEnd();\n          change(state, to_comment);\n          token = 'comment';\n        }\n      }\n      return token;\n    }\n\n    ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    function to_comment(stream, state) {\n      return as_block(stream, state, 'comment');\n    }\n    function to_verbatim(stream, state) {\n      return as_block(stream, state, 'meta');\n    }\n    function as_block(stream, state, token) {\n      if (stream.eol() || stream.eatSpace()) {\n        stream.skipToEnd();\n        return token;\n      } else {\n        change(state, to_normal);\n        return null;\n      }\n    }\n\n    ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    function to_mode(stream, state) {\n      if (state.ctx.mode && state.ctx.local) {\n        if (stream.sol()) {\n          if (!stream.eatSpace()) change(state, to_normal);\n          return null;\n        }\n        return state.ctx.mode.token(stream, state.ctx.local);\n      }\n      change(state, to_normal);\n      return null;\n    }\n\n    ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    function context(phase, stage, mode, local) {\n      return {\n        phase: phase,\n        stage: stage,\n        mode: mode,\n        local: local\n      };\n    }\n    function change(state, tok, ctx) {\n      state.tok = tok;\n      state.ctx = ctx || {};\n    }\n    function stage(state) {\n      return state.ctx.stage || 0;\n    }\n    function phase(state) {\n      return state.ctx.phase;\n    }\n\n    ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    return {\n      startState: function () {\n        return {\n          tok: to_normal,\n          ctx: context(undefined, 0)\n        };\n      },\n      copyState: function (state) {\n        var ctx = state.ctx,\n          tmp = state.tmp;\n        if (ctx.local) ctx = {\n          mode: ctx.mode,\n          local: CodeMirror.copyState(ctx.mode, ctx.local)\n        };\n        if (tmp) tmp = {\n          mode: tmp.mode,\n          local: CodeMirror.copyState(tmp.mode, tmp.local)\n        };\n        return {\n          tok: state.tok,\n          ctx: ctx,\n          tmp: tmp\n        };\n      },\n      innerMode: function (state) {\n        return state.tmp ? {\n          state: state.tmp.local,\n          mode: state.tmp.mode\n        } : state.ctx.mode ? {\n          state: state.ctx.local,\n          mode: state.ctx.mode\n        } : null;\n      },\n      token: function (stream, state) {\n        return state.tok(stream, state);\n      }\n    };\n  }, 'python', 'stex');\n\n  ///////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////\n\n  CodeMirror.defineMIME('text/x-rst', 'rst');\n\n  ///////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","options","rx_strong","rx_emphasis","rx_literal","rx_number","rx_positive","rx_negative","rx_uri_protocol","rx_uri_domain","rx_uri_path","rx_uri","RegExp","overlay","token","stream","match","next","mode","getMode","backdrop","overlayMode","format","string","args","Array","prototype","slice","call","arguments","replace","n","mode_python","mode_stex","SEPA","TAIL","rx_TAIL","NAME","rx_NAME","NAME_WWS","REF_NAME","TEXT1","TEXT2","rx_TEXT2","rx_section","rx_explicit","rx_link","rx_directive","rx_substitution","rx_footnote","rx_citation","rx_substitution_ref","rx_footnote_ref","rx_citation_ref","rx_link_ref1","rx_link_ref2","rx_role_pre","rx_role_suf","rx_role","rx_directive_name","rx_directive_tail","rx_substitution_text","rx_substitution_sepa","rx_substitution_name","rx_substitution_tail","rx_link_head","rx_link_name","rx_link_tail","rx_verbatim","rx_examples","to_normal","state","sol","change","to_mode","local","startState","to_explicit","phase","stage","context","current","tmp_stex","undefined","tmp","peek","to_verbatim","tmp_py","eatSpace","eol","skipToEnd","to_comment","as_block","ctx","tok","copyState","innerMode","defineMIME"],"sources":["C:/Users/User/Downloads/Multisender-App-main/node_modules/codemirror/mode/rst/rst.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../python/python\"), require(\"../stex/stex\"), require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../python/python\", \"../stex/stex\", \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('rst', function (config, options) {\n\n  var rx_strong = /^\\*\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*\\*/;\n  var rx_emphasis = /^\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*/;\n  var rx_literal = /^``[^`\\s](?:[^`]*[^`\\s])``/;\n\n  var rx_number = /^(?:[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_positive = /^(?:\\s\\+[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_negative = /^(?:\\s\\-[\\d]+(?:[\\.,]\\d+)*)/;\n\n  var rx_uri_protocol = \"[Hh][Tt][Tt][Pp][Ss]?://\";\n  var rx_uri_domain = \"(?:[\\\\d\\\\w.-]+)\\\\.(?:\\\\w{2,6})\";\n  var rx_uri_path = \"(?:/[\\\\d\\\\w\\\\#\\\\%\\\\&\\\\-\\\\.\\\\,\\\\/\\\\:\\\\=\\\\?\\\\~]+)*\";\n  var rx_uri = new RegExp(\"^\" + rx_uri_protocol + rx_uri_domain + rx_uri_path);\n\n  var overlay = {\n    token: function (stream) {\n\n      if (stream.match(rx_strong) && stream.match (/\\W+|$/, false))\n        return 'strong';\n      if (stream.match(rx_emphasis) && stream.match (/\\W+|$/, false))\n        return 'em';\n      if (stream.match(rx_literal) && stream.match (/\\W+|$/, false))\n        return 'string-2';\n      if (stream.match(rx_number))\n        return 'number';\n      if (stream.match(rx_positive))\n        return 'positive';\n      if (stream.match(rx_negative))\n        return 'negative';\n      if (stream.match(rx_uri))\n        return 'link';\n\n      while (stream.next() != null) {\n        if (stream.match(rx_strong, false)) break;\n        if (stream.match(rx_emphasis, false)) break;\n        if (stream.match(rx_literal, false)) break;\n        if (stream.match(rx_number, false)) break;\n        if (stream.match(rx_positive, false)) break;\n        if (stream.match(rx_negative, false)) break;\n        if (stream.match(rx_uri, false)) break;\n      }\n\n      return null;\n    }\n  };\n\n  var mode = CodeMirror.getMode(\n    config, options.backdrop || 'rst-base'\n  );\n\n  return CodeMirror.overlayMode(mode, overlay, true); // combine\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMode('rst-base', function (config) {\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function format(string) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return string.replace(/{(\\d+)}/g, function (match, n) {\n      return typeof args[n] != 'undefined' ? args[n] : match;\n    });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var mode_python = CodeMirror.getMode(config, 'python');\n  var mode_stex = CodeMirror.getMode(config, 'stex');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var SEPA = \"\\\\s+\";\n  var TAIL = \"(?:\\\\s*|\\\\W|$)\",\n  rx_TAIL = new RegExp(format('^{0}', TAIL));\n\n  var NAME =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\",\n  rx_NAME = new RegExp(format('^{0}', NAME));\n  var NAME_WWS =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w\\\\s!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\";\n  var REF_NAME = format('(?:{0}|`{1}`)', NAME, NAME_WWS);\n\n  var TEXT1 = \"(?:[^\\\\s\\\\|](?:[^\\\\|]*[^\\\\s\\\\|])?)\";\n  var TEXT2 = \"(?:[^\\\\`]+)\",\n  rx_TEXT2 = new RegExp(format('^{0}', TEXT2));\n\n  var rx_section = new RegExp(\n    \"^([!'#$%&\\\"()*+,-./:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\1{3,}\\\\s*$\");\n  var rx_explicit = new RegExp(\n    format('^\\\\.\\\\.{0}', SEPA));\n  var rx_link = new RegExp(\n    format('^_{0}:{1}|^__:{1}', REF_NAME, TAIL));\n  var rx_directive = new RegExp(\n    format('^{0}::{1}', REF_NAME, TAIL));\n  var rx_substitution = new RegExp(\n    format('^\\\\|{0}\\\\|{1}{2}::{3}', TEXT1, SEPA, REF_NAME, TAIL));\n  var rx_footnote = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]{1}', REF_NAME, TAIL));\n  var rx_citation = new RegExp(\n    format('^\\\\[{0}\\\\]{1}', REF_NAME, TAIL));\n\n  var rx_substitution_ref = new RegExp(\n    format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_footnote_ref = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]_', REF_NAME));\n  var rx_citation_ref = new RegExp(\n    format('^\\\\[{0}\\\\]_', REF_NAME));\n  var rx_link_ref1 = new RegExp(\n    format('^{0}__?', REF_NAME));\n  var rx_link_ref2 = new RegExp(\n    format('^`{0}`_', TEXT2));\n\n  var rx_role_pre = new RegExp(\n    format('^:{0}:`{1}`{2}', NAME, TEXT2, TAIL));\n  var rx_role_suf = new RegExp(\n    format('^`{1}`:{0}:{2}', NAME, TEXT2, TAIL));\n  var rx_role = new RegExp(\n    format('^:{0}:{1}', NAME, TAIL));\n\n  var rx_directive_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_directive_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_substitution_text = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_substitution_sepa = new RegExp(format('^{0}', SEPA));\n  var rx_substitution_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_substitution_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_link_head = new RegExp(\"^_\");\n  var rx_link_name = new RegExp(format('^{0}|_', REF_NAME));\n  var rx_link_tail = new RegExp(format('^:{0}', TAIL));\n\n  var rx_verbatim = new RegExp('^::\\\\s*$');\n  var rx_examples = new RegExp('^\\\\s+(?:>>>|In \\\\[\\\\d+\\\\]:)\\\\s');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_normal(stream, state) {\n    var token = null;\n\n    if (stream.sol() && stream.match(rx_examples, false)) {\n      change(state, to_mode, {\n        mode: mode_python, local: CodeMirror.startState(mode_python)\n      });\n    } else if (stream.sol() && stream.match(rx_explicit)) {\n      change(state, to_explicit);\n      token = 'meta';\n    } else if (stream.sol() && stream.match(rx_section)) {\n      change(state, to_normal);\n      token = 'header';\n    } else if (phase(state) == rx_role_pre ||\n               stream.match(rx_role_pre, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_pre, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_pre, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/)) {\n          state.tmp_stex = true;\n        }\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_pre, 3));\n        stream.match(/^:`/);\n        token = 'meta';\n        break;\n      case 3:\n        if (state.tmp_stex) {\n          state.tmp_stex = undefined; state.tmp = {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          };\n        }\n\n        if (state.tmp) {\n          if (stream.peek() == '`') {\n            change(state, to_normal, context(rx_role_pre, 4));\n            state.tmp = undefined;\n            break;\n          }\n\n          token = state.tmp.mode.token(stream, state.tmp.local);\n          break;\n        }\n\n        change(state, to_normal, context(rx_role_pre, 4));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_pre, 5));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_pre, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role_suf ||\n               stream.match(rx_role_suf, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_suf, 1));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_suf, 2));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_suf, 3));\n        stream.match(/^`:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role_suf, 4));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_suf, 5));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_suf, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role || stream.match(rx_role, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role, 3));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role, 4));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_substitution_ref ||\n               stream.match(rx_substitution_ref, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_substitution_ref, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_substitution_ref, 2));\n        if (stream.match(/^_?_?/)) token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_link_ref1)) {\n      change(state, to_normal);\n      if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n        token = 'link';\n      }\n    } else if (phase(state) == rx_link_ref2 ||\n               stream.match(rx_link_ref2, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n          change(state, to_normal, context(rx_link_ref2, 1));\n        } else {\n          stream.match(rx_link_ref2);\n        }\n        break;\n      case 1:\n        change(state, to_normal, context(rx_link_ref2, 2));\n        stream.match(/^`/);\n        token = 'link';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_link_ref2, 3));\n        stream.match(rx_TEXT2);\n        break;\n      case 3:\n        change(state, to_normal, context(rx_link_ref2, 4));\n        stream.match(/^`_/);\n        token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_verbatim)) {\n      change(state, to_verbatim);\n    }\n\n    else {\n      if (stream.next()) change(state, to_normal);\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_explicit(stream, state) {\n    var token = null;\n\n    if (phase(state) == rx_substitution ||\n        stream.match(rx_substitution, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_substitution, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_substitution, 2));\n        stream.match(rx_substitution_sepa);\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_substitution, 3));\n        stream.match(rx_substitution_name);\n        token = 'keyword';\n        break;\n      case 3:\n        change(state, to_explicit, context(rx_substitution, 4));\n        stream.match(rx_substitution_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_directive ||\n               stream.match(rx_directive, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_directive, 1));\n        stream.match(rx_directive_name);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/))\n          state.tmp_stex = true;\n        else if (stream.current().match(/^python/))\n          state.tmp_py = true;\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_directive, 2));\n        stream.match(rx_directive_tail);\n        token = 'meta';\n\n        if (stream.match(/^latex\\s*$/) || state.tmp_stex) {\n          state.tmp_stex = undefined; change(state, to_mode, {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          });\n        }\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_directive, 3));\n        if (stream.match(/^python\\s*$/) || state.tmp_py) {\n          state.tmp_py = undefined; change(state, to_mode, {\n            mode: mode_python, local: CodeMirror.startState(mode_python)\n          });\n        }\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_link || stream.match(rx_link, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_link, 1));\n        stream.match(rx_link_head);\n        stream.match(rx_link_name);\n        token = 'link';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_link, 2));\n        stream.match(rx_link_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation)) {\n      change(state, to_normal);\n      token = 'quote';\n    }\n\n    else {\n      stream.eatSpace();\n      if (stream.eol()) {\n        change(state, to_normal);\n      } else {\n        stream.skipToEnd();\n        change(state, to_comment);\n        token = 'comment';\n      }\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_comment(stream, state) {\n    return as_block(stream, state, 'comment');\n  }\n\n  function to_verbatim(stream, state) {\n    return as_block(stream, state, 'meta');\n  }\n\n  function as_block(stream, state, token) {\n    if (stream.eol() || stream.eatSpace()) {\n      stream.skipToEnd();\n      return token;\n    } else {\n      change(state, to_normal);\n      return null;\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_mode(stream, state) {\n\n    if (state.ctx.mode && state.ctx.local) {\n\n      if (stream.sol()) {\n        if (!stream.eatSpace()) change(state, to_normal);\n        return null;\n      }\n\n      return state.ctx.mode.token(stream, state.ctx.local);\n    }\n\n    change(state, to_normal);\n    return null;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function context(phase, stage, mode, local) {\n    return {phase: phase, stage: stage, mode: mode, local: local};\n  }\n\n  function change(state, tok, ctx) {\n    state.tok = tok;\n    state.ctx = ctx || {};\n  }\n\n  function stage(state) {\n    return state.ctx.stage || 0;\n  }\n\n  function phase(state) {\n    return state.ctx.phase;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  return {\n    startState: function () {\n      return {tok: to_normal, ctx: context(undefined, 0)};\n    },\n\n    copyState: function (state) {\n      var ctx = state.ctx, tmp = state.tmp;\n      if (ctx.local)\n        ctx = {mode: ctx.mode, local: CodeMirror.copyState(ctx.mode, ctx.local)};\n      if (tmp)\n        tmp = {mode: tmp.mode, local: CodeMirror.copyState(tmp.mode, tmp.local)};\n      return {tok: state.tok, ctx: ctx, tmp: tmp};\n    },\n\n    innerMode: function (state) {\n      return state.tmp      ? {state: state.tmp.local, mode: state.tmp.mode}\n      : state.ctx.mode ? {state: state.ctx.local, mode: state.ctx.mode}\n      : null;\n    },\n\n    token: function (stream, state) {\n      return state.tok(stream, state);\n    }\n  };\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMIME('text/x-rst', 'rst');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}