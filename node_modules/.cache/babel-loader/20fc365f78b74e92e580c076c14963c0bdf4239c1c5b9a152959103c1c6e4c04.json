{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/*\nFor extra ASP classic objects, initialize CodeMirror instance with this option:\n    isASP: true\n\nE.G.:\n    var editor = CodeMirror.fromTextArea(document.getElementById(\"code\"), {\n        lineNumbers: true,\n        isASP: true\n      });\n*/\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"vbscript\", function (conf, parserConf) {\n    var ERRORCLASS = 'error';\n    function wordRegexp(words) {\n      return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\", \"i\");\n    }\n    var singleOperators = new RegExp(\"^[\\\\+\\\\-\\\\*/&\\\\\\\\\\\\^<>=]\");\n    var doubleOperators = new RegExp(\"^((<>)|(<=)|(>=))\");\n    var singleDelimiters = new RegExp('^[\\\\.,]');\n    var brackets = new RegExp('^[\\\\(\\\\)]');\n    var identifiers = new RegExp(\"^[A-Za-z][_A-Za-z0-9]*\");\n    var openingKeywords = ['class', 'sub', 'select', 'while', 'if', 'function', 'property', 'with', 'for'];\n    var middleKeywords = ['else', 'elseif', 'case'];\n    var endKeywords = ['next', 'loop', 'wend'];\n    var wordOperators = wordRegexp(['and', 'or', 'not', 'xor', 'is', 'mod', 'eqv', 'imp']);\n    var commonkeywords = ['dim', 'redim', 'then', 'until', 'randomize', 'byval', 'byref', 'new', 'property', 'exit', 'in', 'const', 'private', 'public', 'get', 'set', 'let', 'stop', 'on error resume next', 'on error goto 0', 'option explicit', 'call', 'me'];\n\n    //This list was from: http://msdn.microsoft.com/en-us/library/f8tbc79x(v=vs.84).aspx\n    var atomWords = ['true', 'false', 'nothing', 'empty', 'null'];\n    //This list was from: http://msdn.microsoft.com/en-us/library/3ca8tfek(v=vs.84).aspx\n    var builtinFuncsWords = ['abs', 'array', 'asc', 'atn', 'cbool', 'cbyte', 'ccur', 'cdate', 'cdbl', 'chr', 'cint', 'clng', 'cos', 'csng', 'cstr', 'date', 'dateadd', 'datediff', 'datepart', 'dateserial', 'datevalue', 'day', 'escape', 'eval', 'execute', 'exp', 'filter', 'formatcurrency', 'formatdatetime', 'formatnumber', 'formatpercent', 'getlocale', 'getobject', 'getref', 'hex', 'hour', 'inputbox', 'instr', 'instrrev', 'int', 'fix', 'isarray', 'isdate', 'isempty', 'isnull', 'isnumeric', 'isobject', 'join', 'lbound', 'lcase', 'left', 'len', 'loadpicture', 'log', 'ltrim', 'rtrim', 'trim', 'maths', 'mid', 'minute', 'month', 'monthname', 'msgbox', 'now', 'oct', 'replace', 'rgb', 'right', 'rnd', 'round', 'scriptengine', 'scriptenginebuildversion', 'scriptenginemajorversion', 'scriptengineminorversion', 'second', 'setlocale', 'sgn', 'sin', 'space', 'split', 'sqr', 'strcomp', 'string', 'strreverse', 'tan', 'time', 'timer', 'timeserial', 'timevalue', 'typename', 'ubound', 'ucase', 'unescape', 'vartype', 'weekday', 'weekdayname', 'year'];\n\n    //This list was from: http://msdn.microsoft.com/en-us/library/ydz4cfk3(v=vs.84).aspx\n    var builtinConsts = ['vbBlack', 'vbRed', 'vbGreen', 'vbYellow', 'vbBlue', 'vbMagenta', 'vbCyan', 'vbWhite', 'vbBinaryCompare', 'vbTextCompare', 'vbSunday', 'vbMonday', 'vbTuesday', 'vbWednesday', 'vbThursday', 'vbFriday', 'vbSaturday', 'vbUseSystemDayOfWeek', 'vbFirstJan1', 'vbFirstFourDays', 'vbFirstFullWeek', 'vbGeneralDate', 'vbLongDate', 'vbShortDate', 'vbLongTime', 'vbShortTime', 'vbObjectError', 'vbOKOnly', 'vbOKCancel', 'vbAbortRetryIgnore', 'vbYesNoCancel', 'vbYesNo', 'vbRetryCancel', 'vbCritical', 'vbQuestion', 'vbExclamation', 'vbInformation', 'vbDefaultButton1', 'vbDefaultButton2', 'vbDefaultButton3', 'vbDefaultButton4', 'vbApplicationModal', 'vbSystemModal', 'vbOK', 'vbCancel', 'vbAbort', 'vbRetry', 'vbIgnore', 'vbYes', 'vbNo', 'vbCr', 'VbCrLf', 'vbFormFeed', 'vbLf', 'vbNewLine', 'vbNullChar', 'vbNullString', 'vbTab', 'vbVerticalTab', 'vbUseDefault', 'vbTrue', 'vbFalse', 'vbEmpty', 'vbNull', 'vbInteger', 'vbLong', 'vbSingle', 'vbDouble', 'vbCurrency', 'vbDate', 'vbString', 'vbObject', 'vbError', 'vbBoolean', 'vbVariant', 'vbDataObject', 'vbDecimal', 'vbByte', 'vbArray'];\n    //This list was from: http://msdn.microsoft.com/en-us/library/hkc375ea(v=vs.84).aspx\n    var builtinObjsWords = ['WScript', 'err', 'debug', 'RegExp'];\n    var knownProperties = ['description', 'firstindex', 'global', 'helpcontext', 'helpfile', 'ignorecase', 'length', 'number', 'pattern', 'source', 'value', 'count'];\n    var knownMethods = ['clear', 'execute', 'raise', 'replace', 'test', 'write', 'writeline', 'close', 'open', 'state', 'eof', 'update', 'addnew', 'end', 'createobject', 'quit'];\n    var aspBuiltinObjsWords = ['server', 'response', 'request', 'session', 'application'];\n    var aspKnownProperties = ['buffer', 'cachecontrol', 'charset', 'contenttype', 'expires', 'expiresabsolute', 'isclientconnected', 'pics', 'status',\n    //response\n    'clientcertificate', 'cookies', 'form', 'querystring', 'servervariables', 'totalbytes',\n    //request\n    'contents', 'staticobjects',\n    //application\n    'codepage', 'lcid', 'sessionid', 'timeout',\n    //session\n    'scripttimeout']; //server\n    var aspKnownMethods = ['addheader', 'appendtolog', 'binarywrite', 'end', 'flush', 'redirect',\n    //response\n    'binaryread',\n    //request\n    'remove', 'removeall', 'lock', 'unlock',\n    //application\n    'abandon',\n    //session\n    'getlasterror', 'htmlencode', 'mappath', 'transfer', 'urlencode']; //server\n\n    var knownWords = knownMethods.concat(knownProperties);\n    builtinObjsWords = builtinObjsWords.concat(builtinConsts);\n    if (conf.isASP) {\n      builtinObjsWords = builtinObjsWords.concat(aspBuiltinObjsWords);\n      knownWords = knownWords.concat(aspKnownMethods, aspKnownProperties);\n    }\n    ;\n    var keywords = wordRegexp(commonkeywords);\n    var atoms = wordRegexp(atomWords);\n    var builtinFuncs = wordRegexp(builtinFuncsWords);\n    var builtinObjs = wordRegexp(builtinObjsWords);\n    var known = wordRegexp(knownWords);\n    var stringPrefixes = '\"';\n    var opening = wordRegexp(openingKeywords);\n    var middle = wordRegexp(middleKeywords);\n    var closing = wordRegexp(endKeywords);\n    var doubleClosing = wordRegexp(['end']);\n    var doOpening = wordRegexp(['do']);\n    var noIndentWords = wordRegexp(['on error resume next', 'exit']);\n    var comment = wordRegexp(['rem']);\n    function indent(_stream, state) {\n      state.currentIndent++;\n    }\n    function dedent(_stream, state) {\n      state.currentIndent--;\n    }\n    // tokenizers\n    function tokenBase(stream, state) {\n      if (stream.eatSpace()) {\n        return 'space';\n        //return null;\n      }\n      var ch = stream.peek();\n\n      // Handle Comments\n      if (ch === \"'\") {\n        stream.skipToEnd();\n        return 'comment';\n      }\n      if (stream.match(comment)) {\n        stream.skipToEnd();\n        return 'comment';\n      }\n\n      // Handle Number Literals\n      if (stream.match(/^((&H)|(&O))?[0-9\\.]/i, false) && !stream.match(/^((&H)|(&O))?[0-9\\.]+[a-z_]/i, false)) {\n        var floatLiteral = false;\n        // Floats\n        if (stream.match(/^\\d*\\.\\d+/i)) {\n          floatLiteral = true;\n        } else if (stream.match(/^\\d+\\.\\d*/)) {\n          floatLiteral = true;\n        } else if (stream.match(/^\\.\\d+/)) {\n          floatLiteral = true;\n        }\n        if (floatLiteral) {\n          // Float literals may be \"imaginary\"\n          stream.eat(/J/i);\n          return 'number';\n        }\n        // Integers\n        var intLiteral = false;\n        // Hex\n        if (stream.match(/^&H[0-9a-f]+/i)) {\n          intLiteral = true;\n        }\n        // Octal\n        else if (stream.match(/^&O[0-7]+/i)) {\n          intLiteral = true;\n        }\n        // Decimal\n        else if (stream.match(/^[1-9]\\d*F?/)) {\n          // Decimal literals may be \"imaginary\"\n          stream.eat(/J/i);\n          // TODO - Can you have imaginary longs?\n          intLiteral = true;\n        }\n        // Zero by itself with no other piece of number.\n        else if (stream.match(/^0(?![\\dx])/i)) {\n          intLiteral = true;\n        }\n        if (intLiteral) {\n          // Integer literals may be \"long\"\n          stream.eat(/L/i);\n          return 'number';\n        }\n      }\n\n      // Handle Strings\n      if (stream.match(stringPrefixes)) {\n        state.tokenize = tokenStringFactory(stream.current());\n        return state.tokenize(stream, state);\n      }\n\n      // Handle operators and Delimiters\n      if (stream.match(doubleOperators) || stream.match(singleOperators) || stream.match(wordOperators)) {\n        return 'operator';\n      }\n      if (stream.match(singleDelimiters)) {\n        return null;\n      }\n      if (stream.match(brackets)) {\n        return \"bracket\";\n      }\n      if (stream.match(noIndentWords)) {\n        state.doInCurrentLine = true;\n        return 'keyword';\n      }\n      if (stream.match(doOpening)) {\n        indent(stream, state);\n        state.doInCurrentLine = true;\n        return 'keyword';\n      }\n      if (stream.match(opening)) {\n        if (!state.doInCurrentLine) indent(stream, state);else state.doInCurrentLine = false;\n        return 'keyword';\n      }\n      if (stream.match(middle)) {\n        return 'keyword';\n      }\n      if (stream.match(doubleClosing)) {\n        dedent(stream, state);\n        dedent(stream, state);\n        return 'keyword';\n      }\n      if (stream.match(closing)) {\n        if (!state.doInCurrentLine) dedent(stream, state);else state.doInCurrentLine = false;\n        return 'keyword';\n      }\n      if (stream.match(keywords)) {\n        return 'keyword';\n      }\n      if (stream.match(atoms)) {\n        return 'atom';\n      }\n      if (stream.match(known)) {\n        return 'variable-2';\n      }\n      if (stream.match(builtinFuncs)) {\n        return 'builtin';\n      }\n      if (stream.match(builtinObjs)) {\n        return 'variable-2';\n      }\n      if (stream.match(identifiers)) {\n        return 'variable';\n      }\n\n      // Handle non-detected items\n      stream.next();\n      return ERRORCLASS;\n    }\n    function tokenStringFactory(delimiter) {\n      var singleline = delimiter.length == 1;\n      var OUTCLASS = 'string';\n      return function (stream, state) {\n        while (!stream.eol()) {\n          stream.eatWhile(/[^'\"]/);\n          if (stream.match(delimiter)) {\n            state.tokenize = tokenBase;\n            return OUTCLASS;\n          } else {\n            stream.eat(/['\"]/);\n          }\n        }\n        if (singleline) {\n          if (parserConf.singleLineStringErrors) {\n            return ERRORCLASS;\n          } else {\n            state.tokenize = tokenBase;\n          }\n        }\n        return OUTCLASS;\n      };\n    }\n    function tokenLexer(stream, state) {\n      var style = state.tokenize(stream, state);\n      var current = stream.current();\n\n      // Handle '.' connected identifiers\n      if (current === '.') {\n        style = state.tokenize(stream, state);\n        current = stream.current();\n        if (style && (style.substr(0, 8) === 'variable' || style === 'builtin' || style === 'keyword')) {\n          //|| knownWords.indexOf(current.substring(1)) > -1) {\n          if (style === 'builtin' || style === 'keyword') style = 'variable';\n          if (knownWords.indexOf(current.substr(1)) > -1) style = 'variable-2';\n          return style;\n        } else {\n          return ERRORCLASS;\n        }\n      }\n      return style;\n    }\n    var external = {\n      electricChars: \"dDpPtTfFeE \",\n      startState: function () {\n        return {\n          tokenize: tokenBase,\n          lastToken: null,\n          currentIndent: 0,\n          nextLineIndent: 0,\n          doInCurrentLine: false,\n          ignoreKeyword: false\n        };\n      },\n      token: function (stream, state) {\n        if (stream.sol()) {\n          state.currentIndent += state.nextLineIndent;\n          state.nextLineIndent = 0;\n          state.doInCurrentLine = 0;\n        }\n        var style = tokenLexer(stream, state);\n        state.lastToken = {\n          style: style,\n          content: stream.current()\n        };\n        if (style === 'space') style = null;\n        return style;\n      },\n      indent: function (state, textAfter) {\n        var trueText = textAfter.replace(/^\\s+|\\s+$/g, '');\n        if (trueText.match(closing) || trueText.match(doubleClosing) || trueText.match(middle)) return conf.indentUnit * (state.currentIndent - 1);\n        if (state.currentIndent < 0) return 0;\n        return state.currentIndent * conf.indentUnit;\n      }\n    };\n    return external;\n  });\n  CodeMirror.defineMIME(\"text/vbscript\", \"vbscript\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","conf","parserConf","ERRORCLASS","wordRegexp","words","RegExp","join","singleOperators","doubleOperators","singleDelimiters","brackets","identifiers","openingKeywords","middleKeywords","endKeywords","wordOperators","commonkeywords","atomWords","builtinFuncsWords","builtinConsts","builtinObjsWords","knownProperties","knownMethods","aspBuiltinObjsWords","aspKnownProperties","aspKnownMethods","knownWords","concat","isASP","keywords","atoms","builtinFuncs","builtinObjs","known","stringPrefixes","opening","middle","closing","doubleClosing","doOpening","noIndentWords","comment","indent","_stream","state","currentIndent","dedent","tokenBase","stream","eatSpace","ch","peek","skipToEnd","match","floatLiteral","eat","intLiteral","tokenize","tokenStringFactory","current","doInCurrentLine","next","delimiter","singleline","length","OUTCLASS","eol","eatWhile","singleLineStringErrors","tokenLexer","style","substr","indexOf","external","electricChars","startState","lastToken","nextLineIndent","ignoreKeyword","token","sol","content","textAfter","trueText","replace","indentUnit","defineMIME"],"sources":["C:/Users/User/Downloads/Salary Payments/node_modules/codemirror/mode/vbscript/vbscript.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/*\nFor extra ASP classic objects, initialize CodeMirror instance with this option:\n    isASP: true\n\nE.G.:\n    var editor = CodeMirror.fromTextArea(document.getElementById(\"code\"), {\n        lineNumbers: true,\n        isASP: true\n      });\n*/\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"vbscript\", function(conf, parserConf) {\n    var ERRORCLASS = 'error';\n\n    function wordRegexp(words) {\n        return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\", \"i\");\n    }\n\n    var singleOperators = new RegExp(\"^[\\\\+\\\\-\\\\*/&\\\\\\\\\\\\^<>=]\");\n    var doubleOperators = new RegExp(\"^((<>)|(<=)|(>=))\");\n    var singleDelimiters = new RegExp('^[\\\\.,]');\n    var brackets = new RegExp('^[\\\\(\\\\)]');\n    var identifiers = new RegExp(\"^[A-Za-z][_A-Za-z0-9]*\");\n\n    var openingKeywords = ['class','sub','select','while','if','function', 'property', 'with', 'for'];\n    var middleKeywords = ['else','elseif','case'];\n    var endKeywords = ['next','loop','wend'];\n\n    var wordOperators = wordRegexp(['and', 'or', 'not', 'xor', 'is', 'mod', 'eqv', 'imp']);\n    var commonkeywords = ['dim', 'redim', 'then',  'until', 'randomize',\n                          'byval','byref','new','property', 'exit', 'in',\n                          'const','private', 'public',\n                          'get','set','let', 'stop', 'on error resume next', 'on error goto 0', 'option explicit', 'call', 'me'];\n\n    //This list was from: http://msdn.microsoft.com/en-us/library/f8tbc79x(v=vs.84).aspx\n    var atomWords = ['true', 'false', 'nothing', 'empty', 'null'];\n    //This list was from: http://msdn.microsoft.com/en-us/library/3ca8tfek(v=vs.84).aspx\n    var builtinFuncsWords = ['abs', 'array', 'asc', 'atn', 'cbool', 'cbyte', 'ccur', 'cdate', 'cdbl', 'chr', 'cint', 'clng', 'cos', 'csng', 'cstr', 'date', 'dateadd', 'datediff', 'datepart',\n                        'dateserial', 'datevalue', 'day', 'escape', 'eval', 'execute', 'exp', 'filter', 'formatcurrency', 'formatdatetime', 'formatnumber', 'formatpercent', 'getlocale', 'getobject',\n                        'getref', 'hex', 'hour', 'inputbox', 'instr', 'instrrev', 'int', 'fix', 'isarray', 'isdate', 'isempty', 'isnull', 'isnumeric', 'isobject', 'join', 'lbound', 'lcase', 'left',\n                        'len', 'loadpicture', 'log', 'ltrim', 'rtrim', 'trim', 'maths', 'mid', 'minute', 'month', 'monthname', 'msgbox', 'now', 'oct', 'replace', 'rgb', 'right', 'rnd', 'round',\n                        'scriptengine', 'scriptenginebuildversion', 'scriptenginemajorversion', 'scriptengineminorversion', 'second', 'setlocale', 'sgn', 'sin', 'space', 'split', 'sqr', 'strcomp',\n                        'string', 'strreverse', 'tan', 'time', 'timer', 'timeserial', 'timevalue', 'typename', 'ubound', 'ucase', 'unescape', 'vartype', 'weekday', 'weekdayname', 'year'];\n\n    //This list was from: http://msdn.microsoft.com/en-us/library/ydz4cfk3(v=vs.84).aspx\n    var builtinConsts = ['vbBlack', 'vbRed', 'vbGreen', 'vbYellow', 'vbBlue', 'vbMagenta', 'vbCyan', 'vbWhite', 'vbBinaryCompare', 'vbTextCompare',\n                         'vbSunday', 'vbMonday', 'vbTuesday', 'vbWednesday', 'vbThursday', 'vbFriday', 'vbSaturday', 'vbUseSystemDayOfWeek', 'vbFirstJan1', 'vbFirstFourDays', 'vbFirstFullWeek',\n                         'vbGeneralDate', 'vbLongDate', 'vbShortDate', 'vbLongTime', 'vbShortTime', 'vbObjectError',\n                         'vbOKOnly', 'vbOKCancel', 'vbAbortRetryIgnore', 'vbYesNoCancel', 'vbYesNo', 'vbRetryCancel', 'vbCritical', 'vbQuestion', 'vbExclamation', 'vbInformation', 'vbDefaultButton1', 'vbDefaultButton2',\n                         'vbDefaultButton3', 'vbDefaultButton4', 'vbApplicationModal', 'vbSystemModal', 'vbOK', 'vbCancel', 'vbAbort', 'vbRetry', 'vbIgnore', 'vbYes', 'vbNo',\n                         'vbCr', 'VbCrLf', 'vbFormFeed', 'vbLf', 'vbNewLine', 'vbNullChar', 'vbNullString', 'vbTab', 'vbVerticalTab', 'vbUseDefault', 'vbTrue', 'vbFalse',\n                         'vbEmpty', 'vbNull', 'vbInteger', 'vbLong', 'vbSingle', 'vbDouble', 'vbCurrency', 'vbDate', 'vbString', 'vbObject', 'vbError', 'vbBoolean', 'vbVariant', 'vbDataObject', 'vbDecimal', 'vbByte', 'vbArray'];\n    //This list was from: http://msdn.microsoft.com/en-us/library/hkc375ea(v=vs.84).aspx\n    var builtinObjsWords = ['WScript', 'err', 'debug', 'RegExp'];\n    var knownProperties = ['description', 'firstindex', 'global', 'helpcontext', 'helpfile', 'ignorecase', 'length', 'number', 'pattern', 'source', 'value', 'count'];\n    var knownMethods = ['clear', 'execute', 'raise', 'replace', 'test', 'write', 'writeline', 'close', 'open', 'state', 'eof', 'update', 'addnew', 'end', 'createobject', 'quit'];\n\n    var aspBuiltinObjsWords = ['server', 'response', 'request', 'session', 'application'];\n    var aspKnownProperties = ['buffer', 'cachecontrol', 'charset', 'contenttype', 'expires', 'expiresabsolute', 'isclientconnected', 'pics', 'status', //response\n                              'clientcertificate', 'cookies', 'form', 'querystring', 'servervariables', 'totalbytes', //request\n                              'contents', 'staticobjects', //application\n                              'codepage', 'lcid', 'sessionid', 'timeout', //session\n                              'scripttimeout']; //server\n    var aspKnownMethods = ['addheader', 'appendtolog', 'binarywrite', 'end', 'flush', 'redirect', //response\n                           'binaryread', //request\n                           'remove', 'removeall', 'lock', 'unlock', //application\n                           'abandon', //session\n                           'getlasterror', 'htmlencode', 'mappath', 'transfer', 'urlencode']; //server\n\n    var knownWords = knownMethods.concat(knownProperties);\n\n    builtinObjsWords = builtinObjsWords.concat(builtinConsts);\n\n    if (conf.isASP){\n        builtinObjsWords = builtinObjsWords.concat(aspBuiltinObjsWords);\n        knownWords = knownWords.concat(aspKnownMethods, aspKnownProperties);\n    };\n\n    var keywords = wordRegexp(commonkeywords);\n    var atoms = wordRegexp(atomWords);\n    var builtinFuncs = wordRegexp(builtinFuncsWords);\n    var builtinObjs = wordRegexp(builtinObjsWords);\n    var known = wordRegexp(knownWords);\n    var stringPrefixes = '\"';\n\n    var opening = wordRegexp(openingKeywords);\n    var middle = wordRegexp(middleKeywords);\n    var closing = wordRegexp(endKeywords);\n    var doubleClosing = wordRegexp(['end']);\n    var doOpening = wordRegexp(['do']);\n    var noIndentWords = wordRegexp(['on error resume next', 'exit']);\n    var comment = wordRegexp(['rem']);\n\n\n    function indent(_stream, state) {\n      state.currentIndent++;\n    }\n\n    function dedent(_stream, state) {\n      state.currentIndent--;\n    }\n    // tokenizers\n    function tokenBase(stream, state) {\n        if (stream.eatSpace()) {\n            return 'space';\n            //return null;\n        }\n\n        var ch = stream.peek();\n\n        // Handle Comments\n        if (ch === \"'\") {\n            stream.skipToEnd();\n            return 'comment';\n        }\n        if (stream.match(comment)){\n            stream.skipToEnd();\n            return 'comment';\n        }\n\n\n        // Handle Number Literals\n        if (stream.match(/^((&H)|(&O))?[0-9\\.]/i, false) && !stream.match(/^((&H)|(&O))?[0-9\\.]+[a-z_]/i, false)) {\n            var floatLiteral = false;\n            // Floats\n            if (stream.match(/^\\d*\\.\\d+/i)) { floatLiteral = true; }\n            else if (stream.match(/^\\d+\\.\\d*/)) { floatLiteral = true; }\n            else if (stream.match(/^\\.\\d+/)) { floatLiteral = true; }\n\n            if (floatLiteral) {\n                // Float literals may be \"imaginary\"\n                stream.eat(/J/i);\n                return 'number';\n            }\n            // Integers\n            var intLiteral = false;\n            // Hex\n            if (stream.match(/^&H[0-9a-f]+/i)) { intLiteral = true; }\n            // Octal\n            else if (stream.match(/^&O[0-7]+/i)) { intLiteral = true; }\n            // Decimal\n            else if (stream.match(/^[1-9]\\d*F?/)) {\n                // Decimal literals may be \"imaginary\"\n                stream.eat(/J/i);\n                // TODO - Can you have imaginary longs?\n                intLiteral = true;\n            }\n            // Zero by itself with no other piece of number.\n            else if (stream.match(/^0(?![\\dx])/i)) { intLiteral = true; }\n            if (intLiteral) {\n                // Integer literals may be \"long\"\n                stream.eat(/L/i);\n                return 'number';\n            }\n        }\n\n        // Handle Strings\n        if (stream.match(stringPrefixes)) {\n            state.tokenize = tokenStringFactory(stream.current());\n            return state.tokenize(stream, state);\n        }\n\n        // Handle operators and Delimiters\n        if (stream.match(doubleOperators)\n            || stream.match(singleOperators)\n            || stream.match(wordOperators)) {\n            return 'operator';\n        }\n        if (stream.match(singleDelimiters)) {\n            return null;\n        }\n\n        if (stream.match(brackets)) {\n            return \"bracket\";\n        }\n\n        if (stream.match(noIndentWords)) {\n            state.doInCurrentLine = true;\n\n            return 'keyword';\n        }\n\n        if (stream.match(doOpening)) {\n            indent(stream,state);\n            state.doInCurrentLine = true;\n\n            return 'keyword';\n        }\n        if (stream.match(opening)) {\n            if (! state.doInCurrentLine)\n              indent(stream,state);\n            else\n              state.doInCurrentLine = false;\n\n            return 'keyword';\n        }\n        if (stream.match(middle)) {\n            return 'keyword';\n        }\n\n\n        if (stream.match(doubleClosing)) {\n            dedent(stream,state);\n            dedent(stream,state);\n\n            return 'keyword';\n        }\n        if (stream.match(closing)) {\n            if (! state.doInCurrentLine)\n              dedent(stream,state);\n            else\n              state.doInCurrentLine = false;\n\n            return 'keyword';\n        }\n\n        if (stream.match(keywords)) {\n            return 'keyword';\n        }\n\n        if (stream.match(atoms)) {\n            return 'atom';\n        }\n\n        if (stream.match(known)) {\n            return 'variable-2';\n        }\n\n        if (stream.match(builtinFuncs)) {\n            return 'builtin';\n        }\n\n        if (stream.match(builtinObjs)){\n            return 'variable-2';\n        }\n\n        if (stream.match(identifiers)) {\n            return 'variable';\n        }\n\n        // Handle non-detected items\n        stream.next();\n        return ERRORCLASS;\n    }\n\n    function tokenStringFactory(delimiter) {\n        var singleline = delimiter.length == 1;\n        var OUTCLASS = 'string';\n\n        return function(stream, state) {\n            while (!stream.eol()) {\n                stream.eatWhile(/[^'\"]/);\n                if (stream.match(delimiter)) {\n                    state.tokenize = tokenBase;\n                    return OUTCLASS;\n                } else {\n                    stream.eat(/['\"]/);\n                }\n            }\n            if (singleline) {\n                if (parserConf.singleLineStringErrors) {\n                    return ERRORCLASS;\n                } else {\n                    state.tokenize = tokenBase;\n                }\n            }\n            return OUTCLASS;\n        };\n    }\n\n\n    function tokenLexer(stream, state) {\n        var style = state.tokenize(stream, state);\n        var current = stream.current();\n\n        // Handle '.' connected identifiers\n        if (current === '.') {\n            style = state.tokenize(stream, state);\n\n            current = stream.current();\n            if (style && (style.substr(0, 8) === 'variable' || style==='builtin' || style==='keyword')){//|| knownWords.indexOf(current.substring(1)) > -1) {\n                if (style === 'builtin' || style === 'keyword') style='variable';\n                if (knownWords.indexOf(current.substr(1)) > -1) style='variable-2';\n\n                return style;\n            } else {\n                return ERRORCLASS;\n            }\n        }\n\n        return style;\n    }\n\n    var external = {\n        electricChars:\"dDpPtTfFeE \",\n        startState: function() {\n            return {\n              tokenize: tokenBase,\n              lastToken: null,\n              currentIndent: 0,\n              nextLineIndent: 0,\n              doInCurrentLine: false,\n              ignoreKeyword: false\n\n\n          };\n        },\n\n        token: function(stream, state) {\n            if (stream.sol()) {\n              state.currentIndent += state.nextLineIndent;\n              state.nextLineIndent = 0;\n              state.doInCurrentLine = 0;\n            }\n            var style = tokenLexer(stream, state);\n\n            state.lastToken = {style:style, content: stream.current()};\n\n            if (style==='space') style=null;\n\n            return style;\n        },\n\n        indent: function(state, textAfter) {\n            var trueText = textAfter.replace(/^\\s+|\\s+$/g, '') ;\n            if (trueText.match(closing) || trueText.match(doubleClosing) || trueText.match(middle)) return conf.indentUnit*(state.currentIndent-1);\n            if(state.currentIndent < 0) return 0;\n            return state.currentIndent * conf.indentUnit;\n        }\n\n    };\n    return external;\n});\n\nCodeMirror.defineMIME(\"text/vbscript\", \"vbscript\");\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}