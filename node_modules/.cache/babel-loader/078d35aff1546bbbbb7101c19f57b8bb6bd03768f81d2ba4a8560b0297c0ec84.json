{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var paramData = {\n    noEndTag: true,\n    soyState: \"param-def\"\n  };\n  var tags = {\n    \"alias\": {\n      noEndTag: true\n    },\n    \"delpackage\": {\n      noEndTag: true\n    },\n    \"namespace\": {\n      noEndTag: true,\n      soyState: \"namespace-def\"\n    },\n    \"@attribute\": paramData,\n    \"@attribute?\": paramData,\n    \"@param\": paramData,\n    \"@param?\": paramData,\n    \"@inject\": paramData,\n    \"@inject?\": paramData,\n    \"@state\": paramData,\n    \"template\": {\n      soyState: \"templ-def\",\n      variableScope: true\n    },\n    \"extern\": {\n      soyState: \"param-def\"\n    },\n    \"export\": {\n      soyState: \"export\"\n    },\n    \"literal\": {},\n    \"msg\": {},\n    \"fallbackmsg\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"select\": {},\n    \"plural\": {},\n    \"let\": {\n      soyState: \"var-def\"\n    },\n    \"if\": {},\n    \"javaimpl\": {},\n    \"jsimpl\": {},\n    \"elseif\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"else\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"switch\": {},\n    \"case\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"default\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"foreach\": {\n      variableScope: true,\n      soyState: \"for-loop\"\n    },\n    \"ifempty\": {\n      noEndTag: true,\n      reduceIndent: true\n    },\n    \"for\": {\n      variableScope: true,\n      soyState: \"for-loop\"\n    },\n    \"call\": {\n      soyState: \"templ-ref\"\n    },\n    \"param\": {\n      soyState: \"param-ref\"\n    },\n    \"print\": {\n      noEndTag: true\n    },\n    \"deltemplate\": {\n      soyState: \"templ-def\",\n      variableScope: true\n    },\n    \"delcall\": {\n      soyState: \"templ-ref\"\n    },\n    \"log\": {},\n    \"element\": {\n      variableScope: true\n    },\n    \"velog\": {},\n    \"const\": {\n      soyState: \"const-def\"\n    }\n  };\n  var indentingTags = Object.keys(tags).filter(function (tag) {\n    return !tags[tag].noEndTag || tags[tag].reduceIndent;\n  });\n  CodeMirror.defineMode(\"soy\", function (config) {\n    var textMode = CodeMirror.getMode(config, \"text/plain\");\n    var modes = {\n      html: CodeMirror.getMode(config, {\n        name: \"text/html\",\n        multilineTagIndentFactor: 2,\n        multilineTagIndentPastTag: false,\n        allowMissingTagName: true\n      }),\n      attributes: textMode,\n      text: textMode,\n      uri: textMode,\n      trusted_resource_uri: textMode,\n      css: CodeMirror.getMode(config, \"text/css\"),\n      js: CodeMirror.getMode(config, {\n        name: \"text/javascript\",\n        statementIndent: 2 * config.indentUnit\n      })\n    };\n    function last(array) {\n      return array[array.length - 1];\n    }\n    function tokenUntil(stream, state, untilRegExp) {\n      if (stream.sol()) {\n        for (var indent = 0; indent < state.indent; indent++) {\n          if (!stream.eat(/\\s/)) break;\n        }\n        if (indent) return null;\n      }\n      var oldString = stream.string;\n      var match = untilRegExp.exec(oldString.substr(stream.pos));\n      if (match) {\n        // We don't use backUp because it backs up just the position, not the state.\n        // This uses an undocumented API.\n        stream.string = oldString.substr(0, stream.pos + match.index);\n      }\n      var result = stream.hideFirstChars(state.indent, function () {\n        var localState = last(state.localStates);\n        return localState.mode.token(stream, localState.state);\n      });\n      stream.string = oldString;\n      return result;\n    }\n    function contains(list, element) {\n      while (list) {\n        if (list.element === element) return true;\n        list = list.next;\n      }\n      return false;\n    }\n    function prepend(list, element) {\n      return {\n        element: element,\n        next: list\n      };\n    }\n    function popcontext(state) {\n      if (!state.context) return;\n      if (state.context.scope) {\n        state.variables = state.context.scope;\n      }\n      state.context = state.context.previousContext;\n    }\n\n    // Reference a variable `name` in `list`.\n    // Let `loose` be truthy to ignore missing identifiers.\n    function ref(list, name, loose) {\n      return contains(list, name) ? \"variable-2\" : loose ? \"variable\" : \"variable-2 error\";\n    }\n\n    // Data for an open soy tag.\n    function Context(previousContext, tag, scope) {\n      this.previousContext = previousContext;\n      this.tag = tag;\n      this.kind = null;\n      this.scope = scope;\n    }\n    function expression(stream, state) {\n      var match;\n      if (stream.match(/[[]/)) {\n        state.soyState.push(\"list-literal\");\n        state.context = new Context(state.context, \"list-literal\", state.variables);\n        state.lookupVariables = false;\n        return null;\n      } else if (stream.match(/map\\b/)) {\n        state.soyState.push(\"map-literal\");\n        return \"keyword\";\n      } else if (stream.match(/record\\b/)) {\n        state.soyState.push(\"record-literal\");\n        return \"keyword\";\n      } else if (stream.match(/([\\w]+)(?=\\()/)) {\n        return \"variable callee\";\n      } else if (match = stream.match(/^[\"']/)) {\n        state.soyState.push(\"string\");\n        state.quoteKind = match[0];\n        return \"string\";\n      } else if (stream.match(/^[(]/)) {\n        state.soyState.push(\"open-parentheses\");\n        return null;\n      } else if (stream.match(/(null|true|false)(?!\\w)/) || stream.match(/0x([0-9a-fA-F]{2,})/) || stream.match(/-?([0-9]*[.])?[0-9]+(e[0-9]*)?/)) {\n        return \"atom\";\n      } else if (stream.match(/(\\||[+\\-*\\/%]|[=!]=|\\?:|[<>]=?)/)) {\n        // Tokenize filter, binary, null propagator, and equality operators.\n        return \"operator\";\n      } else if (match = stream.match(/^\\$([\\w]+)/)) {\n        return ref(state.variables, match[1], !state.lookupVariables);\n      } else if (match = stream.match(/^\\w+/)) {\n        return /^(?:as|and|or|not|in|if)$/.test(match[0]) ? \"keyword\" : null;\n      }\n      stream.next();\n      return null;\n    }\n    return {\n      startState: function () {\n        return {\n          soyState: [],\n          variables: prepend(null, 'ij'),\n          scopes: null,\n          indent: 0,\n          quoteKind: null,\n          context: null,\n          lookupVariables: true,\n          // Is unknown variables considered an error\n          localStates: [{\n            mode: modes.html,\n            state: CodeMirror.startState(modes.html)\n          }]\n        };\n      },\n      copyState: function (state) {\n        return {\n          tag: state.tag,\n          // Last seen Soy tag.\n          soyState: state.soyState.concat([]),\n          variables: state.variables,\n          context: state.context,\n          indent: state.indent,\n          // Indentation of the following line.\n          quoteKind: state.quoteKind,\n          lookupVariables: state.lookupVariables,\n          localStates: state.localStates.map(function (localState) {\n            return {\n              mode: localState.mode,\n              state: CodeMirror.copyState(localState.mode, localState.state)\n            };\n          })\n        };\n      },\n      token: function (stream, state) {\n        var match;\n        switch (last(state.soyState)) {\n          case \"comment\":\n            if (stream.match(/^.*?\\*\\//)) {\n              state.soyState.pop();\n            } else {\n              stream.skipToEnd();\n            }\n            if (!state.context || !state.context.scope) {\n              var paramRe = /@param\\??\\s+(\\S+)/g;\n              var current = stream.current();\n              for (var match; match = paramRe.exec(current);) {\n                state.variables = prepend(state.variables, match[1]);\n              }\n            }\n            return \"comment\";\n          case \"string\":\n            var match = stream.match(/^.*?([\"']|\\\\[\\s\\S])/);\n            if (!match) {\n              stream.skipToEnd();\n            } else if (match[1] == state.quoteKind) {\n              state.quoteKind = null;\n              state.soyState.pop();\n            }\n            return \"string\";\n        }\n        if (!state.soyState.length || last(state.soyState) != \"literal\") {\n          if (stream.match(/^\\/\\*/)) {\n            state.soyState.push(\"comment\");\n            return \"comment\";\n          } else if (stream.match(stream.sol() ? /^\\s*\\/\\/.*/ : /^\\s+\\/\\/.*/)) {\n            return \"comment\";\n          }\n        }\n        switch (last(state.soyState)) {\n          case \"templ-def\":\n            if (match = stream.match(/^\\.?([\\w]+(?!\\.[\\w]+)*)/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n          case \"templ-ref\":\n            if (match = stream.match(/(\\.?[a-zA-Z_][a-zA-Z_0-9]+)+/)) {\n              state.soyState.pop();\n              // If the first character is '.', it can only be a local template.\n              if (match[0][0] == '.') {\n                return \"variable-2\";\n              }\n              // Otherwise\n              return \"variable\";\n            }\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.soyState.pop();\n              return ref(state.variables, match[1], !state.lookupVariables);\n            }\n            stream.next();\n            return null;\n          case \"namespace-def\":\n            if (match = stream.match(/^\\.?([\\w\\.]+)/)) {\n              state.soyState.pop();\n              return \"variable\";\n            }\n            stream.next();\n            return null;\n          case \"param-def\":\n            if (match = stream.match(/^\\*/)) {\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"type\";\n            }\n            if (match = stream.match(/^\\w+/)) {\n              state.variables = prepend(state.variables, match[0]);\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"def\";\n            }\n            stream.next();\n            return null;\n          case \"param-ref\":\n            if (match = stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"property\";\n            }\n            stream.next();\n            return null;\n          case \"open-parentheses\":\n            if (stream.match(/[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n          case \"param-type\":\n            var peekChar = stream.peek();\n            if (\"}]=>,\".indexOf(peekChar) != -1) {\n              state.soyState.pop();\n              return null;\n            } else if (peekChar == \"[\") {\n              state.soyState.push('param-type-record');\n              return null;\n            } else if (peekChar == \"(\") {\n              state.soyState.push('param-type-template');\n              return null;\n            } else if (peekChar == \"<\") {\n              state.soyState.push('param-type-parameter');\n              return null;\n            } else if (match = stream.match(/^([\\w]+|[?])/)) {\n              return \"type\";\n            }\n            stream.next();\n            return null;\n          case \"param-type-record\":\n            var peekChar = stream.peek();\n            if (peekChar == \"]\") {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"property\";\n            }\n            stream.next();\n            return null;\n          case \"param-type-parameter\":\n            if (stream.match(/^[>]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^[<,]/)) {\n              state.soyState.push('param-type');\n              return null;\n            }\n            stream.next();\n            return null;\n          case \"param-type-template\":\n            if (stream.match(/[>]/)) {\n              state.soyState.pop();\n              state.soyState.push('param-type');\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"def\";\n            }\n            stream.next();\n            return null;\n          case \"var-def\":\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.variables = prepend(state.variables, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n          case \"for-loop\":\n            if (stream.match(/\\bin\\b/)) {\n              state.soyState.pop();\n              return \"keyword\";\n            }\n            if (stream.peek() == \"$\") {\n              state.soyState.push('var-def');\n              return null;\n            }\n            stream.next();\n            return null;\n          case \"record-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\");\n              state.soyState.push(\"record-key\");\n              return null;\n            }\n            stream.next();\n            return null;\n          case \"map-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\");\n              state.soyState.push(\"map-value\");\n              return null;\n            }\n            stream.next();\n            return null;\n          case \"list-literal\":\n            if (stream.match(']')) {\n              state.soyState.pop();\n              state.lookupVariables = true;\n              popcontext(state);\n              return null;\n            }\n            if (stream.match(/\\bfor\\b/)) {\n              state.lookupVariables = true;\n              state.soyState.push('for-loop');\n              return \"keyword\";\n            }\n            return expression(stream, state);\n          case \"record-key\":\n            if (stream.match(/[\\w]+/)) {\n              return \"property\";\n            }\n            if (stream.match(/^[:]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            stream.next();\n            return null;\n          case \"map-value\":\n            if (stream.peek() == \")\" || stream.peek() == \",\" || stream.match(/^[:)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n          case \"import\":\n            if (stream.eat(\";\")) {\n              state.soyState.pop();\n              state.indent -= 2 * config.indentUnit;\n              return null;\n            }\n            if (stream.match(/\\w+(?=\\s+as)/)) {\n              return \"variable\";\n            }\n            if (match = stream.match(/\\w+/)) {\n              return /(from|as)/.test(match[0]) ? \"keyword\" : \"def\";\n            }\n            if (match = stream.match(/^[\"']/)) {\n              state.soyState.push(\"string\");\n              state.quoteKind = match[0];\n              return \"string\";\n            }\n            stream.next();\n            return null;\n          case \"tag\":\n            var endTag;\n            var tagName;\n            if (state.tag === undefined) {\n              endTag = true;\n              tagName = '';\n            } else {\n              endTag = state.tag[0] == \"/\";\n              tagName = endTag ? state.tag.substring(1) : state.tag;\n            }\n            var tag = tags[tagName];\n            if (stream.match(/^\\/?}/)) {\n              var selfClosed = stream.current() == \"/}\";\n              if (selfClosed && !endTag) {\n                popcontext(state);\n              }\n              if (state.tag == \"/template\" || state.tag == \"/deltemplate\") {\n                state.variables = prepend(null, 'ij');\n                state.indent = 0;\n              } else {\n                state.indent -= config.indentUnit * (selfClosed || indentingTags.indexOf(state.tag) == -1 ? 2 : 1);\n              }\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.match(/^([\\w?]+)(?==)/)) {\n              if (state.context && state.context.tag == tagName && stream.current() == \"kind\" && (match = stream.match(/^=\"([^\"]+)/, false))) {\n                var kind = match[1];\n                state.context.kind = kind;\n                var mode = modes[kind] || modes.html;\n                var localState = last(state.localStates);\n                if (localState.mode.indent) {\n                  state.indent += localState.mode.indent(localState.state, \"\", \"\");\n                }\n                state.localStates.push({\n                  mode: mode,\n                  state: CodeMirror.startState(mode)\n                });\n              }\n              return \"attribute\";\n            }\n            return expression(stream, state);\n          case \"template-call-expression\":\n            if (stream.match(/^([\\w-?]+)(?==)/)) {\n              return \"attribute\";\n            } else if (stream.eat('>')) {\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.eat('/>')) {\n              state.soyState.pop();\n              return \"keyword\";\n            }\n            return expression(stream, state);\n          case \"literal\":\n            if (stream.match('{/literal}', false)) {\n              state.soyState.pop();\n              return this.token(stream, state);\n            }\n            return tokenUntil(stream, state, /\\{\\/literal}/);\n          case \"export\":\n            if (match = stream.match(/\\w+/)) {\n              state.soyState.pop();\n              if (match == \"const\") {\n                state.soyState.push(\"const-def\");\n                return \"keyword\";\n              } else if (match == \"extern\") {\n                state.soyState.push(\"param-def\");\n                return \"keyword\";\n              }\n            } else {\n              stream.next();\n            }\n            return null;\n          case \"const-def\":\n            if (stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n        }\n        if (stream.match('{literal}')) {\n          state.indent += config.indentUnit;\n          state.soyState.push(\"literal\");\n          state.context = new Context(state.context, \"literal\", state.variables);\n          return \"keyword\";\n\n          // A tag-keyword must be followed by whitespace, comment or a closing tag.\n        } else if (match = stream.match(/^\\{([/@\\\\]?\\w+\\??)(?=$|[\\s}]|\\/[/*])/)) {\n          var prevTag = state.tag;\n          state.tag = match[1];\n          var endTag = state.tag[0] == \"/\";\n          var indentingTag = !!tags[state.tag];\n          var tagName = endTag ? state.tag.substring(1) : state.tag;\n          var tag = tags[tagName];\n          if (state.tag != \"/switch\") state.indent += ((endTag || tag && tag.reduceIndent) && prevTag != \"switch\" ? 1 : 2) * config.indentUnit;\n          state.soyState.push(\"tag\");\n          var tagError = false;\n          if (tag) {\n            if (!endTag) {\n              if (tag.soyState) state.soyState.push(tag.soyState);\n            }\n            // If a new tag, open a new context.\n            if (!tag.noEndTag && (indentingTag || !endTag)) {\n              state.context = new Context(state.context, state.tag, tag.variableScope ? state.variables : null);\n              // Otherwise close the current context.\n            } else if (endTag) {\n              var isBalancedForExtern = tagName == 'extern' && state.context && state.context.tag == 'export';\n              if (!state.context || state.context.tag != tagName && !isBalancedForExtern) {\n                tagError = true;\n              } else if (state.context) {\n                if (state.context.kind) {\n                  state.localStates.pop();\n                  var localState = last(state.localStates);\n                  if (localState.mode.indent) {\n                    state.indent -= localState.mode.indent(localState.state, \"\", \"\");\n                  }\n                }\n                popcontext(state);\n              }\n            }\n          } else if (endTag) {\n            // Assume all tags with a closing tag are defined in the config.\n            tagError = true;\n          }\n          return (tagError ? \"error \" : \"\") + \"keyword\";\n\n          // Not a tag-keyword; it's an implicit print tag.\n        } else if (stream.eat('{')) {\n          state.tag = \"print\";\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        } else if (!state.context && stream.match(/\\bimport\\b/)) {\n          state.soyState.push(\"import\");\n          state.indent += 2 * config.indentUnit;\n          return \"keyword\";\n        } else if (match = stream.match('<{')) {\n          state.soyState.push(\"template-call-expression\");\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        } else if (match = stream.match('</>')) {\n          state.indent -= 1 * config.indentUnit;\n          return \"keyword\";\n        }\n        return tokenUntil(stream, state, /\\{|\\s+\\/\\/|\\/\\*/);\n      },\n      indent: function (state, textAfter, line) {\n        var indent = state.indent,\n          top = last(state.soyState);\n        if (top == \"comment\") return CodeMirror.Pass;\n        if (top == \"literal\") {\n          if (/^\\{\\/literal}/.test(textAfter)) indent -= config.indentUnit;\n        } else {\n          if (/^\\s*\\{\\/(template|deltemplate)\\b/.test(textAfter)) return 0;\n          if (/^\\{(\\/|(fallbackmsg|elseif|else|ifempty)\\b)/.test(textAfter)) indent -= config.indentUnit;\n          if (state.tag != \"switch\" && /^\\{(case|default)\\b/.test(textAfter)) indent -= config.indentUnit;\n          if (/^\\{\\/switch\\b/.test(textAfter)) indent -= config.indentUnit;\n        }\n        var localState = last(state.localStates);\n        if (indent && localState.mode.indent) {\n          indent += localState.mode.indent(localState.state, textAfter, line);\n        }\n        return indent;\n      },\n      innerMode: function (state) {\n        if (state.soyState.length && last(state.soyState) != \"literal\") return null;else return last(state.localStates);\n      },\n      electricInput: /^\\s*\\{(\\/|\\/template|\\/deltemplate|\\/switch|fallbackmsg|elseif|else|case|default|ifempty|\\/literal\\})$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      useInnerComments: false,\n      fold: \"indent\"\n    };\n  }, \"htmlmixed\");\n  CodeMirror.registerHelper(\"wordChars\", \"soy\", /[\\w$]/);\n  CodeMirror.registerHelper(\"hintWords\", \"soy\", Object.keys(tags).concat([\"css\", \"debugger\"]));\n  CodeMirror.defineMIME(\"text/x-soy\", \"soy\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","paramData","noEndTag","soyState","tags","variableScope","reduceIndent","indentingTags","Object","keys","filter","tag","defineMode","config","textMode","getMode","modes","html","name","multilineTagIndentFactor","multilineTagIndentPastTag","allowMissingTagName","attributes","text","uri","trusted_resource_uri","css","js","statementIndent","indentUnit","last","array","length","tokenUntil","stream","state","untilRegExp","sol","indent","eat","oldString","string","match","exec","substr","pos","index","result","hideFirstChars","localState","localStates","mode","token","contains","list","element","next","prepend","popcontext","context","scope","variables","previousContext","ref","loose","Context","kind","expression","push","lookupVariables","quoteKind","test","startState","scopes","copyState","concat","map","pop","skipToEnd","paramRe","current","peekChar","peek","indexOf","endTag","tagName","undefined","substring","selfClosed","prevTag","indentingTag","tagError","isBalancedForExtern","textAfter","line","top","Pass","innerMode","electricInput","lineComment","blockCommentStart","blockCommentEnd","blockCommentContinue","useInnerComments","fold","registerHelper","defineMIME"],"sources":["C:/Users/User/Downloads/Multisender-App-main/node_modules/codemirror/mode/soy/soy.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var paramData = { noEndTag: true, soyState: \"param-def\" };\n  var tags = {\n    \"alias\": { noEndTag: true },\n    \"delpackage\": { noEndTag: true },\n    \"namespace\": { noEndTag: true, soyState: \"namespace-def\" },\n    \"@attribute\": paramData,\n    \"@attribute?\": paramData,\n    \"@param\": paramData,\n    \"@param?\": paramData,\n    \"@inject\": paramData,\n    \"@inject?\": paramData,\n    \"@state\": paramData,\n    \"template\": { soyState: \"templ-def\", variableScope: true},\n    \"extern\": {soyState: \"param-def\"},\n    \"export\": {soyState: \"export\"},\n    \"literal\": { },\n    \"msg\": {},\n    \"fallbackmsg\": { noEndTag: true, reduceIndent: true},\n    \"select\": {},\n    \"plural\": {},\n    \"let\": { soyState: \"var-def\" },\n    \"if\": {},\n    \"javaimpl\": {},\n    \"jsimpl\": {},\n    \"elseif\": { noEndTag: true, reduceIndent: true},\n    \"else\": { noEndTag: true, reduceIndent: true},\n    \"switch\": {},\n    \"case\": { noEndTag: true, reduceIndent: true},\n    \"default\": { noEndTag: true, reduceIndent: true},\n    \"foreach\": { variableScope: true, soyState: \"for-loop\" },\n    \"ifempty\": { noEndTag: true, reduceIndent: true},\n    \"for\": { variableScope: true, soyState: \"for-loop\" },\n    \"call\": { soyState: \"templ-ref\" },\n    \"param\": { soyState: \"param-ref\"},\n    \"print\": { noEndTag: true },\n    \"deltemplate\": { soyState: \"templ-def\", variableScope: true},\n    \"delcall\": { soyState: \"templ-ref\" },\n    \"log\": {},\n    \"element\": { variableScope: true },\n    \"velog\": {},\n    \"const\": { soyState: \"const-def\"},\n  };\n\n  var indentingTags = Object.keys(tags).filter(function(tag) {\n    return !tags[tag].noEndTag || tags[tag].reduceIndent;\n  });\n\n  CodeMirror.defineMode(\"soy\", function(config) {\n    var textMode = CodeMirror.getMode(config, \"text/plain\");\n    var modes = {\n      html: CodeMirror.getMode(config, {name: \"text/html\", multilineTagIndentFactor: 2, multilineTagIndentPastTag: false, allowMissingTagName: true}),\n      attributes: textMode,\n      text: textMode,\n      uri: textMode,\n      trusted_resource_uri: textMode,\n      css: CodeMirror.getMode(config, \"text/css\"),\n      js: CodeMirror.getMode(config, {name: \"text/javascript\", statementIndent: 2 * config.indentUnit})\n    };\n\n    function last(array) {\n      return array[array.length - 1];\n    }\n\n    function tokenUntil(stream, state, untilRegExp) {\n      if (stream.sol()) {\n        for (var indent = 0; indent < state.indent; indent++) {\n          if (!stream.eat(/\\s/)) break;\n        }\n        if (indent) return null;\n      }\n      var oldString = stream.string;\n      var match = untilRegExp.exec(oldString.substr(stream.pos));\n      if (match) {\n        // We don't use backUp because it backs up just the position, not the state.\n        // This uses an undocumented API.\n        stream.string = oldString.substr(0, stream.pos + match.index);\n      }\n      var result = stream.hideFirstChars(state.indent, function() {\n        var localState = last(state.localStates);\n        return localState.mode.token(stream, localState.state);\n      });\n      stream.string = oldString;\n      return result;\n    }\n\n    function contains(list, element) {\n      while (list) {\n        if (list.element === element) return true;\n        list = list.next;\n      }\n      return false;\n    }\n\n    function prepend(list, element) {\n      return {\n        element: element,\n        next: list\n      };\n    }\n\n    function popcontext(state) {\n      if (!state.context) return;\n      if (state.context.scope) {\n        state.variables = state.context.scope;\n      }\n      state.context = state.context.previousContext;\n    }\n\n    // Reference a variable `name` in `list`.\n    // Let `loose` be truthy to ignore missing identifiers.\n    function ref(list, name, loose) {\n      return contains(list, name) ? \"variable-2\" : (loose ? \"variable\" : \"variable-2 error\");\n    }\n\n    // Data for an open soy tag.\n    function Context(previousContext, tag, scope) {\n      this.previousContext = previousContext;\n      this.tag = tag;\n      this.kind = null;\n      this.scope = scope;\n    }\n\n    function expression(stream, state) {\n      var match;\n      if (stream.match(/[[]/)) {\n        state.soyState.push(\"list-literal\");\n        state.context = new Context(state.context, \"list-literal\", state.variables);\n        state.lookupVariables = false;\n        return null;\n      } else if (stream.match(/map\\b/)) {\n        state.soyState.push(\"map-literal\");\n        return \"keyword\";\n      } else if (stream.match(/record\\b/)) {\n        state.soyState.push(\"record-literal\");\n        return \"keyword\";\n      } else if (stream.match(/([\\w]+)(?=\\()/)) {\n        return \"variable callee\";\n      } else if (match = stream.match(/^[\"']/)) {\n        state.soyState.push(\"string\");\n        state.quoteKind = match[0];\n        return \"string\";\n      } else if (stream.match(/^[(]/)) {\n        state.soyState.push(\"open-parentheses\");\n        return null;\n      } else if (stream.match(/(null|true|false)(?!\\w)/) ||\n          stream.match(/0x([0-9a-fA-F]{2,})/) ||\n          stream.match(/-?([0-9]*[.])?[0-9]+(e[0-9]*)?/)) {\n        return \"atom\";\n      } else if (stream.match(/(\\||[+\\-*\\/%]|[=!]=|\\?:|[<>]=?)/)) {\n        // Tokenize filter, binary, null propagator, and equality operators.\n        return \"operator\";\n      } else if (match = stream.match(/^\\$([\\w]+)/)) {\n        return ref(state.variables, match[1], !state.lookupVariables);\n      } else if (match = stream.match(/^\\w+/)) {\n        return /^(?:as|and|or|not|in|if)$/.test(match[0]) ? \"keyword\" : null;\n      }\n\n      stream.next();\n      return null;\n    }\n\n    return {\n      startState: function() {\n        return {\n          soyState: [],\n          variables: prepend(null, 'ij'),\n          scopes: null,\n          indent: 0,\n          quoteKind: null,\n          context: null,\n          lookupVariables: true, // Is unknown variables considered an error\n          localStates: [{\n            mode: modes.html,\n            state: CodeMirror.startState(modes.html)\n          }]\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          tag: state.tag, // Last seen Soy tag.\n          soyState: state.soyState.concat([]),\n          variables: state.variables,\n          context: state.context,\n          indent: state.indent, // Indentation of the following line.\n          quoteKind: state.quoteKind,\n          lookupVariables: state.lookupVariables,\n          localStates: state.localStates.map(function(localState) {\n            return {\n              mode: localState.mode,\n              state: CodeMirror.copyState(localState.mode, localState.state)\n            };\n          })\n        };\n      },\n\n      token: function(stream, state) {\n        var match;\n\n        switch (last(state.soyState)) {\n          case \"comment\":\n            if (stream.match(/^.*?\\*\\//)) {\n              state.soyState.pop();\n            } else {\n              stream.skipToEnd();\n            }\n            if (!state.context || !state.context.scope) {\n              var paramRe = /@param\\??\\s+(\\S+)/g;\n              var current = stream.current();\n              for (var match; (match = paramRe.exec(current)); ) {\n                state.variables = prepend(state.variables, match[1]);\n              }\n            }\n            return \"comment\";\n\n          case \"string\":\n            var match = stream.match(/^.*?([\"']|\\\\[\\s\\S])/);\n            if (!match) {\n              stream.skipToEnd();\n            } else if (match[1] == state.quoteKind) {\n              state.quoteKind = null;\n              state.soyState.pop();\n            }\n            return \"string\";\n        }\n\n        if (!state.soyState.length || last(state.soyState) != \"literal\") {\n          if (stream.match(/^\\/\\*/)) {\n            state.soyState.push(\"comment\");\n            return \"comment\";\n          } else if (stream.match(stream.sol() ? /^\\s*\\/\\/.*/ : /^\\s+\\/\\/.*/)) {\n            return \"comment\";\n          }\n        }\n\n        switch (last(state.soyState)) {\n          case \"templ-def\":\n            if (match = stream.match(/^\\.?([\\w]+(?!\\.[\\w]+)*)/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"templ-ref\":\n            if (match = stream.match(/(\\.?[a-zA-Z_][a-zA-Z_0-9]+)+/)) {\n              state.soyState.pop();\n              // If the first character is '.', it can only be a local template.\n              if (match[0][0] == '.') {\n                return \"variable-2\"\n              }\n              // Otherwise\n              return \"variable\";\n            }\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.soyState.pop();\n              return ref(state.variables, match[1], !state.lookupVariables);\n            }\n\n            stream.next();\n            return null;\n\n          case \"namespace-def\":\n            if (match = stream.match(/^\\.?([\\w\\.]+)/)) {\n              state.soyState.pop();\n              return \"variable\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-def\":\n            if (match = stream.match(/^\\*/)) {\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"type\";\n            }\n            if (match = stream.match(/^\\w+/)) {\n              state.variables = prepend(state.variables, match[0]);\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-ref\":\n            if (match = stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"open-parentheses\":\n            if (stream.match(/[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"param-type\":\n            var peekChar = stream.peek();\n            if (\"}]=>,\".indexOf(peekChar) != -1) {\n              state.soyState.pop();\n              return null;\n            } else if (peekChar == \"[\") {\n              state.soyState.push('param-type-record');\n              return null;\n            } else if (peekChar == \"(\") {\n              state.soyState.push('param-type-template');\n              return null;\n            } else if (peekChar == \"<\") {\n              state.soyState.push('param-type-parameter');\n              return null;\n            } else if (match = stream.match(/^([\\w]+|[?])/)) {\n              return \"type\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-record\":\n            var peekChar = stream.peek();\n            if (peekChar == \"]\") {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-parameter\":\n            if (stream.match(/^[>]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^[<,]/)) {\n              state.soyState.push('param-type');\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-template\":\n            if (stream.match(/[>]/)) {\n              state.soyState.pop();\n              state.soyState.push('param-type');\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"var-def\":\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.variables = prepend(state.variables, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"for-loop\":\n            if (stream.match(/\\bin\\b/)) {\n              state.soyState.pop();\n              return \"keyword\";\n            }\n            if (stream.peek() == \"$\") {\n              state.soyState.push('var-def');\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"record-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"record-key\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"map-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"map-value\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"list-literal\":\n            if (stream.match(']')) {\n              state.soyState.pop();\n              state.lookupVariables = true;\n              popcontext(state);\n              return null;\n            }\n            if (stream.match(/\\bfor\\b/)) {\n              state.lookupVariables = true;\n              state.soyState.push('for-loop');\n              return \"keyword\";\n            }\n            return expression(stream, state);\n\n          case \"record-key\":\n            if (stream.match(/[\\w]+/)) {\n              return \"property\";\n            }\n            if (stream.match(/^[:]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"map-value\":\n            if (stream.peek() == \")\" || stream.peek() == \",\" || stream.match(/^[:)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"import\":\n            if (stream.eat(\";\")) {\n              state.soyState.pop();\n              state.indent -= 2 * config.indentUnit;\n              return null;\n            }\n            if (stream.match(/\\w+(?=\\s+as)/)) {\n              return \"variable\";\n            }\n            if (match = stream.match(/\\w+/)) {\n              return /(from|as)/.test(match[0]) ? \"keyword\" : \"def\";\n            }\n            if (match = stream.match(/^[\"']/)) {\n              state.soyState.push(\"string\");\n              state.quoteKind = match[0];\n              return \"string\";\n            }\n            stream.next();\n            return null;\n\n          case \"tag\":\n            var endTag;\n            var tagName;\n            if (state.tag === undefined) {\n              endTag = true;\n              tagName = '';\n            } else {\n              endTag = state.tag[0] == \"/\";\n              tagName = endTag ? state.tag.substring(1) : state.tag;\n            }\n            var tag = tags[tagName];\n            if (stream.match(/^\\/?}/)) {\n              var selfClosed = stream.current() == \"/}\";\n              if (selfClosed && !endTag) {\n                popcontext(state);\n              }\n              if (state.tag == \"/template\" || state.tag == \"/deltemplate\") {\n                state.variables = prepend(null, 'ij');\n                state.indent = 0;\n              } else {\n                state.indent -= config.indentUnit *\n                    (selfClosed || indentingTags.indexOf(state.tag) == -1 ? 2 : 1);\n              }\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.match(/^([\\w?]+)(?==)/)) {\n              if (state.context && state.context.tag == tagName && stream.current() == \"kind\" && (match = stream.match(/^=\"([^\"]+)/, false))) {\n                var kind = match[1];\n                state.context.kind = kind;\n                var mode = modes[kind] || modes.html;\n                var localState = last(state.localStates);\n                if (localState.mode.indent) {\n                  state.indent += localState.mode.indent(localState.state, \"\", \"\");\n                }\n                state.localStates.push({\n                  mode: mode,\n                  state: CodeMirror.startState(mode)\n                });\n              }\n              return \"attribute\";\n            }\n            return expression(stream, state);\n\n          case \"template-call-expression\":\n            if (stream.match(/^([\\w-?]+)(?==)/)) {\n              return \"attribute\";\n            } else if (stream.eat('>')) {\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.eat('/>')) {\n              state.soyState.pop();\n              return \"keyword\";\n            }\n            return expression(stream, state);\n          case \"literal\":\n            if (stream.match('{/literal}', false)) {\n              state.soyState.pop();\n              return this.token(stream, state);\n            }\n            return tokenUntil(stream, state, /\\{\\/literal}/);\n          case \"export\":\n            if (match = stream.match(/\\w+/)) {\n              state.soyState.pop();\n              if (match == \"const\") {\n                state.soyState.push(\"const-def\")\n                return \"keyword\";\n              } else if (match == \"extern\") {\n                state.soyState.push(\"param-def\")\n                return \"keyword\";\n              }\n            } else {\n              stream.next();\n            }\n            return null;\n          case \"const-def\":\n            if (stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n        }\n\n        if (stream.match('{literal}')) {\n          state.indent += config.indentUnit;\n          state.soyState.push(\"literal\");\n          state.context = new Context(state.context, \"literal\", state.variables);\n          return \"keyword\";\n\n        // A tag-keyword must be followed by whitespace, comment or a closing tag.\n        } else if (match = stream.match(/^\\{([/@\\\\]?\\w+\\??)(?=$|[\\s}]|\\/[/*])/)) {\n          var prevTag = state.tag;\n          state.tag = match[1];\n          var endTag = state.tag[0] == \"/\";\n          var indentingTag = !!tags[state.tag];\n          var tagName = endTag ? state.tag.substring(1) : state.tag;\n          var tag = tags[tagName];\n          if (state.tag != \"/switch\")\n            state.indent += ((endTag || tag && tag.reduceIndent) && prevTag != \"switch\" ? 1 : 2) * config.indentUnit;\n\n          state.soyState.push(\"tag\");\n          var tagError = false;\n          if (tag) {\n            if (!endTag) {\n              if (tag.soyState) state.soyState.push(tag.soyState);\n            }\n            // If a new tag, open a new context.\n            if (!tag.noEndTag && (indentingTag || !endTag)) {\n              state.context = new Context(state.context, state.tag, tag.variableScope ? state.variables : null);\n            // Otherwise close the current context.\n            } else if (endTag) {\n              var isBalancedForExtern = tagName == 'extern' && (state.context && state.context.tag == 'export');\n              if (!state.context || ((state.context.tag != tagName) && !isBalancedForExtern)) {\n                tagError = true;\n              } else if (state.context) {\n                if (state.context.kind) {\n                  state.localStates.pop();\n                  var localState = last(state.localStates);\n                  if (localState.mode.indent) {\n                    state.indent -= localState.mode.indent(localState.state, \"\", \"\");\n                  }\n                }\n                popcontext(state);\n              }\n            }\n          } else if (endTag) {\n            // Assume all tags with a closing tag are defined in the config.\n            tagError = true;\n          }\n          return (tagError ? \"error \" : \"\") + \"keyword\";\n\n        // Not a tag-keyword; it's an implicit print tag.\n        } else if (stream.eat('{')) {\n          state.tag = \"print\";\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        } else if (!state.context && stream.match(/\\bimport\\b/)) {\n          state.soyState.push(\"import\");\n          state.indent += 2 * config.indentUnit;\n          return \"keyword\";\n        } else if (match = stream.match('<{')) {\n          state.soyState.push(\"template-call-expression\");\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        } else if (match = stream.match('</>')) {\n          state.indent -= 1 * config.indentUnit;\n          return \"keyword\";\n        }\n\n        return tokenUntil(stream, state, /\\{|\\s+\\/\\/|\\/\\*/);\n      },\n\n      indent: function(state, textAfter, line) {\n        var indent = state.indent, top = last(state.soyState);\n        if (top == \"comment\") return CodeMirror.Pass;\n\n        if (top == \"literal\") {\n          if (/^\\{\\/literal}/.test(textAfter)) indent -= config.indentUnit;\n        } else {\n          if (/^\\s*\\{\\/(template|deltemplate)\\b/.test(textAfter)) return 0;\n          if (/^\\{(\\/|(fallbackmsg|elseif|else|ifempty)\\b)/.test(textAfter)) indent -= config.indentUnit;\n          if (state.tag != \"switch\" && /^\\{(case|default)\\b/.test(textAfter)) indent -= config.indentUnit;\n          if (/^\\{\\/switch\\b/.test(textAfter)) indent -= config.indentUnit;\n        }\n        var localState = last(state.localStates);\n        if (indent && localState.mode.indent) {\n          indent += localState.mode.indent(localState.state, textAfter, line);\n        }\n        return indent;\n      },\n\n      innerMode: function(state) {\n        if (state.soyState.length && last(state.soyState) != \"literal\") return null;\n        else return last(state.localStates);\n      },\n\n      electricInput: /^\\s*\\{(\\/|\\/template|\\/deltemplate|\\/switch|fallbackmsg|elseif|else|case|default|ifempty|\\/literal\\})$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      useInnerComments: false,\n      fold: \"indent\"\n    };\n  }, \"htmlmixed\");\n\n  CodeMirror.registerHelper(\"wordChars\", \"soy\", /[\\w$]/);\n\n  CodeMirror.registerHelper(\"hintWords\", \"soy\", Object.keys(tags).concat(\n      [\"css\", \"debugger\"]));\n\n  CodeMirror.defineMIME(\"text/x-soy\", \"soy\");\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}