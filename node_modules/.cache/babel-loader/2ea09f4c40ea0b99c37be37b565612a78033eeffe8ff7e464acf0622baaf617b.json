{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"groovy\", function (config) {\n    function words(str) {\n      var obj = {},\n        words = str.split(\" \");\n      for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n      return obj;\n    }\n    var keywords = words(\"abstract as assert boolean break byte case catch char class const continue def default \" + \"do double else enum extends final finally float for goto if implements import in \" + \"instanceof int interface long native new package private protected public return \" + \"short static strictfp super switch synchronized threadsafe throw throws trait transient \" + \"try void volatile while\");\n    var blockKeywords = words(\"catch class def do else enum finally for if interface switch trait try while\");\n    var standaloneKeywords = words(\"return break continue\");\n    var atoms = words(\"null true false this\");\n    var curPunc;\n    function tokenBase(stream, state) {\n      var ch = stream.next();\n      if (ch == '\"' || ch == \"'\") {\n        return startString(ch, stream, state);\n      }\n      if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n        curPunc = ch;\n        return null;\n      }\n      if (/\\d/.test(ch)) {\n        stream.eatWhile(/[\\w\\.]/);\n        if (stream.eat(/eE/)) {\n          stream.eat(/\\+\\-/);\n          stream.eatWhile(/\\d/);\n        }\n        return \"number\";\n      }\n      if (ch == \"/\") {\n        if (stream.eat(\"*\")) {\n          state.tokenize.push(tokenComment);\n          return tokenComment(stream, state);\n        }\n        if (stream.eat(\"/\")) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n        if (expectExpression(state.lastToken, false)) {\n          return startString(ch, stream, state);\n        }\n      }\n      if (ch == \"-\" && stream.eat(\">\")) {\n        curPunc = \"->\";\n        return null;\n      }\n      if (/[+\\-*&%=<>!?|\\/~]/.test(ch)) {\n        stream.eatWhile(/[+\\-*&%=<>|~]/);\n        return \"operator\";\n      }\n      stream.eatWhile(/[\\w\\$_]/);\n      if (ch == \"@\") {\n        stream.eatWhile(/[\\w\\$_\\.]/);\n        return \"meta\";\n      }\n      if (state.lastToken == \".\") return \"property\";\n      if (stream.eat(\":\")) {\n        curPunc = \"proplabel\";\n        return \"property\";\n      }\n      var cur = stream.current();\n      if (atoms.propertyIsEnumerable(cur)) {\n        return \"atom\";\n      }\n      if (keywords.propertyIsEnumerable(cur)) {\n        if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";else if (standaloneKeywords.propertyIsEnumerable(cur)) curPunc = \"standalone\";\n        return \"keyword\";\n      }\n      return \"variable\";\n    }\n    tokenBase.isBase = true;\n    function startString(quote, stream, state) {\n      var tripleQuoted = false;\n      if (quote != \"/\" && stream.eat(quote)) {\n        if (stream.eat(quote)) tripleQuoted = true;else return \"string\";\n      }\n      function t(stream, state) {\n        var escaped = false,\n          next,\n          end = !tripleQuoted;\n        while ((next = stream.next()) != null) {\n          if (next == quote && !escaped) {\n            if (!tripleQuoted) {\n              break;\n            }\n            if (stream.match(quote + quote)) {\n              end = true;\n              break;\n            }\n          }\n          if (quote == '\"' && next == \"$\" && !escaped && stream.eat(\"{\")) {\n            state.tokenize.push(tokenBaseUntilBrace());\n            return \"string\";\n          }\n          escaped = !escaped && next == \"\\\\\";\n        }\n        if (end) state.tokenize.pop();\n        return \"string\";\n      }\n      state.tokenize.push(t);\n      return t(stream, state);\n    }\n    function tokenBaseUntilBrace() {\n      var depth = 1;\n      function t(stream, state) {\n        if (stream.peek() == \"}\") {\n          depth--;\n          if (depth == 0) {\n            state.tokenize.pop();\n            return state.tokenize[state.tokenize.length - 1](stream, state);\n          }\n        } else if (stream.peek() == \"{\") {\n          depth++;\n        }\n        return tokenBase(stream, state);\n      }\n      t.isBase = true;\n      return t;\n    }\n    function tokenComment(stream, state) {\n      var maybeEnd = false,\n        ch;\n      while (ch = stream.next()) {\n        if (ch == \"/\" && maybeEnd) {\n          state.tokenize.pop();\n          break;\n        }\n        maybeEnd = ch == \"*\";\n      }\n      return \"comment\";\n    }\n    function expectExpression(last, newline) {\n      return !last || last == \"operator\" || last == \"->\" || /[\\.\\[\\{\\(,;:]/.test(last) || last == \"newstatement\" || last == \"keyword\" || last == \"proplabel\" || last == \"standalone\" && !newline;\n    }\n    function Context(indented, column, type, align, prev) {\n      this.indented = indented;\n      this.column = column;\n      this.type = type;\n      this.align = align;\n      this.prev = prev;\n    }\n    function pushContext(state, col, type) {\n      return state.context = new Context(state.indented, col, type, null, state.context);\n    }\n    function popContext(state) {\n      var t = state.context.type;\n      if (t == \")\" || t == \"]\" || t == \"}\") state.indented = state.context.indented;\n      return state.context = state.context.prev;\n    }\n\n    // Interface\n\n    return {\n      startState: function (basecolumn) {\n        return {\n          tokenize: [tokenBase],\n          context: new Context((basecolumn || 0) - config.indentUnit, 0, \"top\", false),\n          indented: 0,\n          startOfLine: true,\n          lastToken: null\n        };\n      },\n      token: function (stream, state) {\n        var ctx = state.context;\n        if (stream.sol()) {\n          if (ctx.align == null) ctx.align = false;\n          state.indented = stream.indentation();\n          state.startOfLine = true;\n          // Automatic semicolon insertion\n          if (ctx.type == \"statement\" && !expectExpression(state.lastToken, true)) {\n            popContext(state);\n            ctx = state.context;\n          }\n        }\n        if (stream.eatSpace()) return null;\n        curPunc = null;\n        var style = state.tokenize[state.tokenize.length - 1](stream, state);\n        if (style == \"comment\") return style;\n        if (ctx.align == null) ctx.align = true;\n        if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);\n        // Handle indentation for {x -> \\n ... }\n        else if (curPunc == \"->\" && ctx.type == \"statement\" && ctx.prev.type == \"}\") {\n          popContext(state);\n          state.context.align = false;\n        } else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");else if (curPunc == \"}\") {\n          while (ctx.type == \"statement\") ctx = popContext(state);\n          if (ctx.type == \"}\") ctx = popContext(state);\n          while (ctx.type == \"statement\") ctx = popContext(state);\n        } else if (curPunc == ctx.type) popContext(state);else if (ctx.type == \"}\" || ctx.type == \"top\" || ctx.type == \"statement\" && curPunc == \"newstatement\") pushContext(state, stream.column(), \"statement\");\n        state.startOfLine = false;\n        state.lastToken = curPunc || style;\n        return style;\n      },\n      indent: function (state, textAfter) {\n        if (!state.tokenize[state.tokenize.length - 1].isBase) return CodeMirror.Pass;\n        var firstChar = textAfter && textAfter.charAt(0),\n          ctx = state.context;\n        if (ctx.type == \"statement\" && !expectExpression(state.lastToken, true)) ctx = ctx.prev;\n        var closing = firstChar == ctx.type;\n        if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : config.indentUnit);else if (ctx.align) return ctx.column + (closing ? 0 : 1);else return ctx.indented + (closing ? 0 : config.indentUnit);\n      },\n      electricChars: \"{}\",\n      closeBrackets: {\n        triples: \"'\\\"\"\n      },\n      fold: \"brace\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      lineComment: \"//\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-groovy\", \"groovy\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","words","str","obj","split","i","length","keywords","blockKeywords","standaloneKeywords","atoms","curPunc","tokenBase","stream","state","ch","next","startString","test","eatWhile","eat","tokenize","push","tokenComment","skipToEnd","expectExpression","lastToken","cur","current","propertyIsEnumerable","isBase","quote","tripleQuoted","t","escaped","end","match","tokenBaseUntilBrace","pop","depth","peek","maybeEnd","last","newline","Context","indented","column","type","align","prev","pushContext","col","context","popContext","startState","basecolumn","indentUnit","startOfLine","token","ctx","sol","indentation","eatSpace","style","indent","textAfter","Pass","firstChar","charAt","closing","electricChars","closeBrackets","triples","fold","blockCommentStart","blockCommentEnd","lineComment","defineMIME"],"sources":["C:/Users/User/Downloads/Salary Payments/node_modules/codemirror/mode/groovy/groovy.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"groovy\", function(config) {\n  function words(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n  var keywords = words(\n    \"abstract as assert boolean break byte case catch char class const continue def default \" +\n    \"do double else enum extends final finally float for goto if implements import in \" +\n    \"instanceof int interface long native new package private protected public return \" +\n    \"short static strictfp super switch synchronized threadsafe throw throws trait transient \" +\n    \"try void volatile while\");\n  var blockKeywords = words(\"catch class def do else enum finally for if interface switch trait try while\");\n  var standaloneKeywords = words(\"return break continue\");\n  var atoms = words(\"null true false this\");\n\n  var curPunc;\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n    if (ch == '\"' || ch == \"'\") {\n      return startString(ch, stream, state);\n    }\n    if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n      curPunc = ch;\n      return null;\n    }\n    if (/\\d/.test(ch)) {\n      stream.eatWhile(/[\\w\\.]/);\n      if (stream.eat(/eE/)) { stream.eat(/\\+\\-/); stream.eatWhile(/\\d/); }\n      return \"number\";\n    }\n    if (ch == \"/\") {\n      if (stream.eat(\"*\")) {\n        state.tokenize.push(tokenComment);\n        return tokenComment(stream, state);\n      }\n      if (stream.eat(\"/\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n      if (expectExpression(state.lastToken, false)) {\n        return startString(ch, stream, state);\n      }\n    }\n    if (ch == \"-\" && stream.eat(\">\")) {\n      curPunc = \"->\";\n      return null;\n    }\n    if (/[+\\-*&%=<>!?|\\/~]/.test(ch)) {\n      stream.eatWhile(/[+\\-*&%=<>|~]/);\n      return \"operator\";\n    }\n    stream.eatWhile(/[\\w\\$_]/);\n    if (ch == \"@\") { stream.eatWhile(/[\\w\\$_\\.]/); return \"meta\"; }\n    if (state.lastToken == \".\") return \"property\";\n    if (stream.eat(\":\")) { curPunc = \"proplabel\"; return \"property\"; }\n    var cur = stream.current();\n    if (atoms.propertyIsEnumerable(cur)) { return \"atom\"; }\n    if (keywords.propertyIsEnumerable(cur)) {\n      if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\n      else if (standaloneKeywords.propertyIsEnumerable(cur)) curPunc = \"standalone\";\n      return \"keyword\";\n    }\n    return \"variable\";\n  }\n  tokenBase.isBase = true;\n\n  function startString(quote, stream, state) {\n    var tripleQuoted = false;\n    if (quote != \"/\" && stream.eat(quote)) {\n      if (stream.eat(quote)) tripleQuoted = true;\n      else return \"string\";\n    }\n    function t(stream, state) {\n      var escaped = false, next, end = !tripleQuoted;\n      while ((next = stream.next()) != null) {\n        if (next == quote && !escaped) {\n          if (!tripleQuoted) { break; }\n          if (stream.match(quote + quote)) { end = true; break; }\n        }\n        if (quote == '\"' && next == \"$\" && !escaped && stream.eat(\"{\")) {\n          state.tokenize.push(tokenBaseUntilBrace());\n          return \"string\";\n        }\n        escaped = !escaped && next == \"\\\\\";\n      }\n      if (end) state.tokenize.pop();\n      return \"string\";\n    }\n    state.tokenize.push(t);\n    return t(stream, state);\n  }\n\n  function tokenBaseUntilBrace() {\n    var depth = 1;\n    function t(stream, state) {\n      if (stream.peek() == \"}\") {\n        depth--;\n        if (depth == 0) {\n          state.tokenize.pop();\n          return state.tokenize[state.tokenize.length-1](stream, state);\n        }\n      } else if (stream.peek() == \"{\") {\n        depth++;\n      }\n      return tokenBase(stream, state);\n    }\n    t.isBase = true;\n    return t;\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while (ch = stream.next()) {\n      if (ch == \"/\" && maybeEnd) {\n        state.tokenize.pop();\n        break;\n      }\n      maybeEnd = (ch == \"*\");\n    }\n    return \"comment\";\n  }\n\n  function expectExpression(last, newline) {\n    return !last || last == \"operator\" || last == \"->\" || /[\\.\\[\\{\\(,;:]/.test(last) ||\n      last == \"newstatement\" || last == \"keyword\" || last == \"proplabel\" ||\n      (last == \"standalone\" && !newline);\n  }\n\n  function Context(indented, column, type, align, prev) {\n    this.indented = indented;\n    this.column = column;\n    this.type = type;\n    this.align = align;\n    this.prev = prev;\n  }\n  function pushContext(state, col, type) {\n    return state.context = new Context(state.indented, col, type, null, state.context);\n  }\n  function popContext(state) {\n    var t = state.context.type;\n    if (t == \")\" || t == \"]\" || t == \"}\")\n      state.indented = state.context.indented;\n    return state.context = state.context.prev;\n  }\n\n  // Interface\n\n  return {\n    startState: function(basecolumn) {\n      return {\n        tokenize: [tokenBase],\n        context: new Context((basecolumn || 0) - config.indentUnit, 0, \"top\", false),\n        indented: 0,\n        startOfLine: true,\n        lastToken: null\n      };\n    },\n\n    token: function(stream, state) {\n      var ctx = state.context;\n      if (stream.sol()) {\n        if (ctx.align == null) ctx.align = false;\n        state.indented = stream.indentation();\n        state.startOfLine = true;\n        // Automatic semicolon insertion\n        if (ctx.type == \"statement\" && !expectExpression(state.lastToken, true)) {\n          popContext(state); ctx = state.context;\n        }\n      }\n      if (stream.eatSpace()) return null;\n      curPunc = null;\n      var style = state.tokenize[state.tokenize.length-1](stream, state);\n      if (style == \"comment\") return style;\n      if (ctx.align == null) ctx.align = true;\n\n      if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);\n      // Handle indentation for {x -> \\n ... }\n      else if (curPunc == \"->\" && ctx.type == \"statement\" && ctx.prev.type == \"}\") {\n        popContext(state);\n        state.context.align = false;\n      }\n      else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\n      else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\n      else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\n      else if (curPunc == \"}\") {\n        while (ctx.type == \"statement\") ctx = popContext(state);\n        if (ctx.type == \"}\") ctx = popContext(state);\n        while (ctx.type == \"statement\") ctx = popContext(state);\n      }\n      else if (curPunc == ctx.type) popContext(state);\n      else if (ctx.type == \"}\" || ctx.type == \"top\" || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\n        pushContext(state, stream.column(), \"statement\");\n      state.startOfLine = false;\n      state.lastToken = curPunc || style;\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (!state.tokenize[state.tokenize.length-1].isBase) return CodeMirror.Pass;\n      var firstChar = textAfter && textAfter.charAt(0), ctx = state.context;\n      if (ctx.type == \"statement\" && !expectExpression(state.lastToken, true)) ctx = ctx.prev;\n      var closing = firstChar == ctx.type;\n      if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : config.indentUnit);\n      else if (ctx.align) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indented + (closing ? 0 : config.indentUnit);\n    },\n\n    electricChars: \"{}\",\n    closeBrackets: {triples: \"'\\\"\"},\n    fold: \"brace\",\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\",\n    lineComment: \"//\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-groovy\", \"groovy\");\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}