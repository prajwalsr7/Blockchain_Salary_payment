{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"eiffel\", function () {\n    function wordObj(words) {\n      var o = {};\n      for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n      return o;\n    }\n    var keywords = wordObj(['note', 'across', 'when', 'variant', 'until', 'unique', 'undefine', 'then', 'strip', 'select', 'retry', 'rescue', 'require', 'rename', 'reference', 'redefine', 'prefix', 'once', 'old', 'obsolete', 'loop', 'local', 'like', 'is', 'inspect', 'infix', 'include', 'if', 'frozen', 'from', 'external', 'export', 'ensure', 'end', 'elseif', 'else', 'do', 'creation', 'create', 'check', 'alias', 'agent', 'separate', 'invariant', 'inherit', 'indexing', 'feature', 'expanded', 'deferred', 'class', 'Void', 'True', 'Result', 'Precursor', 'False', 'Current', 'create', 'attached', 'detachable', 'as', 'and', 'implies', 'not', 'or']);\n    var operators = wordObj([\":=\", \"and then\", \"and\", \"or\", \"<<\", \">>\"]);\n    function chain(newtok, stream, state) {\n      state.tokenize.push(newtok);\n      return newtok(stream, state);\n    }\n    function tokenBase(stream, state) {\n      if (stream.eatSpace()) return null;\n      var ch = stream.next();\n      if (ch == '\"' || ch == \"'\") {\n        return chain(readQuoted(ch, \"string\"), stream, state);\n      } else if (ch == \"-\" && stream.eat(\"-\")) {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (ch == \":\" && stream.eat(\"=\")) {\n        return \"operator\";\n      } else if (/[0-9]/.test(ch)) {\n        stream.eatWhile(/[xXbBCc0-9\\.]/);\n        stream.eat(/[\\?\\!]/);\n        return \"ident\";\n      } else if (/[a-zA-Z_0-9]/.test(ch)) {\n        stream.eatWhile(/[a-zA-Z_0-9]/);\n        stream.eat(/[\\?\\!]/);\n        return \"ident\";\n      } else if (/[=+\\-\\/*^%<>~]/.test(ch)) {\n        stream.eatWhile(/[=+\\-\\/*^%<>~]/);\n        return \"operator\";\n      } else {\n        return null;\n      }\n    }\n    function readQuoted(quote, style, unescaped) {\n      return function (stream, state) {\n        var escaped = false,\n          ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && (unescaped || !escaped)) {\n            state.tokenize.pop();\n            break;\n          }\n          escaped = !escaped && ch == \"%\";\n        }\n        return style;\n      };\n    }\n    return {\n      startState: function () {\n        return {\n          tokenize: [tokenBase]\n        };\n      },\n      token: function (stream, state) {\n        var style = state.tokenize[state.tokenize.length - 1](stream, state);\n        if (style == \"ident\") {\n          var word = stream.current();\n          style = keywords.propertyIsEnumerable(stream.current()) ? \"keyword\" : operators.propertyIsEnumerable(stream.current()) ? \"operator\" : /^[A-Z][A-Z_0-9]*$/g.test(word) ? \"tag\" : /^0[bB][0-1]+$/g.test(word) ? \"number\" : /^0[cC][0-7]+$/g.test(word) ? \"number\" : /^0[xX][a-fA-F0-9]+$/g.test(word) ? \"number\" : /^([0-9]+\\.[0-9]*)|([0-9]*\\.[0-9]+)$/g.test(word) ? \"number\" : /^[0-9]+$/g.test(word) ? \"number\" : \"variable\";\n        }\n        return style;\n      },\n      lineComment: \"--\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-eiffel\", \"eiffel\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","wordObj","words","o","i","e","length","keywords","operators","chain","newtok","stream","state","tokenize","push","tokenBase","eatSpace","ch","next","readQuoted","eat","skipToEnd","test","eatWhile","quote","style","unescaped","escaped","pop","startState","token","word","current","propertyIsEnumerable","lineComment","defineMIME"],"sources":["C:/Users/User/Downloads/Salary Payments/node_modules/codemirror/mode/eiffel/eiffel.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"eiffel\", function() {\n  function wordObj(words) {\n    var o = {};\n    for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\n    return o;\n  }\n  var keywords = wordObj([\n    'note',\n    'across',\n    'when',\n    'variant',\n    'until',\n    'unique',\n    'undefine',\n    'then',\n    'strip',\n    'select',\n    'retry',\n    'rescue',\n    'require',\n    'rename',\n    'reference',\n    'redefine',\n    'prefix',\n    'once',\n    'old',\n    'obsolete',\n    'loop',\n    'local',\n    'like',\n    'is',\n    'inspect',\n    'infix',\n    'include',\n    'if',\n    'frozen',\n    'from',\n    'external',\n    'export',\n    'ensure',\n    'end',\n    'elseif',\n    'else',\n    'do',\n    'creation',\n    'create',\n    'check',\n    'alias',\n    'agent',\n    'separate',\n    'invariant',\n    'inherit',\n    'indexing',\n    'feature',\n    'expanded',\n    'deferred',\n    'class',\n    'Void',\n    'True',\n    'Result',\n    'Precursor',\n    'False',\n    'Current',\n    'create',\n    'attached',\n    'detachable',\n    'as',\n    'and',\n    'implies',\n    'not',\n    'or'\n  ]);\n  var operators = wordObj([\":=\", \"and then\",\"and\", \"or\",\"<<\",\">>\"]);\n\n  function chain(newtok, stream, state) {\n    state.tokenize.push(newtok);\n    return newtok(stream, state);\n  }\n\n  function tokenBase(stream, state) {\n    if (stream.eatSpace()) return null;\n    var ch = stream.next();\n    if (ch == '\"'||ch == \"'\") {\n      return chain(readQuoted(ch, \"string\"), stream, state);\n    } else if (ch == \"-\"&&stream.eat(\"-\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \":\"&&stream.eat(\"=\")) {\n      return \"operator\";\n    } else if (/[0-9]/.test(ch)) {\n      stream.eatWhile(/[xXbBCc0-9\\.]/);\n      stream.eat(/[\\?\\!]/);\n      return \"ident\";\n    } else if (/[a-zA-Z_0-9]/.test(ch)) {\n      stream.eatWhile(/[a-zA-Z_0-9]/);\n      stream.eat(/[\\?\\!]/);\n      return \"ident\";\n    } else if (/[=+\\-\\/*^%<>~]/.test(ch)) {\n      stream.eatWhile(/[=+\\-\\/*^%<>~]/);\n      return \"operator\";\n    } else {\n      return null;\n    }\n  }\n\n  function readQuoted(quote, style,  unescaped) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && (unescaped || !escaped)) {\n          state.tokenize.pop();\n          break;\n        }\n        escaped = !escaped && ch == \"%\";\n      }\n      return style;\n    };\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: [tokenBase]};\n    },\n\n    token: function(stream, state) {\n      var style = state.tokenize[state.tokenize.length-1](stream, state);\n      if (style == \"ident\") {\n        var word = stream.current();\n        style = keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\n          : operators.propertyIsEnumerable(stream.current()) ? \"operator\"\n          : /^[A-Z][A-Z_0-9]*$/g.test(word) ? \"tag\"\n          : /^0[bB][0-1]+$/g.test(word) ? \"number\"\n          : /^0[cC][0-7]+$/g.test(word) ? \"number\"\n          : /^0[xX][a-fA-F0-9]+$/g.test(word) ? \"number\"\n          : /^([0-9]+\\.[0-9]*)|([0-9]*\\.[0-9]+)$/g.test(word) ? \"number\"\n          : /^[0-9]+$/g.test(word) ? \"number\"\n          : \"variable\";\n      }\n      return style;\n    },\n    lineComment: \"--\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-eiffel\", \"eiffel\");\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}