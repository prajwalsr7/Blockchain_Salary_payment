{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"spreadsheet\", function () {\n    return {\n      startState: function () {\n        return {\n          stringType: null,\n          stack: []\n        };\n      },\n      token: function (stream, state) {\n        if (!stream) return;\n\n        //check for state changes\n        if (state.stack.length === 0) {\n          //strings\n          if (stream.peek() == '\"' || stream.peek() == \"'\") {\n            state.stringType = stream.peek();\n            stream.next(); // Skip quote\n            state.stack.unshift(\"string\");\n          }\n        }\n\n        //return state\n        //stack has\n        switch (state.stack[0]) {\n          case \"string\":\n            while (state.stack[0] === \"string\" && !stream.eol()) {\n              if (stream.peek() === state.stringType) {\n                stream.next(); // Skip quote\n                state.stack.shift(); // Clear flag\n              } else if (stream.peek() === \"\\\\\") {\n                stream.next();\n                stream.next();\n              } else {\n                stream.match(/^.[^\\\\\\\"\\']*/);\n              }\n            }\n            return \"string\";\n          case \"characterClass\":\n            while (state.stack[0] === \"characterClass\" && !stream.eol()) {\n              if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./))) state.stack.shift();\n            }\n            return \"operator\";\n        }\n        var peek = stream.peek();\n\n        //no stack\n        switch (peek) {\n          case \"[\":\n            stream.next();\n            state.stack.unshift(\"characterClass\");\n            return \"bracket\";\n          case \":\":\n            stream.next();\n            return \"operator\";\n          case \"\\\\\":\n            if (stream.match(/\\\\[a-z]+/)) return \"string-2\";else {\n              stream.next();\n              return \"atom\";\n            }\n          case \".\":\n          case \",\":\n          case \";\":\n          case \"*\":\n          case \"-\":\n          case \"+\":\n          case \"^\":\n          case \"<\":\n          case \"/\":\n          case \"=\":\n            stream.next();\n            return \"atom\";\n          case \"$\":\n            stream.next();\n            return \"builtin\";\n        }\n        if (stream.match(/\\d+/)) {\n          if (stream.match(/^\\w+/)) return \"error\";\n          return \"number\";\n        } else if (stream.match(/^[a-zA-Z_]\\w*/)) {\n          if (stream.match(/(?=[\\(.])/, false)) return \"keyword\";\n          return \"variable-2\";\n        } else if ([\"[\", \"]\", \"(\", \")\", \"{\", \"}\"].indexOf(peek) != -1) {\n          stream.next();\n          return \"bracket\";\n        } else if (!stream.eatSpace()) {\n          stream.next();\n        }\n        return null;\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-spreadsheet\", \"spreadsheet\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","startState","stringType","stack","token","stream","state","length","peek","next","unshift","eol","shift","match","indexOf","eatSpace","defineMIME"],"sources":["C:/Users/User/Downloads/Salary Payments/node_modules/codemirror/mode/spreadsheet/spreadsheet.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"spreadsheet\", function () {\n    return {\n      startState: function () {\n        return {\n          stringType: null,\n          stack: []\n        };\n      },\n      token: function (stream, state) {\n        if (!stream) return;\n\n        //check for state changes\n        if (state.stack.length === 0) {\n          //strings\n          if ((stream.peek() == '\"') || (stream.peek() == \"'\")) {\n            state.stringType = stream.peek();\n            stream.next(); // Skip quote\n            state.stack.unshift(\"string\");\n          }\n        }\n\n        //return state\n        //stack has\n        switch (state.stack[0]) {\n        case \"string\":\n          while (state.stack[0] === \"string\" && !stream.eol()) {\n            if (stream.peek() === state.stringType) {\n              stream.next(); // Skip quote\n              state.stack.shift(); // Clear flag\n            } else if (stream.peek() === \"\\\\\") {\n              stream.next();\n              stream.next();\n            } else {\n              stream.match(/^.[^\\\\\\\"\\']*/);\n            }\n          }\n          return \"string\";\n\n        case \"characterClass\":\n          while (state.stack[0] === \"characterClass\" && !stream.eol()) {\n            if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./)))\n              state.stack.shift();\n          }\n          return \"operator\";\n        }\n\n        var peek = stream.peek();\n\n        //no stack\n        switch (peek) {\n        case \"[\":\n          stream.next();\n          state.stack.unshift(\"characterClass\");\n          return \"bracket\";\n        case \":\":\n          stream.next();\n          return \"operator\";\n        case \"\\\\\":\n          if (stream.match(/\\\\[a-z]+/)) return \"string-2\";\n          else {\n            stream.next();\n            return \"atom\";\n          }\n        case \".\":\n        case \",\":\n        case \";\":\n        case \"*\":\n        case \"-\":\n        case \"+\":\n        case \"^\":\n        case \"<\":\n        case \"/\":\n        case \"=\":\n          stream.next();\n          return \"atom\";\n        case \"$\":\n          stream.next();\n          return \"builtin\";\n        }\n\n        if (stream.match(/\\d+/)) {\n          if (stream.match(/^\\w+/)) return \"error\";\n          return \"number\";\n        } else if (stream.match(/^[a-zA-Z_]\\w*/)) {\n          if (stream.match(/(?=[\\(.])/, false)) return \"keyword\";\n          return \"variable-2\";\n        } else if ([\"[\", \"]\", \"(\", \")\", \"{\", \"}\"].indexOf(peek) != -1) {\n          stream.next();\n          return \"bracket\";\n        } else if (!stream.eatSpace()) {\n          stream.next();\n        }\n        return null;\n      }\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-spreadsheet\", \"spreadsheet\");\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}