{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// A rough approximation of Sublime Text's keybindings\n// Depends on addon/search/searchcursor.js and optionally addon/dialog/dialogs.js\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../lib/codemirror\"), require(\"../addon/search/searchcursor\"), require(\"../addon/edit/matchbrackets\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../lib/codemirror\", \"../addon/search/searchcursor\", \"../addon/edit/matchbrackets\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n\n  // This is not exactly Sublime's algorithm. I couldn't make heads or tails of that.\n  function findPosSubword(doc, start, dir) {\n    if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n    var line = doc.getLine(start.line);\n    if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n    var state = \"start\",\n      type,\n      startPos = start.ch;\n    for (var pos = startPos, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n      var next = line.charAt(dir < 0 ? pos - 1 : pos);\n      var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n      if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n      if (state == \"start\") {\n        if (cat != \"o\") {\n          state = \"in\";\n          type = cat;\n        } else startPos = pos + dir;\n      } else if (state == \"in\") {\n        if (type != cat) {\n          if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n          if (type == \"W\" && cat == \"w\" && dir > 0) {\n            // From uppercase to lowercase\n            if (pos == startPos + 1) {\n              type = \"w\";\n              continue;\n            } else pos--;\n          }\n          break;\n        }\n      }\n    }\n    return Pos(start.line, pos);\n  }\n  function moveSubword(cm, dir) {\n    cm.extendSelectionsBy(function (range) {\n      if (cm.display.shift || cm.doc.extend || range.empty()) return findPosSubword(cm.doc, range.head, dir);else return dir < 0 ? range.from() : range.to();\n    });\n  }\n  cmds.goSubwordLeft = function (cm) {\n    moveSubword(cm, -1);\n  };\n  cmds.goSubwordRight = function (cm) {\n    moveSubword(cm, 1);\n  };\n  cmds.scrollLineUp = function (cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n      if (cm.getCursor().line >= visibleBottomLine) cm.execCommand(\"goLineUp\");\n    }\n    cm.scrollTo(null, info.top - cm.defaultTextHeight());\n  };\n  cmds.scrollLineDown = function (cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleTopLine = cm.lineAtHeight(info.top, \"local\") + 1;\n      if (cm.getCursor().line <= visibleTopLine) cm.execCommand(\"goLineDown\");\n    }\n    cm.scrollTo(null, info.top + cm.defaultTextHeight());\n  };\n  cmds.splitSelectionByLine = function (cm) {\n    var ranges = cm.listSelections(),\n      lineRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(),\n        to = ranges[i].to();\n      for (var line = from.line; line <= to.line; ++line) if (!(to.line > from.line && line == to.line && to.ch == 0)) lineRanges.push({\n        anchor: line == from.line ? from : Pos(line, 0),\n        head: line == to.line ? to : Pos(line)\n      });\n    }\n    cm.setSelections(lineRanges, 0);\n  };\n  cmds.singleSelectionTop = function (cm) {\n    var range = cm.listSelections()[0];\n    cm.setSelection(range.anchor, range.head, {\n      scroll: false\n    });\n  };\n  cmds.selectLine = function (cm) {\n    var ranges = cm.listSelections(),\n      extended = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      extended.push({\n        anchor: Pos(range.from().line, 0),\n        head: Pos(range.to().line + 1, 0)\n      });\n    }\n    cm.setSelections(extended);\n  };\n  function insertLine(cm, above) {\n    if (cm.isReadOnly()) return CodeMirror.Pass;\n    cm.operation(function () {\n      var len = cm.listSelections().length,\n        newSelection = [],\n        last = -1;\n      for (var i = 0; i < len; i++) {\n        var head = cm.listSelections()[i].head;\n        if (head.line <= last) continue;\n        var at = Pos(head.line + (above ? 0 : 1), 0);\n        cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n        cm.indentLine(at.line, null, true);\n        newSelection.push({\n          head: at,\n          anchor: at\n        });\n        last = head.line + 1;\n      }\n      cm.setSelections(newSelection);\n    });\n    cm.execCommand(\"indentAuto\");\n  }\n  cmds.insertLineAfter = function (cm) {\n    return insertLine(cm, false);\n  };\n  cmds.insertLineBefore = function (cm) {\n    return insertLine(cm, true);\n  };\n  function wordAt(cm, pos) {\n    var start = pos.ch,\n      end = start,\n      line = cm.getLine(pos.line);\n    while (start && CodeMirror.isWordChar(line.charAt(start - 1))) --start;\n    while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) ++end;\n    return {\n      from: Pos(pos.line, start),\n      to: Pos(pos.line, end),\n      word: line.slice(start, end)\n    };\n  }\n  cmds.selectNextOccurrence = function (cm) {\n    var from = cm.getCursor(\"from\"),\n      to = cm.getCursor(\"to\");\n    var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      cm.setSelection(word.from, word.to);\n      fullWord = true;\n    } else {\n      var text = cm.getRange(from, to);\n      var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n      var cur = cm.getSearchCursor(query, to);\n      var found = cur.findNext();\n      if (!found) {\n        cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n        found = cur.findNext();\n      }\n      if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to())) return;\n      cm.addSelection(cur.from(), cur.to());\n    }\n    if (fullWord) cm.state.sublimeFindFullWord = cm.doc.sel;\n  };\n  cmds.skipAndSelectNextOccurrence = function (cm) {\n    var prevAnchor = cm.getCursor(\"anchor\"),\n      prevHead = cm.getCursor(\"head\");\n    cmds.selectNextOccurrence(cm);\n    if (CodeMirror.cmpPos(prevAnchor, prevHead) != 0) {\n      cm.doc.setSelections(cm.doc.listSelections().filter(function (sel) {\n        return sel.anchor != prevAnchor || sel.head != prevHead;\n      }));\n    }\n  };\n  function addCursorToSelection(cm, dir) {\n    var ranges = cm.listSelections(),\n      newRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var newAnchor = cm.findPosV(range.anchor, dir, \"line\", range.anchor.goalColumn);\n      var newHead = cm.findPosV(range.head, dir, \"line\", range.head.goalColumn);\n      newAnchor.goalColumn = range.anchor.goalColumn != null ? range.anchor.goalColumn : cm.cursorCoords(range.anchor, \"div\").left;\n      newHead.goalColumn = range.head.goalColumn != null ? range.head.goalColumn : cm.cursorCoords(range.head, \"div\").left;\n      var newRange = {\n        anchor: newAnchor,\n        head: newHead\n      };\n      newRanges.push(range);\n      newRanges.push(newRange);\n    }\n    cm.setSelections(newRanges);\n  }\n  cmds.addCursorToPrevLine = function (cm) {\n    addCursorToSelection(cm, -1);\n  };\n  cmds.addCursorToNextLine = function (cm) {\n    addCursorToSelection(cm, 1);\n  };\n  function isSelectedRange(ranges, from, to) {\n    for (var i = 0; i < ranges.length; i++) if (CodeMirror.cmpPos(ranges[i].from(), from) == 0 && CodeMirror.cmpPos(ranges[i].to(), to) == 0) return true;\n    return false;\n  }\n  var mirror = \"(){}[]\";\n  function selectBetweenBrackets(cm) {\n    var ranges = cm.listSelections(),\n      newRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i],\n        pos = range.head,\n        opening = cm.scanForBracket(pos, -1);\n      if (!opening) return false;\n      for (;;) {\n        var closing = cm.scanForBracket(pos, 1);\n        if (!closing) return false;\n        if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n          var startPos = Pos(opening.pos.line, opening.pos.ch + 1);\n          if (CodeMirror.cmpPos(startPos, range.from()) == 0 && CodeMirror.cmpPos(closing.pos, range.to()) == 0) {\n            opening = cm.scanForBracket(opening.pos, -1);\n            if (!opening) return false;\n          } else {\n            newRanges.push({\n              anchor: startPos,\n              head: closing.pos\n            });\n            break;\n          }\n        }\n        pos = Pos(closing.pos.line, closing.pos.ch + 1);\n      }\n    }\n    cm.setSelections(newRanges);\n    return true;\n  }\n  cmds.selectScope = function (cm) {\n    selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n  };\n  cmds.selectBetweenBrackets = function (cm) {\n    if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n  };\n  function puncType(type) {\n    return !type ? null : /\\bpunctuation\\b/.test(type) ? type : undefined;\n  }\n  cmds.goToBracket = function (cm) {\n    cm.extendSelectionsBy(function (range) {\n      var next = cm.scanForBracket(range.head, 1, puncType(cm.getTokenTypeAt(range.head)));\n      if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n      var prev = cm.scanForBracket(range.head, -1, puncType(cm.getTokenTypeAt(Pos(range.head.line, range.head.ch + 1))));\n      return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n    });\n  };\n  cmds.swapLineUp = function (cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass;\n    var ranges = cm.listSelections(),\n      linesToMove = [],\n      at = cm.firstLine() - 1,\n      newSels = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i],\n        from = range.from().line - 1,\n        to = range.to().line;\n      newSels.push({\n        anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n        head: Pos(range.head.line - 1, range.head.ch)\n      });\n      if (range.to().ch == 0 && !range.empty()) --to;\n      if (from > at) linesToMove.push(from, to);else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function () {\n      for (var i = 0; i < linesToMove.length; i += 2) {\n        var from = linesToMove[i],\n          to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        if (to > cm.lastLine()) cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");else cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.setSelections(newSels);\n      cm.scrollIntoView();\n    });\n  };\n  cmds.swapLineDown = function (cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass;\n    var ranges = cm.listSelections(),\n      linesToMove = [],\n      at = cm.lastLine() + 1;\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var range = ranges[i],\n        from = range.to().line + 1,\n        to = range.from().line;\n      if (range.to().ch == 0 && !range.empty()) from--;\n      if (from < at) linesToMove.push(from, to);else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function () {\n      for (var i = linesToMove.length - 2; i >= 0; i -= 2) {\n        var from = linesToMove[i],\n          to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        if (from == cm.lastLine()) cm.replaceRange(\"\", Pos(from - 1), Pos(from), \"+swapLine\");else cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.scrollIntoView();\n    });\n  };\n  cmds.toggleCommentIndented = function (cm) {\n    cm.toggleComment({\n      indent: true\n    });\n  };\n  cmds.joinLines = function (cm) {\n    var ranges = cm.listSelections(),\n      joined = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i],\n        from = range.from();\n      var start = from.line,\n        end = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == end) end = ranges[++i].to().line;\n      joined.push({\n        start: start,\n        end: end,\n        anchor: !range.empty() && from\n      });\n    }\n    cm.operation(function () {\n      var offset = 0,\n        ranges = [];\n      for (var i = 0; i < joined.length; i++) {\n        var obj = joined[i];\n        var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch),\n          head;\n        for (var line = obj.start; line <= obj.end; line++) {\n          var actual = line - offset;\n          if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n          if (actual < cm.lastLine()) {\n            cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n            ++offset;\n          }\n        }\n        ranges.push({\n          anchor: anchor || head,\n          head: head\n        });\n      }\n      cm.setSelections(ranges, 0);\n    });\n  };\n  cmds.duplicateLine = function (cm) {\n    cm.operation(function () {\n      var rangeCount = cm.listSelections().length;\n      for (var i = 0; i < rangeCount; i++) {\n        var range = cm.listSelections()[i];\n        if (range.empty()) cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));else cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n      }\n      cm.scrollIntoView();\n    });\n  };\n  function sortLines(cm, caseSensitive, direction) {\n    if (cm.isReadOnly()) return CodeMirror.Pass;\n    var ranges = cm.listSelections(),\n      toSort = [],\n      selected;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (range.empty()) continue;\n      var from = range.from().line,\n        to = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == to) to = ranges[++i].to().line;\n      if (!ranges[i].to().ch) to--;\n      toSort.push(from, to);\n    }\n    if (toSort.length) selected = true;else toSort.push(cm.firstLine(), cm.lastLine());\n    cm.operation(function () {\n      var ranges = [];\n      for (var i = 0; i < toSort.length; i += 2) {\n        var from = toSort[i],\n          to = toSort[i + 1];\n        var start = Pos(from, 0),\n          end = Pos(to);\n        var lines = cm.getRange(start, end, false);\n        if (caseSensitive) lines.sort(function (a, b) {\n          return a < b ? -direction : a == b ? 0 : direction;\n        });else lines.sort(function (a, b) {\n          var au = a.toUpperCase(),\n            bu = b.toUpperCase();\n          if (au != bu) {\n            a = au;\n            b = bu;\n          }\n          return a < b ? -direction : a == b ? 0 : direction;\n        });\n        cm.replaceRange(lines, start, end);\n        if (selected) ranges.push({\n          anchor: start,\n          head: Pos(to + 1, 0)\n        });\n      }\n      if (selected) cm.setSelections(ranges, 0);\n    });\n  }\n  cmds.sortLines = function (cm) {\n    sortLines(cm, true, 1);\n  };\n  cmds.reverseSortLines = function (cm) {\n    sortLines(cm, true, -1);\n  };\n  cmds.sortLinesInsensitive = function (cm) {\n    sortLines(cm, false, 1);\n  };\n  cmds.reverseSortLinesInsensitive = function (cm) {\n    sortLines(cm, false, -1);\n  };\n  cmds.nextBookmark = function (cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      var current = marks.shift();\n      var found = current.find();\n      if (found) {\n        marks.push(current);\n        return cm.setSelection(found.from, found.to);\n      }\n    }\n  };\n  cmds.prevBookmark = function (cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      marks.unshift(marks.pop());\n      var found = marks[marks.length - 1].find();\n      if (!found) marks.pop();else return cm.setSelection(found.from, found.to);\n    }\n  };\n  cmds.toggleBookmark = function (cm) {\n    var ranges = cm.listSelections();\n    var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(),\n        to = ranges[i].to();\n      var found = ranges[i].empty() ? cm.findMarksAt(from) : cm.findMarks(from, to);\n      for (var j = 0; j < found.length; j++) {\n        if (found[j].sublimeBookmark) {\n          found[j].clear();\n          for (var k = 0; k < marks.length; k++) if (marks[k] == found[j]) marks.splice(k--, 1);\n          break;\n        }\n      }\n      if (j == found.length) marks.push(cm.markText(from, to, {\n        sublimeBookmark: true,\n        clearWhenEmpty: false\n      }));\n    }\n  };\n  cmds.clearBookmarks = function (cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) for (var i = 0; i < marks.length; i++) marks[i].clear();\n    marks.length = 0;\n  };\n  cmds.selectBookmarks = function (cm) {\n    var marks = cm.state.sublimeBookmarks,\n      ranges = [];\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      var found = marks[i].find();\n      if (!found) marks.splice(i--, 0);else ranges.push({\n        anchor: found.from,\n        head: found.to\n      });\n    }\n    if (ranges.length) cm.setSelections(ranges, 0);\n  };\n  function modifyWordOrSelection(cm, mod) {\n    cm.operation(function () {\n      var ranges = cm.listSelections(),\n        indices = [],\n        replacements = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty()) {\n          indices.push(i);\n          replacements.push(\"\");\n        } else replacements.push(mod(cm.getRange(range.from(), range.to())));\n      }\n      cm.replaceSelections(replacements, \"around\", \"case\");\n      for (var i = indices.length - 1, at; i >= 0; i--) {\n        var range = ranges[indices[i]];\n        if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n        var word = wordAt(cm, range.head);\n        at = word.from;\n        cm.replaceRange(mod(word.word), word.from, word.to);\n      }\n    });\n  }\n  cmds.smartBackspace = function (cm) {\n    if (cm.somethingSelected()) return CodeMirror.Pass;\n    cm.operation(function () {\n      var cursors = cm.listSelections();\n      var indentUnit = cm.getOption(\"indentUnit\");\n      for (var i = cursors.length - 1; i >= 0; i--) {\n        var cursor = cursors[i].head;\n        var toStartOfLine = cm.getRange({\n          line: cursor.line,\n          ch: 0\n        }, cursor);\n        var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n\n        // Delete by one character by default\n        var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n        if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n          var prevIndent = new Pos(cursor.line, CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit));\n\n          // Smart delete only if we found a valid prevIndent location\n          if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n        }\n        cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n      }\n    });\n  };\n  cmds.delLineRight = function (cm) {\n    cm.operation(function () {\n      var ranges = cm.listSelections();\n      for (var i = ranges.length - 1; i >= 0; i--) cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n      cm.scrollIntoView();\n    });\n  };\n  cmds.upcaseAtCursor = function (cm) {\n    modifyWordOrSelection(cm, function (str) {\n      return str.toUpperCase();\n    });\n  };\n  cmds.downcaseAtCursor = function (cm) {\n    modifyWordOrSelection(cm, function (str) {\n      return str.toLowerCase();\n    });\n  };\n  cmds.setSublimeMark = function (cm) {\n    if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n    cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n  };\n  cmds.selectToSublimeMark = function (cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) cm.setSelection(cm.getCursor(), found);\n  };\n  cmds.deleteToSublimeMark = function (cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      var from = cm.getCursor(),\n        to = found;\n      if (CodeMirror.cmpPos(from, to) > 0) {\n        var tmp = to;\n        to = from;\n        from = tmp;\n      }\n      cm.state.sublimeKilled = cm.getRange(from, to);\n      cm.replaceRange(\"\", from, to);\n    }\n  };\n  cmds.swapWithSublimeMark = function (cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n      cm.setCursor(found);\n    }\n  };\n  cmds.sublimeYank = function (cm) {\n    if (cm.state.sublimeKilled != null) cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n  };\n  cmds.showInCenter = function (cm) {\n    var pos = cm.cursorCoords(null, \"local\");\n    cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n  };\n  function getTarget(cm) {\n    var from = cm.getCursor(\"from\"),\n      to = cm.getCursor(\"to\");\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      from = word.from;\n      to = word.to;\n    }\n    return {\n      from: from,\n      to: to,\n      query: cm.getRange(from, to),\n      word: word\n    };\n  }\n  function findAndGoTo(cm, forward) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var query = target.query;\n    var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n    if (forward ? cur.findNext() : cur.findPrevious()) {\n      cm.setSelection(cur.from(), cur.to());\n    } else {\n      cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0) : cm.clipPos(Pos(cm.lastLine())));\n      if (forward ? cur.findNext() : cur.findPrevious()) cm.setSelection(cur.from(), cur.to());else if (target.word) cm.setSelection(target.from, target.to);\n    }\n  }\n  ;\n  cmds.findUnder = function (cm) {\n    findAndGoTo(cm, true);\n  };\n  cmds.findUnderPrevious = function (cm) {\n    findAndGoTo(cm, false);\n  };\n  cmds.findAllUnder = function (cm) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var cur = cm.getSearchCursor(target.query);\n    var matches = [];\n    var primaryIndex = -1;\n    while (cur.findNext()) {\n      matches.push({\n        anchor: cur.from(),\n        head: cur.to()\n      });\n      if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch) primaryIndex++;\n    }\n    cm.setSelections(matches, primaryIndex);\n  };\n  var keyMap = CodeMirror.keyMap;\n  keyMap.macSublime = {\n    \"Cmd-Left\": \"goLineStartSmart\",\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-Left\": \"goSubwordLeft\",\n    \"Ctrl-Right\": \"goSubwordRight\",\n    \"Ctrl-Alt-Up\": \"scrollLineUp\",\n    \"Ctrl-Alt-Down\": \"scrollLineDown\",\n    \"Cmd-L\": \"selectLine\",\n    \"Shift-Cmd-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Cmd-Enter\": \"insertLineAfter\",\n    \"Shift-Cmd-Enter\": \"insertLineBefore\",\n    \"Cmd-D\": \"selectNextOccurrence\",\n    \"Shift-Cmd-Space\": \"selectScope\",\n    \"Shift-Cmd-M\": \"selectBetweenBrackets\",\n    \"Cmd-M\": \"goToBracket\",\n    \"Cmd-Ctrl-Up\": \"swapLineUp\",\n    \"Cmd-Ctrl-Down\": \"swapLineDown\",\n    \"Cmd-/\": \"toggleCommentIndented\",\n    \"Cmd-J\": \"joinLines\",\n    \"Shift-Cmd-D\": \"duplicateLine\",\n    \"F5\": \"sortLines\",\n    \"Shift-F5\": \"reverseSortLines\",\n    \"Cmd-F5\": \"sortLinesInsensitive\",\n    \"Shift-Cmd-F5\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Cmd-F2\": \"toggleBookmark\",\n    \"Shift-Cmd-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Cmd-K Cmd-D\": \"skipAndSelectNextOccurrence\",\n    \"Cmd-K Cmd-K\": \"delLineRight\",\n    \"Cmd-K Cmd-U\": \"upcaseAtCursor\",\n    \"Cmd-K Cmd-L\": \"downcaseAtCursor\",\n    \"Cmd-K Cmd-Space\": \"setSublimeMark\",\n    \"Cmd-K Cmd-A\": \"selectToSublimeMark\",\n    \"Cmd-K Cmd-W\": \"deleteToSublimeMark\",\n    \"Cmd-K Cmd-X\": \"swapWithSublimeMark\",\n    \"Cmd-K Cmd-Y\": \"sublimeYank\",\n    \"Cmd-K Cmd-C\": \"showInCenter\",\n    \"Cmd-K Cmd-G\": \"clearBookmarks\",\n    \"Cmd-K Cmd-Backspace\": \"delLineLeft\",\n    \"Cmd-K Cmd-1\": \"foldAll\",\n    \"Cmd-K Cmd-0\": \"unfoldAll\",\n    \"Cmd-K Cmd-J\": \"unfoldAll\",\n    \"Ctrl-Shift-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Shift-Down\": \"addCursorToNextLine\",\n    \"Cmd-F3\": \"findUnder\",\n    \"Shift-Cmd-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Cmd-[\": \"fold\",\n    \"Shift-Cmd-]\": \"unfold\",\n    \"Cmd-I\": \"findIncremental\",\n    \"Shift-Cmd-I\": \"findIncrementalReverse\",\n    \"Cmd-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"macDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.macSublime);\n  keyMap.pcSublime = {\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-T\": \"transposeChars\",\n    \"Alt-Left\": \"goSubwordLeft\",\n    \"Alt-Right\": \"goSubwordRight\",\n    \"Ctrl-Up\": \"scrollLineUp\",\n    \"Ctrl-Down\": \"scrollLineDown\",\n    \"Ctrl-L\": \"selectLine\",\n    \"Shift-Ctrl-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Ctrl-Enter\": \"insertLineAfter\",\n    \"Shift-Ctrl-Enter\": \"insertLineBefore\",\n    \"Ctrl-D\": \"selectNextOccurrence\",\n    \"Shift-Ctrl-Space\": \"selectScope\",\n    \"Shift-Ctrl-M\": \"selectBetweenBrackets\",\n    \"Ctrl-M\": \"goToBracket\",\n    \"Shift-Ctrl-Up\": \"swapLineUp\",\n    \"Shift-Ctrl-Down\": \"swapLineDown\",\n    \"Ctrl-/\": \"toggleCommentIndented\",\n    \"Ctrl-J\": \"joinLines\",\n    \"Shift-Ctrl-D\": \"duplicateLine\",\n    \"F9\": \"sortLines\",\n    \"Shift-F9\": \"reverseSortLines\",\n    \"Ctrl-F9\": \"sortLinesInsensitive\",\n    \"Shift-Ctrl-F9\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Ctrl-F2\": \"toggleBookmark\",\n    \"Shift-Ctrl-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Ctrl-K Ctrl-D\": \"skipAndSelectNextOccurrence\",\n    \"Ctrl-K Ctrl-K\": \"delLineRight\",\n    \"Ctrl-K Ctrl-U\": \"upcaseAtCursor\",\n    \"Ctrl-K Ctrl-L\": \"downcaseAtCursor\",\n    \"Ctrl-K Ctrl-Space\": \"setSublimeMark\",\n    \"Ctrl-K Ctrl-A\": \"selectToSublimeMark\",\n    \"Ctrl-K Ctrl-W\": \"deleteToSublimeMark\",\n    \"Ctrl-K Ctrl-X\": \"swapWithSublimeMark\",\n    \"Ctrl-K Ctrl-Y\": \"sublimeYank\",\n    \"Ctrl-K Ctrl-C\": \"showInCenter\",\n    \"Ctrl-K Ctrl-G\": \"clearBookmarks\",\n    \"Ctrl-K Ctrl-Backspace\": \"delLineLeft\",\n    \"Ctrl-K Ctrl-1\": \"foldAll\",\n    \"Ctrl-K Ctrl-0\": \"unfoldAll\",\n    \"Ctrl-K Ctrl-J\": \"unfoldAll\",\n    \"Ctrl-Alt-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Alt-Down\": \"addCursorToNextLine\",\n    \"Ctrl-F3\": \"findUnder\",\n    \"Shift-Ctrl-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Ctrl-[\": \"fold\",\n    \"Shift-Ctrl-]\": \"unfold\",\n    \"Ctrl-I\": \"findIncremental\",\n    \"Shift-Ctrl-I\": \"findIncrementalReverse\",\n    \"Ctrl-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"pcDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.pcSublime);\n  var mac = keyMap.default == keyMap.macDefault;\n  keyMap.sublime = mac ? keyMap.macSublime : keyMap.pcSublime;\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","cmds","commands","Pos","findPosSubword","doc","start","dir","ch","clipPos","line","getLine","length","state","type","startPos","pos","e","i","next","charAt","cat","isWordChar","toUpperCase","moveSubword","cm","extendSelectionsBy","range","display","shift","extend","empty","head","from","to","goSubwordLeft","goSubwordRight","scrollLineUp","info","getScrollInfo","somethingSelected","visibleBottomLine","lineAtHeight","top","clientHeight","getCursor","execCommand","scrollTo","defaultTextHeight","scrollLineDown","visibleTopLine","splitSelectionByLine","ranges","listSelections","lineRanges","push","anchor","setSelections","singleSelectionTop","setSelection","scroll","selectLine","extended","insertLine","above","isReadOnly","Pass","operation","len","newSelection","last","at","replaceRange","indentLine","insertLineAfter","insertLineBefore","wordAt","end","word","slice","selectNextOccurrence","fullWord","sublimeFindFullWord","sel","cmpPos","text","getRange","query","RegExp","cur","getSearchCursor","found","findNext","firstLine","isSelectedRange","addSelection","skipAndSelectNextOccurrence","prevAnchor","prevHead","filter","addCursorToSelection","newRanges","newAnchor","findPosV","goalColumn","newHead","cursorCoords","left","newRange","addCursorToPrevLine","addCursorToNextLine","mirror","selectBetweenBrackets","opening","scanForBracket","closing","indexOf","selectScope","puncType","test","undefined","goToBracket","getTokenTypeAt","prev","swapLineUp","linesToMove","newSels","lastLine","scrollIntoView","swapLineDown","toggleCommentIndented","toggleComment","indent","joinLines","joined","offset","obj","actual","exec","duplicateLine","rangeCount","sortLines","caseSensitive","direction","toSort","selected","lines","sort","a","b","au","bu","reverseSortLines","sortLinesInsensitive","reverseSortLinesInsensitive","nextBookmark","marks","sublimeBookmarks","current","find","prevBookmark","unshift","pop","toggleBookmark","findMarksAt","findMarks","j","sublimeBookmark","clear","k","splice","markText","clearWhenEmpty","clearBookmarks","selectBookmarks","modifyWordOrSelection","indices","replacements","replaceSelections","smartBackspace","cursors","indentUnit","getOption","cursor","toStartOfLine","column","countColumn","deletePos","findPosH","prevIndent","findColumn","delLineRight","upcaseAtCursor","str","downcaseAtCursor","toLowerCase","setSublimeMark","sublimeMark","setBookmark","selectToSublimeMark","deleteToSublimeMark","tmp","sublimeKilled","swapWithSublimeMark","setCursor","sublimeYank","replaceSelection","showInCenter","bottom","getTarget","findAndGoTo","forward","target","findPrevious","findUnder","findUnderPrevious","findAllUnder","matches","primaryIndex","keyMap","macSublime","normalizeKeyMap","pcSublime","mac","default","macDefault","sublime"],"sources":["C:/Users/User/Downloads/Salary Payments/node_modules/codemirror/keymap/sublime.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// A rough approximation of Sublime Text's keybindings\n// Depends on addon/search/searchcursor.js and optionally addon/dialog/dialogs.js\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"), require(\"../addon/search/searchcursor\"), require(\"../addon/edit/matchbrackets\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\", \"../addon/search/searchcursor\", \"../addon/edit/matchbrackets\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n\n  // This is not exactly Sublime's algorithm. I couldn't make heads or tails of that.\n  function findPosSubword(doc, start, dir) {\n    if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n    var line = doc.getLine(start.line);\n    if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n    var state = \"start\", type, startPos = start.ch;\n    for (var pos = startPos, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n      var next = line.charAt(dir < 0 ? pos - 1 : pos);\n      var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n      if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n      if (state == \"start\") {\n        if (cat != \"o\") { state = \"in\"; type = cat; }\n        else startPos = pos + dir\n      } else if (state == \"in\") {\n        if (type != cat) {\n          if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n          if (type == \"W\" && cat == \"w\" && dir > 0) { // From uppercase to lowercase\n            if (pos == startPos + 1) { type = \"w\"; continue; }\n            else pos--;\n          }\n          break;\n        }\n      }\n    }\n    return Pos(start.line, pos);\n  }\n\n  function moveSubword(cm, dir) {\n    cm.extendSelectionsBy(function(range) {\n      if (cm.display.shift || cm.doc.extend || range.empty())\n        return findPosSubword(cm.doc, range.head, dir);\n      else\n        return dir < 0 ? range.from() : range.to();\n    });\n  }\n\n  cmds.goSubwordLeft = function(cm) { moveSubword(cm, -1); };\n  cmds.goSubwordRight = function(cm) { moveSubword(cm, 1); };\n\n  cmds.scrollLineUp = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n      if (cm.getCursor().line >= visibleBottomLine)\n        cm.execCommand(\"goLineUp\");\n    }\n    cm.scrollTo(null, info.top - cm.defaultTextHeight());\n  };\n  cmds.scrollLineDown = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleTopLine = cm.lineAtHeight(info.top, \"local\")+1;\n      if (cm.getCursor().line <= visibleTopLine)\n        cm.execCommand(\"goLineDown\");\n    }\n    cm.scrollTo(null, info.top + cm.defaultTextHeight());\n  };\n\n  cmds.splitSelectionByLine = function(cm) {\n    var ranges = cm.listSelections(), lineRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      for (var line = from.line; line <= to.line; ++line)\n        if (!(to.line > from.line && line == to.line && to.ch == 0))\n          lineRanges.push({anchor: line == from.line ? from : Pos(line, 0),\n                           head: line == to.line ? to : Pos(line)});\n    }\n    cm.setSelections(lineRanges, 0);\n  };\n\n  cmds.singleSelectionTop = function(cm) {\n    var range = cm.listSelections()[0];\n    cm.setSelection(range.anchor, range.head, {scroll: false});\n  };\n\n  cmds.selectLine = function(cm) {\n    var ranges = cm.listSelections(), extended = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      extended.push({anchor: Pos(range.from().line, 0),\n                     head: Pos(range.to().line + 1, 0)});\n    }\n    cm.setSelections(extended);\n  };\n\n  function insertLine(cm, above) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    cm.operation(function() {\n      var len = cm.listSelections().length, newSelection = [], last = -1;\n      for (var i = 0; i < len; i++) {\n        var head = cm.listSelections()[i].head;\n        if (head.line <= last) continue;\n        var at = Pos(head.line + (above ? 0 : 1), 0);\n        cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n        cm.indentLine(at.line, null, true);\n        newSelection.push({head: at, anchor: at});\n        last = head.line + 1;\n      }\n      cm.setSelections(newSelection);\n    });\n    cm.execCommand(\"indentAuto\");\n  }\n\n  cmds.insertLineAfter = function(cm) { return insertLine(cm, false); };\n\n  cmds.insertLineBefore = function(cm) { return insertLine(cm, true); };\n\n  function wordAt(cm, pos) {\n    var start = pos.ch, end = start, line = cm.getLine(pos.line);\n    while (start && CodeMirror.isWordChar(line.charAt(start - 1))) --start;\n    while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) ++end;\n    return {from: Pos(pos.line, start), to: Pos(pos.line, end), word: line.slice(start, end)};\n  }\n\n  cmds.selectNextOccurrence = function(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      cm.setSelection(word.from, word.to);\n      fullWord = true;\n    } else {\n      var text = cm.getRange(from, to);\n      var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n      var cur = cm.getSearchCursor(query, to);\n      var found = cur.findNext();\n      if (!found) {\n        cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n        found = cur.findNext();\n      }\n      if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to())) return\n      cm.addSelection(cur.from(), cur.to());\n    }\n    if (fullWord)\n      cm.state.sublimeFindFullWord = cm.doc.sel;\n  };\n\n  cmds.skipAndSelectNextOccurrence = function(cm) {\n    var prevAnchor = cm.getCursor(\"anchor\"), prevHead = cm.getCursor(\"head\");\n    cmds.selectNextOccurrence(cm);\n    if (CodeMirror.cmpPos(prevAnchor, prevHead) != 0) {\n      cm.doc.setSelections(cm.doc.listSelections()\n          .filter(function (sel) {\n            return sel.anchor != prevAnchor || sel.head != prevHead;\n          }));\n    }\n  }\n\n  function addCursorToSelection(cm, dir) {\n    var ranges = cm.listSelections(), newRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var newAnchor = cm.findPosV(\n          range.anchor, dir, \"line\", range.anchor.goalColumn);\n      var newHead = cm.findPosV(\n          range.head, dir, \"line\", range.head.goalColumn);\n      newAnchor.goalColumn = range.anchor.goalColumn != null ?\n          range.anchor.goalColumn : cm.cursorCoords(range.anchor, \"div\").left;\n      newHead.goalColumn = range.head.goalColumn != null ?\n          range.head.goalColumn : cm.cursorCoords(range.head, \"div\").left;\n      var newRange = {anchor: newAnchor, head: newHead};\n      newRanges.push(range);\n      newRanges.push(newRange);\n    }\n    cm.setSelections(newRanges);\n  }\n  cmds.addCursorToPrevLine = function(cm) { addCursorToSelection(cm, -1); };\n  cmds.addCursorToNextLine = function(cm) { addCursorToSelection(cm, 1); };\n\n  function isSelectedRange(ranges, from, to) {\n    for (var i = 0; i < ranges.length; i++)\n      if (CodeMirror.cmpPos(ranges[i].from(), from) == 0 &&\n          CodeMirror.cmpPos(ranges[i].to(), to) == 0) return true\n    return false\n  }\n\n  var mirror = \"(){}[]\";\n  function selectBetweenBrackets(cm) {\n    var ranges = cm.listSelections(), newRanges = []\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], pos = range.head, opening = cm.scanForBracket(pos, -1);\n      if (!opening) return false;\n      for (;;) {\n        var closing = cm.scanForBracket(pos, 1);\n        if (!closing) return false;\n        if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n          var startPos = Pos(opening.pos.line, opening.pos.ch + 1);\n          if (CodeMirror.cmpPos(startPos, range.from()) == 0 &&\n              CodeMirror.cmpPos(closing.pos, range.to()) == 0) {\n            opening = cm.scanForBracket(opening.pos, -1);\n            if (!opening) return false;\n          } else {\n            newRanges.push({anchor: startPos, head: closing.pos});\n            break;\n          }\n        }\n        pos = Pos(closing.pos.line, closing.pos.ch + 1);\n      }\n    }\n    cm.setSelections(newRanges);\n    return true;\n  }\n\n  cmds.selectScope = function(cm) {\n    selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n  };\n  cmds.selectBetweenBrackets = function(cm) {\n    if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n  };\n\n  function puncType(type) {\n    return !type ? null : /\\bpunctuation\\b/.test(type) ? type : undefined\n  }\n\n  cmds.goToBracket = function(cm) {\n    cm.extendSelectionsBy(function(range) {\n      var next = cm.scanForBracket(range.head, 1, puncType(cm.getTokenTypeAt(range.head)));\n      if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n      var prev = cm.scanForBracket(range.head, -1, puncType(cm.getTokenTypeAt(Pos(range.head.line, range.head.ch + 1))));\n      return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n    });\n  };\n\n  cmds.swapLineUp = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.firstLine() - 1, newSels = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from().line - 1, to = range.to().line;\n      newSels.push({anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n                    head: Pos(range.head.line - 1, range.head.ch)});\n      if (range.to().ch == 0 && !range.empty()) --to;\n      if (from > at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = 0; i < linesToMove.length; i += 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        if (to > cm.lastLine())\n          cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");\n        else\n          cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.setSelections(newSels);\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.swapLineDown = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.lastLine() + 1;\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var range = ranges[i], from = range.to().line + 1, to = range.from().line;\n      if (range.to().ch == 0 && !range.empty()) from--;\n      if (from < at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = linesToMove.length - 2; i >= 0; i -= 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        if (from == cm.lastLine())\n          cm.replaceRange(\"\", Pos(from - 1), Pos(from), \"+swapLine\");\n        else\n          cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.toggleCommentIndented = function(cm) {\n    cm.toggleComment({ indent: true });\n  }\n\n  cmds.joinLines = function(cm) {\n    var ranges = cm.listSelections(), joined = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from();\n      var start = from.line, end = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == end)\n        end = ranges[++i].to().line;\n      joined.push({start: start, end: end, anchor: !range.empty() && from});\n    }\n    cm.operation(function() {\n      var offset = 0, ranges = [];\n      for (var i = 0; i < joined.length; i++) {\n        var obj = joined[i];\n        var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch), head;\n        for (var line = obj.start; line <= obj.end; line++) {\n          var actual = line - offset;\n          if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n          if (actual < cm.lastLine()) {\n            cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n            ++offset;\n          }\n        }\n        ranges.push({anchor: anchor || head, head: head});\n      }\n      cm.setSelections(ranges, 0);\n    });\n  };\n\n  cmds.duplicateLine = function(cm) {\n    cm.operation(function() {\n      var rangeCount = cm.listSelections().length;\n      for (var i = 0; i < rangeCount; i++) {\n        var range = cm.listSelections()[i];\n        if (range.empty())\n          cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));\n        else\n          cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n\n  function sortLines(cm, caseSensitive, direction) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), toSort = [], selected;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (range.empty()) continue;\n      var from = range.from().line, to = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == to)\n        to = ranges[++i].to().line;\n      if (!ranges[i].to().ch) to--;\n      toSort.push(from, to);\n    }\n    if (toSort.length) selected = true;\n    else toSort.push(cm.firstLine(), cm.lastLine());\n\n    cm.operation(function() {\n      var ranges = [];\n      for (var i = 0; i < toSort.length; i += 2) {\n        var from = toSort[i], to = toSort[i + 1];\n        var start = Pos(from, 0), end = Pos(to);\n        var lines = cm.getRange(start, end, false);\n        if (caseSensitive)\n          lines.sort(function(a, b) { return a < b ? -direction : a == b ? 0 : direction; });\n        else\n          lines.sort(function(a, b) {\n            var au = a.toUpperCase(), bu = b.toUpperCase();\n            if (au != bu) { a = au; b = bu; }\n            return a < b ? -direction : a == b ? 0 : direction;\n          });\n        cm.replaceRange(lines, start, end);\n        if (selected) ranges.push({anchor: start, head: Pos(to + 1, 0)});\n      }\n      if (selected) cm.setSelections(ranges, 0);\n    });\n  }\n\n  cmds.sortLines = function(cm) { sortLines(cm, true, 1); };\n  cmds.reverseSortLines = function(cm) { sortLines(cm, true, -1); };\n  cmds.sortLinesInsensitive = function(cm) { sortLines(cm, false, 1); };\n  cmds.reverseSortLinesInsensitive = function(cm) { sortLines(cm, false, -1); };\n\n  cmds.nextBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      var current = marks.shift();\n      var found = current.find();\n      if (found) {\n        marks.push(current);\n        return cm.setSelection(found.from, found.to);\n      }\n    }\n  };\n\n  cmds.prevBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      marks.unshift(marks.pop());\n      var found = marks[marks.length - 1].find();\n      if (!found)\n        marks.pop();\n      else\n        return cm.setSelection(found.from, found.to);\n    }\n  };\n\n  cmds.toggleBookmark = function(cm) {\n    var ranges = cm.listSelections();\n    var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      var found = ranges[i].empty() ? cm.findMarksAt(from) : cm.findMarks(from, to);\n      for (var j = 0; j < found.length; j++) {\n        if (found[j].sublimeBookmark) {\n          found[j].clear();\n          for (var k = 0; k < marks.length; k++)\n            if (marks[k] == found[j])\n              marks.splice(k--, 1);\n          break;\n        }\n      }\n      if (j == found.length)\n        marks.push(cm.markText(from, to, {sublimeBookmark: true, clearWhenEmpty: false}));\n    }\n  };\n\n  cmds.clearBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) for (var i = 0; i < marks.length; i++) marks[i].clear();\n    marks.length = 0;\n  };\n\n  cmds.selectBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks, ranges = [];\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      var found = marks[i].find();\n      if (!found)\n        marks.splice(i--, 0);\n      else\n        ranges.push({anchor: found.from, head: found.to});\n    }\n    if (ranges.length)\n      cm.setSelections(ranges, 0);\n  };\n\n  function modifyWordOrSelection(cm, mod) {\n    cm.operation(function() {\n      var ranges = cm.listSelections(), indices = [], replacements = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty()) { indices.push(i); replacements.push(\"\"); }\n        else replacements.push(mod(cm.getRange(range.from(), range.to())));\n      }\n      cm.replaceSelections(replacements, \"around\", \"case\");\n      for (var i = indices.length - 1, at; i >= 0; i--) {\n        var range = ranges[indices[i]];\n        if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n        var word = wordAt(cm, range.head);\n        at = word.from;\n        cm.replaceRange(mod(word.word), word.from, word.to);\n      }\n    });\n  }\n\n  cmds.smartBackspace = function(cm) {\n    if (cm.somethingSelected()) return CodeMirror.Pass;\n\n    cm.operation(function() {\n      var cursors = cm.listSelections();\n      var indentUnit = cm.getOption(\"indentUnit\");\n\n      for (var i = cursors.length - 1; i >= 0; i--) {\n        var cursor = cursors[i].head;\n        var toStartOfLine = cm.getRange({line: cursor.line, ch: 0}, cursor);\n        var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n\n        // Delete by one character by default\n        var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n\n        if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n          var prevIndent = new Pos(cursor.line,\n            CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit));\n\n          // Smart delete only if we found a valid prevIndent location\n          if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n        }\n\n        cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n      }\n    });\n  };\n\n  cmds.delLineRight = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = ranges.length - 1; i >= 0; i--)\n        cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.upcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toUpperCase(); });\n  };\n  cmds.downcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toLowerCase(); });\n  };\n\n  cmds.setSublimeMark = function(cm) {\n    if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n    cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n  };\n  cmds.selectToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) cm.setSelection(cm.getCursor(), found);\n  };\n  cmds.deleteToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      var from = cm.getCursor(), to = found;\n      if (CodeMirror.cmpPos(from, to) > 0) { var tmp = to; to = from; from = tmp; }\n      cm.state.sublimeKilled = cm.getRange(from, to);\n      cm.replaceRange(\"\", from, to);\n    }\n  };\n  cmds.swapWithSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n      cm.setCursor(found);\n    }\n  };\n  cmds.sublimeYank = function(cm) {\n    if (cm.state.sublimeKilled != null)\n      cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n  };\n\n  cmds.showInCenter = function(cm) {\n    var pos = cm.cursorCoords(null, \"local\");\n    cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n  };\n\n  function getTarget(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      from = word.from;\n      to = word.to;\n    }\n    return {from: from, to: to, query: cm.getRange(from, to), word: word};\n  }\n\n  function findAndGoTo(cm, forward) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var query = target.query;\n    var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n\n    if (forward ? cur.findNext() : cur.findPrevious()) {\n      cm.setSelection(cur.from(), cur.to());\n    } else {\n      cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0)\n                                              : cm.clipPos(Pos(cm.lastLine())));\n      if (forward ? cur.findNext() : cur.findPrevious())\n        cm.setSelection(cur.from(), cur.to());\n      else if (target.word)\n        cm.setSelection(target.from, target.to);\n    }\n  };\n  cmds.findUnder = function(cm) { findAndGoTo(cm, true); };\n  cmds.findUnderPrevious = function(cm) { findAndGoTo(cm,false); };\n  cmds.findAllUnder = function(cm) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var cur = cm.getSearchCursor(target.query);\n    var matches = [];\n    var primaryIndex = -1;\n    while (cur.findNext()) {\n      matches.push({anchor: cur.from(), head: cur.to()});\n      if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch)\n        primaryIndex++;\n    }\n    cm.setSelections(matches, primaryIndex);\n  };\n\n\n  var keyMap = CodeMirror.keyMap;\n  keyMap.macSublime = {\n    \"Cmd-Left\": \"goLineStartSmart\",\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-Left\": \"goSubwordLeft\",\n    \"Ctrl-Right\": \"goSubwordRight\",\n    \"Ctrl-Alt-Up\": \"scrollLineUp\",\n    \"Ctrl-Alt-Down\": \"scrollLineDown\",\n    \"Cmd-L\": \"selectLine\",\n    \"Shift-Cmd-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Cmd-Enter\": \"insertLineAfter\",\n    \"Shift-Cmd-Enter\": \"insertLineBefore\",\n    \"Cmd-D\": \"selectNextOccurrence\",\n    \"Shift-Cmd-Space\": \"selectScope\",\n    \"Shift-Cmd-M\": \"selectBetweenBrackets\",\n    \"Cmd-M\": \"goToBracket\",\n    \"Cmd-Ctrl-Up\": \"swapLineUp\",\n    \"Cmd-Ctrl-Down\": \"swapLineDown\",\n    \"Cmd-/\": \"toggleCommentIndented\",\n    \"Cmd-J\": \"joinLines\",\n    \"Shift-Cmd-D\": \"duplicateLine\",\n    \"F5\": \"sortLines\",\n    \"Shift-F5\": \"reverseSortLines\",\n    \"Cmd-F5\": \"sortLinesInsensitive\",\n    \"Shift-Cmd-F5\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Cmd-F2\": \"toggleBookmark\",\n    \"Shift-Cmd-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Cmd-K Cmd-D\": \"skipAndSelectNextOccurrence\",\n    \"Cmd-K Cmd-K\": \"delLineRight\",\n    \"Cmd-K Cmd-U\": \"upcaseAtCursor\",\n    \"Cmd-K Cmd-L\": \"downcaseAtCursor\",\n    \"Cmd-K Cmd-Space\": \"setSublimeMark\",\n    \"Cmd-K Cmd-A\": \"selectToSublimeMark\",\n    \"Cmd-K Cmd-W\": \"deleteToSublimeMark\",\n    \"Cmd-K Cmd-X\": \"swapWithSublimeMark\",\n    \"Cmd-K Cmd-Y\": \"sublimeYank\",\n    \"Cmd-K Cmd-C\": \"showInCenter\",\n    \"Cmd-K Cmd-G\": \"clearBookmarks\",\n    \"Cmd-K Cmd-Backspace\": \"delLineLeft\",\n    \"Cmd-K Cmd-1\": \"foldAll\",\n    \"Cmd-K Cmd-0\": \"unfoldAll\",\n    \"Cmd-K Cmd-J\": \"unfoldAll\",\n    \"Ctrl-Shift-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Shift-Down\": \"addCursorToNextLine\",\n    \"Cmd-F3\": \"findUnder\",\n    \"Shift-Cmd-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Cmd-[\": \"fold\",\n    \"Shift-Cmd-]\": \"unfold\",\n    \"Cmd-I\": \"findIncremental\",\n    \"Shift-Cmd-I\": \"findIncrementalReverse\",\n    \"Cmd-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"macDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.macSublime);\n\n  keyMap.pcSublime = {\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-T\": \"transposeChars\",\n    \"Alt-Left\": \"goSubwordLeft\",\n    \"Alt-Right\": \"goSubwordRight\",\n    \"Ctrl-Up\": \"scrollLineUp\",\n    \"Ctrl-Down\": \"scrollLineDown\",\n    \"Ctrl-L\": \"selectLine\",\n    \"Shift-Ctrl-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Ctrl-Enter\": \"insertLineAfter\",\n    \"Shift-Ctrl-Enter\": \"insertLineBefore\",\n    \"Ctrl-D\": \"selectNextOccurrence\",\n    \"Shift-Ctrl-Space\": \"selectScope\",\n    \"Shift-Ctrl-M\": \"selectBetweenBrackets\",\n    \"Ctrl-M\": \"goToBracket\",\n    \"Shift-Ctrl-Up\": \"swapLineUp\",\n    \"Shift-Ctrl-Down\": \"swapLineDown\",\n    \"Ctrl-/\": \"toggleCommentIndented\",\n    \"Ctrl-J\": \"joinLines\",\n    \"Shift-Ctrl-D\": \"duplicateLine\",\n    \"F9\": \"sortLines\",\n    \"Shift-F9\": \"reverseSortLines\",\n    \"Ctrl-F9\": \"sortLinesInsensitive\",\n    \"Shift-Ctrl-F9\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Ctrl-F2\": \"toggleBookmark\",\n    \"Shift-Ctrl-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Ctrl-K Ctrl-D\": \"skipAndSelectNextOccurrence\",\n    \"Ctrl-K Ctrl-K\": \"delLineRight\",\n    \"Ctrl-K Ctrl-U\": \"upcaseAtCursor\",\n    \"Ctrl-K Ctrl-L\": \"downcaseAtCursor\",\n    \"Ctrl-K Ctrl-Space\": \"setSublimeMark\",\n    \"Ctrl-K Ctrl-A\": \"selectToSublimeMark\",\n    \"Ctrl-K Ctrl-W\": \"deleteToSublimeMark\",\n    \"Ctrl-K Ctrl-X\": \"swapWithSublimeMark\",\n    \"Ctrl-K Ctrl-Y\": \"sublimeYank\",\n    \"Ctrl-K Ctrl-C\": \"showInCenter\",\n    \"Ctrl-K Ctrl-G\": \"clearBookmarks\",\n    \"Ctrl-K Ctrl-Backspace\": \"delLineLeft\",\n    \"Ctrl-K Ctrl-1\": \"foldAll\",\n    \"Ctrl-K Ctrl-0\": \"unfoldAll\",\n    \"Ctrl-K Ctrl-J\": \"unfoldAll\",\n    \"Ctrl-Alt-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Alt-Down\": \"addCursorToNextLine\",\n    \"Ctrl-F3\": \"findUnder\",\n    \"Shift-Ctrl-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Ctrl-[\": \"fold\",\n    \"Shift-Ctrl-]\": \"unfold\",\n    \"Ctrl-I\": \"findIncremental\",\n    \"Shift-Ctrl-I\": \"findIncrementalReverse\",\n    \"Ctrl-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"pcDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.pcSublime);\n\n  var mac = keyMap.default == keyMap.macDefault;\n  keyMap.sublime = mac ? keyMap.macSublime : keyMap.pcSublime;\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}