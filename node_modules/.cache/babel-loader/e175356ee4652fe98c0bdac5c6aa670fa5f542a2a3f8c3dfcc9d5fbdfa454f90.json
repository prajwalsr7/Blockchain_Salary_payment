{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"diff\", function () {\n    var TOKEN_NAMES = {\n      '+': 'positive',\n      '-': 'negative',\n      '@': 'meta'\n    };\n    return {\n      token: function (stream) {\n        var tw_pos = stream.string.search(/[\\t ]+?$/);\n        if (!stream.sol() || tw_pos === 0) {\n          stream.skipToEnd();\n          return (\"error \" + (TOKEN_NAMES[stream.string.charAt(0)] || '')).replace(/ $/, '');\n        }\n        var token_name = TOKEN_NAMES[stream.peek()] || stream.skipToEnd();\n        if (tw_pos === -1) {\n          stream.skipToEnd();\n        } else {\n          stream.pos = tw_pos;\n        }\n        return token_name;\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-diff\", \"diff\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","TOKEN_NAMES","token","stream","tw_pos","string","search","sol","skipToEnd","charAt","replace","token_name","peek","pos","defineMIME"],"sources":["C:/Users/User/Downloads/Multisender-App-main/node_modules/codemirror/mode/diff/diff.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"diff\", function() {\n\n  var TOKEN_NAMES = {\n    '+': 'positive',\n    '-': 'negative',\n    '@': 'meta'\n  };\n\n  return {\n    token: function(stream) {\n      var tw_pos = stream.string.search(/[\\t ]+?$/);\n\n      if (!stream.sol() || tw_pos === 0) {\n        stream.skipToEnd();\n        return (\"error \" + (\n          TOKEN_NAMES[stream.string.charAt(0)] || '')).replace(/ $/, '');\n      }\n\n      var token_name = TOKEN_NAMES[stream.peek()] || stream.skipToEnd();\n\n      if (tw_pos === -1) {\n        stream.skipToEnd();\n      } else {\n        stream.pos = tw_pos;\n      }\n\n      return token_name;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-diff\", \"diff\");\n\n});\n"],"mappings":"AAAA;AACA;;AAEA,CAAC,UAASA,GAAG,EAAE;EACb,IAAI,OAAOC,OAAO,IAAI,QAAQ,IAAI,OAAOC,MAAM,IAAI,QAAQ;IAAE;IAC3DF,GAAG,CAACG,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,KAClC,IAAI,OAAOC,MAAM,IAAI,UAAU,IAAIA,MAAM,CAACC,GAAG;IAAE;IAClDD,MAAM,CAAC,CAAC,sBAAsB,CAAC,EAAEJ,GAAG,CAAC,CAAC;IACnC;IACHA,GAAG,CAACM,UAAU,CAAC;AACnB,CAAC,EAAE,UAASA,UAAU,EAAE;EACxB,YAAY;;EAEZA,UAAU,CAACC,UAAU,CAAC,MAAM,EAAE,YAAW;IAEvC,IAAIC,WAAW,GAAG;MAChB,GAAG,EAAE,UAAU;MACf,GAAG,EAAE,UAAU;MACf,GAAG,EAAE;IACP,CAAC;IAED,OAAO;MACLC,KAAK,EAAE,SAAAA,CAASC,MAAM,EAAE;QACtB,IAAIC,MAAM,GAAGD,MAAM,CAACE,MAAM,CAACC,MAAM,CAAC,UAAU,CAAC;QAE7C,IAAI,CAACH,MAAM,CAACI,GAAG,CAAC,CAAC,IAAIH,MAAM,KAAK,CAAC,EAAE;UACjCD,MAAM,CAACK,SAAS,CAAC,CAAC;UAClB,OAAO,CAAC,QAAQ,IACdP,WAAW,CAACE,MAAM,CAACE,MAAM,CAACI,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAEC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;QAClE;QAEA,IAAIC,UAAU,GAAGV,WAAW,CAACE,MAAM,CAACS,IAAI,CAAC,CAAC,CAAC,IAAIT,MAAM,CAACK,SAAS,CAAC,CAAC;QAEjE,IAAIJ,MAAM,KAAK,CAAC,CAAC,EAAE;UACjBD,MAAM,CAACK,SAAS,CAAC,CAAC;QACpB,CAAC,MAAM;UACLL,MAAM,CAACU,GAAG,GAAGT,MAAM;QACrB;QAEA,OAAOO,UAAU;MACnB;IACF,CAAC;EACH,CAAC,CAAC;EAEFZ,UAAU,CAACe,UAAU,CAAC,aAAa,EAAE,MAAM,CAAC;AAE5C,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}