{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\", \"i\");\n  }\n  ;\n  var keywordArray = [\"package\", \"message\", \"import\", \"syntax\", \"required\", \"optional\", \"repeated\", \"reserved\", \"default\", \"extensions\", \"packed\", \"bool\", \"bytes\", \"double\", \"enum\", \"float\", \"string\", \"int32\", \"int64\", \"uint32\", \"uint64\", \"sint32\", \"sint64\", \"fixed32\", \"fixed64\", \"sfixed32\", \"sfixed64\", \"option\", \"service\", \"rpc\", \"returns\"];\n  var keywords = wordRegexp(keywordArray);\n  CodeMirror.registerHelper(\"hintWords\", \"protobuf\", keywordArray);\n  var identifiers = new RegExp(\"^[_A-Za-z\\xa1-\\uffff][_A-Za-z0-9\\xa1-\\uffff]*\");\n  function tokenBase(stream) {\n    // whitespaces\n    if (stream.eatSpace()) return null;\n\n    // Handle one line Comments\n    if (stream.match(\"//\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    // Handle Number Literals\n    if (stream.match(/^[0-9\\.+-]/, false)) {\n      if (stream.match(/^[+-]?0x[0-9a-fA-F]+/)) return \"number\";\n      if (stream.match(/^[+-]?\\d*\\.\\d+([EeDd][+-]?\\d+)?/)) return \"number\";\n      if (stream.match(/^[+-]?\\d+([EeDd][+-]?\\d+)?/)) return \"number\";\n    }\n\n    // Handle Strings\n    if (stream.match(/^\"([^\"]|(\"\"))*\"/)) {\n      return \"string\";\n    }\n    if (stream.match(/^'([^']|(''))*'/)) {\n      return \"string\";\n    }\n\n    // Handle words\n    if (stream.match(keywords)) {\n      return \"keyword\";\n    }\n    if (stream.match(identifiers)) {\n      return \"variable\";\n    }\n    ;\n\n    // Handle non-detected items\n    stream.next();\n    return null;\n  }\n  ;\n  CodeMirror.defineMode(\"protobuf\", function () {\n    return {\n      token: tokenBase,\n      fold: \"brace\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-protobuf\", \"protobuf\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","wordRegexp","words","RegExp","join","keywordArray","keywords","registerHelper","identifiers","tokenBase","stream","eatSpace","match","skipToEnd","next","defineMode","token","fold","defineMIME"],"sources":["C:/Users/User/Downloads/Salary Payments/node_modules/codemirror/mode/protobuf/protobuf.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function wordRegexp(words) {\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\", \"i\");\n  };\n\n  var keywordArray = [\n    \"package\", \"message\", \"import\", \"syntax\",\n    \"required\", \"optional\", \"repeated\", \"reserved\", \"default\", \"extensions\", \"packed\",\n    \"bool\", \"bytes\", \"double\", \"enum\", \"float\", \"string\",\n    \"int32\", \"int64\", \"uint32\", \"uint64\", \"sint32\", \"sint64\", \"fixed32\", \"fixed64\", \"sfixed32\", \"sfixed64\",\n    \"option\", \"service\", \"rpc\", \"returns\"\n  ];\n  var keywords = wordRegexp(keywordArray);\n\n  CodeMirror.registerHelper(\"hintWords\", \"protobuf\", keywordArray);\n\n  var identifiers = new RegExp(\"^[_A-Za-z\\xa1-\\uffff][_A-Za-z0-9\\xa1-\\uffff]*\");\n\n  function tokenBase(stream) {\n    // whitespaces\n    if (stream.eatSpace()) return null;\n\n    // Handle one line Comments\n    if (stream.match(\"//\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n\n    // Handle Number Literals\n    if (stream.match(/^[0-9\\.+-]/, false)) {\n      if (stream.match(/^[+-]?0x[0-9a-fA-F]+/))\n        return \"number\";\n      if (stream.match(/^[+-]?\\d*\\.\\d+([EeDd][+-]?\\d+)?/))\n        return \"number\";\n      if (stream.match(/^[+-]?\\d+([EeDd][+-]?\\d+)?/))\n        return \"number\";\n    }\n\n    // Handle Strings\n    if (stream.match(/^\"([^\"]|(\"\"))*\"/)) { return \"string\"; }\n    if (stream.match(/^'([^']|(''))*'/)) { return \"string\"; }\n\n    // Handle words\n    if (stream.match(keywords)) { return \"keyword\"; }\n    if (stream.match(identifiers)) { return \"variable\"; } ;\n\n    // Handle non-detected items\n    stream.next();\n    return null;\n  };\n\n  CodeMirror.defineMode(\"protobuf\", function() {\n    return {\n      token: tokenBase,\n      fold: \"brace\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-protobuf\", \"protobuf\");\n});\n"],"mappings":"AAAA;AACA;;AAEA,CAAC,UAASA,GAAG,EAAE;EACb,IAAI,OAAOC,OAAO,IAAI,QAAQ,IAAI,OAAOC,MAAM,IAAI,QAAQ;IAAE;IAC3DF,GAAG,CAACG,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC,KAClC,IAAI,OAAOC,MAAM,IAAI,UAAU,IAAIA,MAAM,CAACC,GAAG;IAAE;IAClDD,MAAM,CAAC,CAAC,sBAAsB,CAAC,EAAEJ,GAAG,CAAC,CAAC;IACnC;IACHA,GAAG,CAACM,UAAU,CAAC;AACnB,CAAC,EAAE,UAASA,UAAU,EAAE;EACtB,YAAY;;EAEZ,SAASC,UAAUA,CAACC,KAAK,EAAE;IACzB,OAAO,IAAIC,MAAM,CAAC,KAAK,GAAGD,KAAK,CAACE,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO,EAAE,GAAG,CAAC;EAC7D;EAAC;EAED,IAAIC,YAAY,GAAG,CACjB,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EACxC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,YAAY,EAAE,QAAQ,EACjF,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EACpD,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EACtG,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,CACtC;EACD,IAAIC,QAAQ,GAAGL,UAAU,CAACI,YAAY,CAAC;EAEvCL,UAAU,CAACO,cAAc,CAAC,WAAW,EAAE,UAAU,EAAEF,YAAY,CAAC;EAEhE,IAAIG,WAAW,GAAG,IAAIL,MAAM,CAAC,+CAA+C,CAAC;EAE7E,SAASM,SAASA,CAACC,MAAM,EAAE;IACzB;IACA,IAAIA,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,OAAO,IAAI;;IAElC;IACA,IAAID,MAAM,CAACE,KAAK,CAAC,IAAI,CAAC,EAAE;MACtBF,MAAM,CAACG,SAAS,CAAC,CAAC;MAClB,OAAO,SAAS;IAClB;;IAEA;IACA,IAAIH,MAAM,CAACE,KAAK,CAAC,YAAY,EAAE,KAAK,CAAC,EAAE;MACrC,IAAIF,MAAM,CAACE,KAAK,CAAC,sBAAsB,CAAC,EACtC,OAAO,QAAQ;MACjB,IAAIF,MAAM,CAACE,KAAK,CAAC,iCAAiC,CAAC,EACjD,OAAO,QAAQ;MACjB,IAAIF,MAAM,CAACE,KAAK,CAAC,4BAA4B,CAAC,EAC5C,OAAO,QAAQ;IACnB;;IAEA;IACA,IAAIF,MAAM,CAACE,KAAK,CAAC,iBAAiB,CAAC,EAAE;MAAE,OAAO,QAAQ;IAAE;IACxD,IAAIF,MAAM,CAACE,KAAK,CAAC,iBAAiB,CAAC,EAAE;MAAE,OAAO,QAAQ;IAAE;;IAExD;IACA,IAAIF,MAAM,CAACE,KAAK,CAACN,QAAQ,CAAC,EAAE;MAAE,OAAO,SAAS;IAAE;IAChD,IAAII,MAAM,CAACE,KAAK,CAACJ,WAAW,CAAC,EAAE;MAAE,OAAO,UAAU;IAAE;IAAE;;IAEtD;IACAE,MAAM,CAACI,IAAI,CAAC,CAAC;IACb,OAAO,IAAI;EACb;EAAC;EAEDd,UAAU,CAACe,UAAU,CAAC,UAAU,EAAE,YAAW;IAC3C,OAAO;MACLC,KAAK,EAAEP,SAAS;MAChBQ,IAAI,EAAE;IACR,CAAC;EACH,CAAC,CAAC;EAEFjB,UAAU,CAACkB,UAAU,CAAC,iBAAiB,EAAE,UAAU,CAAC;AACtD,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}