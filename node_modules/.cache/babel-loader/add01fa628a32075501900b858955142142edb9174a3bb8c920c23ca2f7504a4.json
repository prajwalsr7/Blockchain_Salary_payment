{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"), require(\"../../addon/mode/overlay\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\", \"../../addon/mode/overlay\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"tornado:inner\", function () {\n    var keywords = [\"and\", \"as\", \"assert\", \"autoescape\", \"block\", \"break\", \"class\", \"comment\", \"context\", \"continue\", \"datetime\", \"def\", \"del\", \"elif\", \"else\", \"end\", \"escape\", \"except\", \"exec\", \"extends\", \"false\", \"finally\", \"for\", \"from\", \"global\", \"if\", \"import\", \"in\", \"include\", \"is\", \"json_encode\", \"lambda\", \"length\", \"linkify\", \"load\", \"module\", \"none\", \"not\", \"or\", \"pass\", \"print\", \"put\", \"raise\", \"raw\", \"return\", \"self\", \"set\", \"squeeze\", \"super\", \"true\", \"try\", \"url_escape\", \"while\", \"with\", \"without\", \"xhtml_escape\", \"yield\"];\n    keywords = new RegExp(\"^((\" + keywords.join(\")|(\") + \"))\\\\b\");\n    function tokenBase(stream, state) {\n      stream.eatWhile(/[^\\{]/);\n      var ch = stream.next();\n      if (ch == \"{\") {\n        if (ch = stream.eat(/\\{|%|#/)) {\n          state.tokenize = inTag(ch);\n          return \"tag\";\n        }\n      }\n    }\n    function inTag(close) {\n      if (close == \"{\") {\n        close = \"}\";\n      }\n      return function (stream, state) {\n        var ch = stream.next();\n        if (ch == close && stream.eat(\"}\")) {\n          state.tokenize = tokenBase;\n          return \"tag\";\n        }\n        if (stream.match(keywords)) {\n          return \"keyword\";\n        }\n        return close == \"#\" ? \"comment\" : \"string\";\n      };\n    }\n    return {\n      startState: function () {\n        return {\n          tokenize: tokenBase\n        };\n      },\n      token: function (stream, state) {\n        return state.tokenize(stream, state);\n      }\n    };\n  });\n  CodeMirror.defineMode(\"tornado\", function (config) {\n    var htmlBase = CodeMirror.getMode(config, \"text/html\");\n    var tornadoInner = CodeMirror.getMode(config, \"tornado:inner\");\n    return CodeMirror.overlayMode(htmlBase, tornadoInner);\n  });\n  CodeMirror.defineMIME(\"text/x-tornado\", \"tornado\");\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","keywords","RegExp","join","tokenBase","stream","state","eatWhile","ch","next","eat","tokenize","inTag","close","match","startState","token","config","htmlBase","getMode","tornadoInner","overlayMode","defineMIME"],"sources":["C:/Users/User/Downloads/Multisender-App-main/node_modules/codemirror/mode/tornado/tornado.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"),\n        require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\",\n            \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"tornado:inner\", function() {\n    var keywords = [\"and\",\"as\",\"assert\",\"autoescape\",\"block\",\"break\",\"class\",\"comment\",\"context\",\n                    \"continue\",\"datetime\",\"def\",\"del\",\"elif\",\"else\",\"end\",\"escape\",\"except\",\n                    \"exec\",\"extends\",\"false\",\"finally\",\"for\",\"from\",\"global\",\"if\",\"import\",\"in\",\n                    \"include\",\"is\",\"json_encode\",\"lambda\",\"length\",\"linkify\",\"load\",\"module\",\n                    \"none\",\"not\",\"or\",\"pass\",\"print\",\"put\",\"raise\",\"raw\",\"return\",\"self\",\"set\",\n                    \"squeeze\",\"super\",\"true\",\"try\",\"url_escape\",\"while\",\"with\",\"without\",\"xhtml_escape\",\"yield\"];\n    keywords = new RegExp(\"^((\" + keywords.join(\")|(\") + \"))\\\\b\");\n\n    function tokenBase (stream, state) {\n      stream.eatWhile(/[^\\{]/);\n      var ch = stream.next();\n      if (ch == \"{\") {\n        if (ch = stream.eat(/\\{|%|#/)) {\n          state.tokenize = inTag(ch);\n          return \"tag\";\n        }\n      }\n    }\n    function inTag (close) {\n      if (close == \"{\") {\n        close = \"}\";\n      }\n      return function (stream, state) {\n        var ch = stream.next();\n        if ((ch == close) && stream.eat(\"}\")) {\n          state.tokenize = tokenBase;\n          return \"tag\";\n        }\n        if (stream.match(keywords)) {\n          return \"keyword\";\n        }\n        return close == \"#\" ? \"comment\" : \"string\";\n      };\n    }\n    return {\n      startState: function () {\n        return {tokenize: tokenBase};\n      },\n      token: function (stream, state) {\n        return state.tokenize(stream, state);\n      }\n    };\n  });\n\n  CodeMirror.defineMode(\"tornado\", function(config) {\n    var htmlBase = CodeMirror.getMode(config, \"text/html\");\n    var tornadoInner = CodeMirror.getMode(config, \"tornado:inner\");\n    return CodeMirror.overlayMode(htmlBase, tornadoInner);\n  });\n\n  CodeMirror.defineMIME(\"text/x-tornado\", \"tornado\");\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}