{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\")\n    // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd)\n    // AMD\n    define([\"../../lib/codemirror\"], mod);else\n    // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode('smalltalk', function (config) {\n    var specialChars = /[+\\-\\/\\\\*~<>=@%|&?!.,:;^]/;\n    var keywords = /true|false|nil|self|super|thisContext/;\n    var Context = function (tokenizer, parent) {\n      this.next = tokenizer;\n      this.parent = parent;\n    };\n    var Token = function (name, context, eos) {\n      this.name = name;\n      this.context = context;\n      this.eos = eos;\n    };\n    var State = function () {\n      this.context = new Context(next, null);\n      this.expectVariable = true;\n      this.indentation = 0;\n      this.userIndentationDelta = 0;\n    };\n    State.prototype.userIndent = function (indentation) {\n      this.userIndentationDelta = indentation > 0 ? indentation / config.indentUnit - this.indentation : 0;\n    };\n    var next = function (stream, context, state) {\n      var token = new Token(null, context, false);\n      var aChar = stream.next();\n      if (aChar === '\"') {\n        token = nextComment(stream, new Context(nextComment, context));\n      } else if (aChar === '\\'') {\n        token = nextString(stream, new Context(nextString, context));\n      } else if (aChar === '#') {\n        if (stream.peek() === '\\'') {\n          stream.next();\n          token = nextSymbol(stream, new Context(nextSymbol, context));\n        } else {\n          if (stream.eatWhile(/[^\\s.{}\\[\\]()]/)) token.name = 'string-2';else token.name = 'meta';\n        }\n      } else if (aChar === '$') {\n        if (stream.next() === '<') {\n          stream.eatWhile(/[^\\s>]/);\n          stream.next();\n        }\n        token.name = 'string-2';\n      } else if (aChar === '|' && state.expectVariable) {\n        token.context = new Context(nextTemporaries, context);\n      } else if (/[\\[\\]{}()]/.test(aChar)) {\n        token.name = 'bracket';\n        token.eos = /[\\[{(]/.test(aChar);\n        if (aChar === '[') {\n          state.indentation++;\n        } else if (aChar === ']') {\n          state.indentation = Math.max(0, state.indentation - 1);\n        }\n      } else if (specialChars.test(aChar)) {\n        stream.eatWhile(specialChars);\n        token.name = 'operator';\n        token.eos = aChar !== ';'; // ; cascaded message expression\n      } else if (/\\d/.test(aChar)) {\n        stream.eatWhile(/[\\w\\d]/);\n        token.name = 'number';\n      } else if (/[\\w_]/.test(aChar)) {\n        stream.eatWhile(/[\\w\\d_]/);\n        token.name = state.expectVariable ? keywords.test(stream.current()) ? 'keyword' : 'variable' : null;\n      } else {\n        token.eos = state.expectVariable;\n      }\n      return token;\n    };\n    var nextComment = function (stream, context) {\n      stream.eatWhile(/[^\"]/);\n      return new Token('comment', stream.eat('\"') ? context.parent : context, true);\n    };\n    var nextString = function (stream, context) {\n      stream.eatWhile(/[^']/);\n      return new Token('string', stream.eat('\\'') ? context.parent : context, false);\n    };\n    var nextSymbol = function (stream, context) {\n      stream.eatWhile(/[^']/);\n      return new Token('string-2', stream.eat('\\'') ? context.parent : context, false);\n    };\n    var nextTemporaries = function (stream, context) {\n      var token = new Token(null, context, false);\n      var aChar = stream.next();\n      if (aChar === '|') {\n        token.context = context.parent;\n        token.eos = true;\n      } else {\n        stream.eatWhile(/[^|]/);\n        token.name = 'variable';\n      }\n      return token;\n    };\n    return {\n      startState: function () {\n        return new State();\n      },\n      token: function (stream, state) {\n        state.userIndent(stream.indentation());\n        if (stream.eatSpace()) {\n          return null;\n        }\n        var token = state.context.next(stream, state.context, state);\n        state.context = token.context;\n        state.expectVariable = token.eos;\n        return token.name;\n      },\n      blankLine: function (state) {\n        state.userIndent(0);\n      },\n      indent: function (state, textAfter) {\n        var i = state.context.next === next && textAfter && textAfter.charAt(0) === ']' ? -1 : state.userIndentationDelta;\n        return (state.indentation + i) * config.indentUnit;\n      },\n      electricChars: ']'\n    };\n  });\n  CodeMirror.defineMIME('text/x-stsrc', {\n    name: 'smalltalk'\n  });\n});","map":{"version":3,"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","specialChars","keywords","Context","tokenizer","parent","next","Token","name","context","eos","State","expectVariable","indentation","userIndentationDelta","prototype","userIndent","indentUnit","stream","state","token","aChar","nextComment","nextString","peek","nextSymbol","eatWhile","nextTemporaries","test","Math","max","current","eat","startState","eatSpace","blankLine","indent","textAfter","i","charAt","electricChars","defineMIME"],"sources":["C:/Users/User/Downloads/Salary Payments/node_modules/codemirror/mode/smalltalk/smalltalk.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('smalltalk', function(config) {\n\n  var specialChars = /[+\\-\\/\\\\*~<>=@%|&?!.,:;^]/;\n  var keywords = /true|false|nil|self|super|thisContext/;\n\n  var Context = function(tokenizer, parent) {\n    this.next = tokenizer;\n    this.parent = parent;\n  };\n\n  var Token = function(name, context, eos) {\n    this.name = name;\n    this.context = context;\n    this.eos = eos;\n  };\n\n  var State = function() {\n    this.context = new Context(next, null);\n    this.expectVariable = true;\n    this.indentation = 0;\n    this.userIndentationDelta = 0;\n  };\n\n  State.prototype.userIndent = function(indentation) {\n    this.userIndentationDelta = indentation > 0 ? (indentation / config.indentUnit - this.indentation) : 0;\n  };\n\n  var next = function(stream, context, state) {\n    var token = new Token(null, context, false);\n    var aChar = stream.next();\n\n    if (aChar === '\"') {\n      token = nextComment(stream, new Context(nextComment, context));\n\n    } else if (aChar === '\\'') {\n      token = nextString(stream, new Context(nextString, context));\n\n    } else if (aChar === '#') {\n      if (stream.peek() === '\\'') {\n        stream.next();\n        token = nextSymbol(stream, new Context(nextSymbol, context));\n      } else {\n        if (stream.eatWhile(/[^\\s.{}\\[\\]()]/))\n          token.name = 'string-2';\n        else\n          token.name = 'meta';\n      }\n\n    } else if (aChar === '$') {\n      if (stream.next() === '<') {\n        stream.eatWhile(/[^\\s>]/);\n        stream.next();\n      }\n      token.name = 'string-2';\n\n    } else if (aChar === '|' && state.expectVariable) {\n      token.context = new Context(nextTemporaries, context);\n\n    } else if (/[\\[\\]{}()]/.test(aChar)) {\n      token.name = 'bracket';\n      token.eos = /[\\[{(]/.test(aChar);\n\n      if (aChar === '[') {\n        state.indentation++;\n      } else if (aChar === ']') {\n        state.indentation = Math.max(0, state.indentation - 1);\n      }\n\n    } else if (specialChars.test(aChar)) {\n      stream.eatWhile(specialChars);\n      token.name = 'operator';\n      token.eos = aChar !== ';'; // ; cascaded message expression\n\n    } else if (/\\d/.test(aChar)) {\n      stream.eatWhile(/[\\w\\d]/);\n      token.name = 'number';\n\n    } else if (/[\\w_]/.test(aChar)) {\n      stream.eatWhile(/[\\w\\d_]/);\n      token.name = state.expectVariable ? (keywords.test(stream.current()) ? 'keyword' : 'variable') : null;\n\n    } else {\n      token.eos = state.expectVariable;\n    }\n\n    return token;\n  };\n\n  var nextComment = function(stream, context) {\n    stream.eatWhile(/[^\"]/);\n    return new Token('comment', stream.eat('\"') ? context.parent : context, true);\n  };\n\n  var nextString = function(stream, context) {\n    stream.eatWhile(/[^']/);\n    return new Token('string', stream.eat('\\'') ? context.parent : context, false);\n  };\n\n  var nextSymbol = function(stream, context) {\n    stream.eatWhile(/[^']/);\n    return new Token('string-2', stream.eat('\\'') ? context.parent : context, false);\n  };\n\n  var nextTemporaries = function(stream, context) {\n    var token = new Token(null, context, false);\n    var aChar = stream.next();\n\n    if (aChar === '|') {\n      token.context = context.parent;\n      token.eos = true;\n\n    } else {\n      stream.eatWhile(/[^|]/);\n      token.name = 'variable';\n    }\n\n    return token;\n  };\n\n  return {\n    startState: function() {\n      return new State;\n    },\n\n    token: function(stream, state) {\n      state.userIndent(stream.indentation());\n\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      var token = state.context.next(stream, state.context, state);\n      state.context = token.context;\n      state.expectVariable = token.eos;\n\n      return token.name;\n    },\n\n    blankLine: function(state) {\n      state.userIndent(0);\n    },\n\n    indent: function(state, textAfter) {\n      var i = state.context.next === next && textAfter && textAfter.charAt(0) === ']' ? -1 : state.userIndentationDelta;\n      return (state.indentation + i) * config.indentUnit;\n    },\n\n    electricChars: ']'\n  };\n\n});\n\nCodeMirror.defineMIME('text/x-stsrc', {name: 'smalltalk'});\n\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}